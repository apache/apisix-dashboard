{
	"main": {
		"proto": {
			"additionalProperties": false,
			"properties": {
				"content": {
					"minLength": 1,
					"type": "string",
					"maxLength": 1048576
				}
			},
			"type": "object",
			"required": ["content"]
		},
		"upstream_hash_header_schema": {
			"type": "string",
			"pattern": "^[a-zA-Z0-9-_]+$"
		},
		"ssl": {
			"additionalProperties": false,
			"properties": {
				"validity_start": {
					"type": "integer"
				},
				"keys": {
					"type": "array",
					"items": {
						"minLength": 128,
						"type": "string",
						"maxLength": 65536
					}
				},
				"validity_end": {
					"type": "integer"
				},
				"certs": {
					"type": "array",
					"items": {
						"minLength": 128,
						"type": "string",
						"maxLength": 65536
					}
				},
				"snis": {
					"type": "array",
					"items": {
						"type": "string",
						"pattern": "^\\*?[0-9a-zA-Z-.]+$"
					}
				},
				"cert": {
					"minLength": 128,
					"type": "string",
					"maxLength": 65536
				},
				"labels": {
					"maxProperties": 16,
					"description": "key\/value pairs to specify attributes",
					"type": "object",
					"patternProperties": {
						".*": {
							"type": "string",
							"pattern": "^[a-zA-Z0-9-_.]+$",
							"description": "value of label",
							"minLength": 1,
							"maxLength": 64
						}
					}
				},
				"id": {
					"anyOf": [{
						"pattern": "^[a-zA-Z0-9-_.]+$",
						"minLength": 1,
						"type": "string",
						"maxLength": 64
					}, {
						"type": "integer",
						"minimum": 1
					}]
				},
				"update_time": {
					"type": "integer"
				},
				"create_time": {
					"type": "integer"
				},
				"status": {
					"default": 1,
					"description": "ssl status, 1 to enable, 0 to disable",
					"type": "integer",
					"enum": [1, 0]
				},
				"exptime": {
					"type": "integer",
					"minimum": 1588262400
				},
				"sni": {
					"type": "string",
					"pattern": "^\\*?[0-9a-zA-Z-.]+$"
				},
				"key": {
					"minLength": 128,
					"type": "string",
					"maxLength": 65536
				}
			},
			"type": "object",
			"oneOf": [{
				"required": ["sni", "key", "cert"]
			}, {
				"required": ["snis", "key", "cert"]
			}]
		},
		"id_schema": {
			"anyOf": [{
				"pattern": "^[a-zA-Z0-9-_.]+$",
				"minLength": 1,
				"type": "string",
				"maxLength": 64
			}, {
				"type": "integer",
				"minimum": 1
			}]
		},
		"global_rule": {
			"additionalProperties": false,
			"properties": {
				"plugins": {
					"type": "object"
				},
				"id": {
					"anyOf": [{
						"pattern": "^[a-zA-Z0-9-_.]+$",
						"minLength": 1,
						"type": "string",
						"maxLength": 64
					}, {
						"type": "integer",
						"minimum": 1
					}]
				}
			},
			"type": "object",
			"required": ["plugins"]
		},
		"consumer": {
			"additionalProperties": false,
			"properties": {
				"labels": {
					"maxProperties": 16,
					"description": "key\/value pairs to specify attributes",
					"type": "object",
					"patternProperties": {
						".*": {
							"type": "string",
							"pattern": "^[a-zA-Z0-9-_.]+$",
							"description": "value of label",
							"minLength": 1,
							"maxLength": 64
						}
					}
				},
				"id": {
					"anyOf": [{
						"pattern": "^[a-zA-Z0-9-_.]+$",
						"minLength": 1,
						"type": "string",
						"maxLength": 64
					}, {
						"type": "integer",
						"minimum": 1
					}]
				},
				"username": {
					"pattern": "^[a-zA-Z0-9_]+$",
					"minLength": 1,
					"type": "string",
					"maxLength": 32
				},
				"desc": {
					"type": "string",
					"maxLength": 256
				},
				"plugins": {
					"type": "object"
				},
				"update_time": {
					"type": "integer"
				},
				"create_time": {
					"type": "integer"
				}
			},
			"type": "object",
			"required": ["username"]
		},
		"service": {
			"properties": {
				"enable_websocket": {
					"type": "boolean",
					"description": "enable websocket for request"
				},
				"upstream": {
					"additionalProperties": false,
					"properties": {
						"retries": {
							"type": "integer",
							"minimum": 0
						},
						"type": {
							"description": "algorithms of load balancing",
							"type": "string",
							"enum": ["chash", "roundrobin", "ewma"]
						},
						"hash_on": {
							"default": "vars",
							"type": "string",
							"enum": ["vars", "header", "cookie", "consumer"]
						},
						"k8s_deployment_info": {
							"properties": {
								"deploy_name": {
									"type": "string",
									"description": "k8s deployment name"
								},
								"namespace": {
									"type": "string",
									"description": "k8s namespace"
								},
								"service_name": {
									"type": "string",
									"description": "k8s service name"
								},
								"port": {
									"type": "number",
									"minimum": 0
								},
								"backend_type": {
									"enum": ["svc", "pod"],
									"default": "pod",
									"type": "string",
									"description": "k8s service name"
								}
							},
							"type": "object",
							"anyOf": [{
								"required": ["namespace", "deploy_name", "port"]
							}, {
								"required": ["namespace", "service_name", "port"]
							}]
						},
						"create_time": {
							"type": "integer"
						},
						"upstream_host": {
							"type": "string",
							"pattern": "^\\*?[0-9a-zA-Z-.]+$"
						},
						"service_name": {
							"minLength": 1,
							"type": "string",
							"maxLength": 100
						},
						"nodes": {
							"anyOf": [{
								"minProperties": 1,
								"type": "object",
								"patternProperties": {
									".*": {
										"description": "weight of node",
										"type": "integer",
										"minimum": 0
									}
								}
							}, {
								"minItems": 1,
								"type": "array",
								"items": {
									"properties": {
										"host": {
											"type": "string",
											"pattern": "^\\*?[0-9a-zA-Z-.]+$"
										},
										"weight": {
											"description": "weight of node",
											"type": "integer",
											"minimum": 0
										},
										"metadata": {
											"type": "object",
											"description": "metadata of node"
										},
										"port": {
											"description": "port of node",
											"type": "integer",
											"minimum": 1
										}
									},
									"type": "object",
									"required": ["host", "port", "weight"]
								}
							}]
						},
						"key": {
							"type": "string",
							"description": "the key of chash for dynamic load balancing"
						},
						"enable_websocket": {
							"type": "boolean",
							"description": "enable websocket for request"
						},
						"checks": {
							"additionalProperties": false,
							"properties": {
								"passive": {
									"type": "object",
									"properties": {
										"healthy": {
											"type": "object",
											"properties": {
												"successes": {
													"maximum": 254,
													"default": 5,
													"type": "integer",
													"minimum": 1
												},
												"http_statuses": {
													"items": {
														"maximum": 599,
														"type": "integer",
														"minimum": 200
													},
													"default": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308],
													"type": "array",
													"minItems": 1,
													"uniqueItems": true
												}
											}
										},
										"type": {
											"default": "http",
											"type": "string",
											"enum": ["http", "https", "tcp"]
										},
										"unhealthy": {
											"type": "object",
											"properties": {
												"timeouts": {
													"maximum": 254,
													"default": 7,
													"type": "integer",
													"minimum": 1
												},
												"tcp_failures": {
													"maximum": 254,
													"default": 2,
													"type": "integer",
													"minimum": 1
												},
												"http_failures": {
													"maximum": 254,
													"default": 5,
													"type": "integer",
													"minimum": 1
												},
												"http_statuses": {
													"items": {
														"maximum": 599,
														"type": "integer",
														"minimum": 200
													},
													"default": [429, 500, 503],
													"type": "array",
													"minItems": 1,
													"uniqueItems": true
												}
											}
										}
									}
								},
								"active": {
									"type": "object",
									"properties": {
										"host": {
											"type": "string",
											"pattern": "^\\*?[0-9a-zA-Z-.]+$"
										},
										"type": {
											"default": "http",
											"type": "string",
											"enum": ["http", "https", "tcp"]
										},
										"port": {
											"maximum": 65535,
											"type": "integer",
											"minimum": 1
										},
										"req_headers": {
											"minItems": 1,
											"type": "array",
											"items": {
												"type": "string",
												"uniqueItems": true
											}
										},
										"timeout": {
											"type": "number",
											"default": 1
										},
										"concurrency": {
											"type": "integer",
											"default": 10
										},
										"https_verify_certificate": {
											"type": "boolean",
											"default": true
										},
										"healthy": {
											"type": "object",
											"properties": {
												"successes": {
													"maximum": 254,
													"default": 2,
													"type": "integer",
													"minimum": 1
												},
												"interval": {
													"default": 0,
													"type": "integer",
													"minimum": 1
												},
												"http_statuses": {
													"items": {
														"maximum": 599,
														"type": "integer",
														"minimum": 200
													},
													"default": [200, 302],
													"type": "array",
													"minItems": 1,
													"uniqueItems": true
												}
											}
										},
										"http_path": {
											"type": "string",
											"default": "\/"
										},
										"unhealthy": {
											"type": "object",
											"properties": {
												"http_failures": {
													"maximum": 254,
													"default": 5,
													"type": "integer",
													"minimum": 1
												},
												"timeouts": {
													"maximum": 254,
													"default": 3,
													"type": "integer",
													"minimum": 1
												},
												"tcp_failures": {
													"maximum": 254,
													"default": 2,
													"type": "integer",
													"minimum": 1
												},
												"interval": {
													"default": 0,
													"type": "integer",
													"minimum": 1
												},
												"http_statuses": {
													"items": {
														"maximum": 599,
														"type": "integer",
														"minimum": 200
													},
													"default": [429, 404, 500, 501, 502, 503, 504, 505],
													"type": "array",
													"minItems": 1,
													"uniqueItems": true
												}
											}
										}
									}
								}
							},
							"type": "object",
							"anyOf": [{
								"required": ["active"]
							}, {
								"required": ["active", "passive"]
							}]
						},
						"update_time": {
							"type": "integer"
						},
						"labels": {
							"maxProperties": 16,
							"description": "key\/value pairs to specify attributes",
							"type": "object",
							"patternProperties": {
								".*": {
									"type": "string",
									"pattern": "^[a-zA-Z0-9-_.]+$",
									"description": "value of label",
									"minLength": 1,
									"maxLength": 64
								}
							}
						},
						"id": {
							"anyOf": [{
								"pattern": "^[a-zA-Z0-9-_.]+$",
								"minLength": 1,
								"type": "string",
								"maxLength": 64
							}, {
								"type": "integer",
								"minimum": 1
							}]
						},
						"desc": {
							"type": "string",
							"maxLength": 256
						},
						"discovery_type": {
							"type": "string",
							"description": "discovery type"
						},
						"name": {
							"minLength": 1,
							"type": "string",
							"maxLength": 100
						},
						"pass_host": {
							"default": "pass",
							"description": "mod of host passing",
							"type": "string",
							"enum": ["pass", "node", "rewrite"]
						},
						"timeout": {
							"properties": {
								"connect": {
									"type": "number",
									"minimum": 0
								},
								"read": {
									"type": "number",
									"minimum": 0
								},
								"send": {
									"type": "number",
									"minimum": 0
								}
							},
							"type": "object",
							"required": ["connect", "send", "read"]
						}
					},
					"type": "object",
					"anyOf": [{
						"required": ["type", "nodes"]
					}, {
						"required": ["type", "k8s_deployment_info"]
					}, {
						"required": ["type", "service_name"]
					}]
				},
				"script": {
					"minLength": 10,
					"type": "string",
					"maxLength": 102400
				},
				"update_time": {
					"type": "integer"
				},
				"upstream_id": {
					"anyOf": [{
						"pattern": "^[a-zA-Z0-9-_.]+$",
						"minLength": 1,
						"type": "string",
						"maxLength": 64
					}, {
						"type": "integer",
						"minimum": 1
					}]
				},
				"labels": {
					"maxProperties": 16,
					"description": "key\/value pairs to specify attributes",
					"type": "object",
					"patternProperties": {
						".*": {
							"type": "string",
							"pattern": "^[a-zA-Z0-9-_.]+$",
							"description": "value of label",
							"minLength": 1,
							"maxLength": 64
						}
					}
				},
				"id": {
					"anyOf": [{
						"pattern": "^[a-zA-Z0-9-_.]+$",
						"minLength": 1,
						"type": "string",
						"maxLength": 64
					}, {
						"type": "integer",
						"minimum": 1
					}]
				},
				"create_time": {
					"type": "integer"
				},
				"plugins": {
					"type": "object"
				},
				"desc": {
					"type": "string",
					"maxLength": 256
				},
				"name": {
					"minLength": 1,
					"type": "string",
					"maxLength": 100
				}
			},
			"type": "object",
			"additionalProperties": false
		},
		"stream_route": {
			"type": "object",
			"properties": {
				"remote_addr": {
					"description": "client IP",
					"type": "string",
					"anyOf": [{
						"title": "IPv4",
						"type": "string",
						"format": "ipv4"
					}, {
						"title": "IPv4\/CIDR",
						"type": "string",
						"pattern": "^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}\/[0-9]{1,2}$"
					}, {
						"title": "IPv6",
						"type": "string",
						"format": "ipv6"
					}, {
						"title": "IPv6\/CIDR",
						"type": "string",
						"pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?\/[0-9]{1,3}$"
					}]
				},
				"id": {
					"anyOf": [{
						"pattern": "^[a-zA-Z0-9-_.]+$",
						"minLength": 1,
						"type": "string",
						"maxLength": 64
					}, {
						"type": "integer",
						"minimum": 1
					}]
				},
				"server_addr": {
					"description": "server IP",
					"type": "string",
					"anyOf": [{
						"title": "IPv4",
						"type": "string",
						"format": "ipv4"
					}, {
						"title": "IPv4\/CIDR",
						"type": "string",
						"pattern": "^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}\/[0-9]{1,2}$"
					}, {
						"title": "IPv6",
						"type": "string",
						"format": "ipv6"
					}, {
						"title": "IPv6\/CIDR",
						"type": "string",
						"pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?\/[0-9]{1,3}$"
					}]
				},
				"plugins": {
					"type": "object"
				},
				"server_port": {
					"type": "integer",
					"description": "server port"
				},
				"upstream": {
					"additionalProperties": false,
					"properties": {
						"retries": {
							"type": "integer",
							"minimum": 0
						},
						"type": {
							"description": "algorithms of load balancing",
							"type": "string",
							"enum": ["chash", "roundrobin", "ewma"]
						},
						"hash_on": {
							"default": "vars",
							"type": "string",
							"enum": ["vars", "header", "cookie", "consumer"]
						},
						"k8s_deployment_info": {
							"properties": {
								"deploy_name": {
									"type": "string",
									"description": "k8s deployment name"
								},
								"namespace": {
									"type": "string",
									"description": "k8s namespace"
								},
								"service_name": {
									"type": "string",
									"description": "k8s service name"
								},
								"port": {
									"type": "number",
									"minimum": 0
								},
								"backend_type": {
									"enum": ["svc", "pod"],
									"default": "pod",
									"type": "string",
									"description": "k8s service name"
								}
							},
							"type": "object",
							"anyOf": [{
								"required": ["namespace", "deploy_name", "port"]
							}, {
								"required": ["namespace", "service_name", "port"]
							}]
						},
						"create_time": {
							"type": "integer"
						},
						"upstream_host": {
							"type": "string",
							"pattern": "^\\*?[0-9a-zA-Z-.]+$"
						},
						"service_name": {
							"minLength": 1,
							"type": "string",
							"maxLength": 100
						},
						"nodes": {
							"anyOf": [{
								"minProperties": 1,
								"type": "object",
								"patternProperties": {
									".*": {
										"description": "weight of node",
										"type": "integer",
										"minimum": 0
									}
								}
							}, {
								"minItems": 1,
								"type": "array",
								"items": {
									"properties": {
										"host": {
											"type": "string",
											"pattern": "^\\*?[0-9a-zA-Z-.]+$"
										},
										"weight": {
											"description": "weight of node",
											"type": "integer",
											"minimum": 0
										},
										"metadata": {
											"type": "object",
											"description": "metadata of node"
										},
										"port": {
											"description": "port of node",
											"type": "integer",
											"minimum": 1
										}
									},
									"type": "object",
									"required": ["host", "port", "weight"]
								}
							}]
						},
						"key": {
							"type": "string",
							"description": "the key of chash for dynamic load balancing"
						},
						"enable_websocket": {
							"type": "boolean",
							"description": "enable websocket for request"
						},
						"checks": {
							"additionalProperties": false,
							"properties": {
								"passive": {
									"type": "object",
									"properties": {
										"healthy": {
											"type": "object",
											"properties": {
												"successes": {
													"maximum": 254,
													"default": 5,
													"type": "integer",
													"minimum": 1
												},
												"http_statuses": {
													"items": {
														"maximum": 599,
														"type": "integer",
														"minimum": 200
													},
													"default": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308],
													"type": "array",
													"minItems": 1,
													"uniqueItems": true
												}
											}
										},
										"type": {
											"default": "http",
											"type": "string",
											"enum": ["http", "https", "tcp"]
										},
										"unhealthy": {
											"type": "object",
											"properties": {
												"timeouts": {
													"maximum": 254,
													"default": 7,
													"type": "integer",
													"minimum": 1
												},
												"tcp_failures": {
													"maximum": 254,
													"default": 2,
													"type": "integer",
													"minimum": 1
												},
												"http_failures": {
													"maximum": 254,
													"default": 5,
													"type": "integer",
													"minimum": 1
												},
												"http_statuses": {
													"items": {
														"maximum": 599,
														"type": "integer",
														"minimum": 200
													},
													"default": [429, 500, 503],
													"type": "array",
													"minItems": 1,
													"uniqueItems": true
												}
											}
										}
									}
								},
								"active": {
									"type": "object",
									"properties": {
										"host": {
											"type": "string",
											"pattern": "^\\*?[0-9a-zA-Z-.]+$"
										},
										"type": {
											"default": "http",
											"type": "string",
											"enum": ["http", "https", "tcp"]
										},
										"port": {
											"maximum": 65535,
											"type": "integer",
											"minimum": 1
										},
										"req_headers": {
											"minItems": 1,
											"type": "array",
											"items": {
												"type": "string",
												"uniqueItems": true
											}
										},
										"timeout": {
											"type": "number",
											"default": 1
										},
										"concurrency": {
											"type": "integer",
											"default": 10
										},
										"https_verify_certificate": {
											"type": "boolean",
											"default": true
										},
										"healthy": {
											"type": "object",
											"properties": {
												"successes": {
													"maximum": 254,
													"default": 2,
													"type": "integer",
													"minimum": 1
												},
												"interval": {
													"default": 0,
													"type": "integer",
													"minimum": 1
												},
												"http_statuses": {
													"items": {
														"maximum": 599,
														"type": "integer",
														"minimum": 200
													},
													"default": [200, 302],
													"type": "array",
													"minItems": 1,
													"uniqueItems": true
												}
											}
										},
										"http_path": {
											"type": "string",
											"default": "\/"
										},
										"unhealthy": {
											"type": "object",
											"properties": {
												"http_failures": {
													"maximum": 254,
													"default": 5,
													"type": "integer",
													"minimum": 1
												},
												"timeouts": {
													"maximum": 254,
													"default": 3,
													"type": "integer",
													"minimum": 1
												},
												"tcp_failures": {
													"maximum": 254,
													"default": 2,
													"type": "integer",
													"minimum": 1
												},
												"interval": {
													"default": 0,
													"type": "integer",
													"minimum": 1
												},
												"http_statuses": {
													"items": {
														"maximum": 599,
														"type": "integer",
														"minimum": 200
													},
													"default": [429, 404, 500, 501, 502, 503, 504, 505],
													"type": "array",
													"minItems": 1,
													"uniqueItems": true
												}
											}
										}
									}
								}
							},
							"type": "object",
							"anyOf": [{
								"required": ["active"]
							}, {
								"required": ["active", "passive"]
							}]
						},
						"update_time": {
							"type": "integer"
						},
						"labels": {
							"maxProperties": 16,
							"description": "key\/value pairs to specify attributes",
							"type": "object",
							"patternProperties": {
								".*": {
									"type": "string",
									"pattern": "^[a-zA-Z0-9-_.]+$",
									"description": "value of label",
									"minLength": 1,
									"maxLength": 64
								}
							}
						},
						"id": {
							"anyOf": [{
								"pattern": "^[a-zA-Z0-9-_.]+$",
								"minLength": 1,
								"type": "string",
								"maxLength": 64
							}, {
								"type": "integer",
								"minimum": 1
							}]
						},
						"desc": {
							"type": "string",
							"maxLength": 256
						},
						"discovery_type": {
							"type": "string",
							"description": "discovery type"
						},
						"name": {
							"minLength": 1,
							"type": "string",
							"maxLength": 100
						},
						"pass_host": {
							"default": "pass",
							"description": "mod of host passing",
							"type": "string",
							"enum": ["pass", "node", "rewrite"]
						},
						"timeout": {
							"properties": {
								"connect": {
									"type": "number",
									"minimum": 0
								},
								"read": {
									"type": "number",
									"minimum": 0
								},
								"send": {
									"type": "number",
									"minimum": 0
								}
							},
							"type": "object",
							"required": ["connect", "send", "read"]
						}
					},
					"type": "object",
					"anyOf": [{
						"required": ["type", "nodes"]
					}, {
						"required": ["type", "k8s_deployment_info"]
					}, {
						"required": ["type", "service_name"]
					}]
				},
				"upstream_id": {
					"anyOf": [{
						"pattern": "^[a-zA-Z0-9-_.]+$",
						"minLength": 1,
						"type": "string",
						"maxLength": 64
					}, {
						"type": "integer",
						"minimum": 1
					}]
				}
			}
		},
		"label_value_def": {
			"type": "string",
			"pattern": "^[a-zA-Z0-9-_.]+$",
			"description": "value of label",
			"minLength": 1,
			"maxLength": 64
		},
		"version": 0.5,
		"upstream_hash_vars_schema": {
			"type": "string",
			"pattern": "^((uri|server_name|server_addr|request_uri|remote_port|remote_addr|query_string|host|hostname)|arg_[0-9a-zA-z_-]+)$"
		},
		"upstream": {
			"additionalProperties": false,
			"properties": {
				"retries": {
					"type": "integer",
					"minimum": 0
				},
				"type": {
					"description": "algorithms of load balancing",
					"type": "string",
					"enum": ["chash", "roundrobin", "ewma"]
				},
				"hash_on": {
					"default": "vars",
					"type": "string",
					"enum": ["vars", "header", "cookie", "consumer"]
				},
				"k8s_deployment_info": {
					"properties": {
						"deploy_name": {
							"type": "string",
							"description": "k8s deployment name"
						},
						"namespace": {
							"type": "string",
							"description": "k8s namespace"
						},
						"service_name": {
							"type": "string",
							"description": "k8s service name"
						},
						"port": {
							"type": "number",
							"minimum": 0
						},
						"backend_type": {
							"enum": ["svc", "pod"],
							"default": "pod",
							"type": "string",
							"description": "k8s service name"
						}
					},
					"type": "object",
					"anyOf": [{
						"required": ["namespace", "deploy_name", "port"]
					}, {
						"required": ["namespace", "service_name", "port"]
					}]
				},
				"create_time": {
					"type": "integer"
				},
				"upstream_host": {
					"type": "string",
					"pattern": "^\\*?[0-9a-zA-Z-.]+$"
				},
				"service_name": {
					"minLength": 1,
					"type": "string",
					"maxLength": 100
				},
				"nodes": {
					"anyOf": [{
						"minProperties": 1,
						"type": "object",
						"patternProperties": {
							".*": {
								"description": "weight of node",
								"type": "integer",
								"minimum": 0
							}
						}
					}, {
						"minItems": 1,
						"type": "array",
						"items": {
							"properties": {
								"host": {
									"type": "string",
									"pattern": "^\\*?[0-9a-zA-Z-.]+$"
								},
								"weight": {
									"description": "weight of node",
									"type": "integer",
									"minimum": 0
								},
								"metadata": {
									"type": "object",
									"description": "metadata of node"
								},
								"port": {
									"description": "port of node",
									"type": "integer",
									"minimum": 1
								}
							},
							"type": "object",
							"required": ["host", "port", "weight"]
						}
					}]
				},
				"key": {
					"type": "string",
					"description": "the key of chash for dynamic load balancing"
				},
				"enable_websocket": {
					"type": "boolean",
					"description": "enable websocket for request"
				},
				"checks": {
					"additionalProperties": false,
					"properties": {
						"passive": {
							"type": "object",
							"properties": {
								"healthy": {
									"type": "object",
									"properties": {
										"successes": {
											"maximum": 254,
											"default": 5,
											"type": "integer",
											"minimum": 1
										},
										"http_statuses": {
											"items": {
												"maximum": 599,
												"type": "integer",
												"minimum": 200
											},
											"default": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308],
											"type": "array",
											"minItems": 1,
											"uniqueItems": true
										}
									}
								},
								"type": {
									"default": "http",
									"type": "string",
									"enum": ["http", "https", "tcp"]
								},
								"unhealthy": {
									"type": "object",
									"properties": {
										"timeouts": {
											"maximum": 254,
											"default": 7,
											"type": "integer",
											"minimum": 1
										},
										"tcp_failures": {
											"maximum": 254,
											"default": 2,
											"type": "integer",
											"minimum": 1
										},
										"http_failures": {
											"maximum": 254,
											"default": 5,
											"type": "integer",
											"minimum": 1
										},
										"http_statuses": {
											"items": {
												"maximum": 599,
												"type": "integer",
												"minimum": 200
											},
											"default": [429, 500, 503],
											"type": "array",
											"minItems": 1,
											"uniqueItems": true
										}
									}
								}
							}
						},
						"active": {
							"type": "object",
							"properties": {
								"host": {
									"type": "string",
									"pattern": "^\\*?[0-9a-zA-Z-.]+$"
								},
								"type": {
									"default": "http",
									"type": "string",
									"enum": ["http", "https", "tcp"]
								},
								"port": {
									"maximum": 65535,
									"type": "integer",
									"minimum": 1
								},
								"req_headers": {
									"minItems": 1,
									"type": "array",
									"items": {
										"type": "string",
										"uniqueItems": true
									}
								},
								"timeout": {
									"type": "number",
									"default": 1
								},
								"concurrency": {
									"type": "integer",
									"default": 10
								},
								"https_verify_certificate": {
									"type": "boolean",
									"default": true
								},
								"healthy": {
									"type": "object",
									"properties": {
										"successes": {
											"maximum": 254,
											"default": 2,
											"type": "integer",
											"minimum": 1
										},
										"interval": {
											"default": 0,
											"type": "integer",
											"minimum": 1
										},
										"http_statuses": {
											"items": {
												"maximum": 599,
												"type": "integer",
												"minimum": 200
											},
											"default": [200, 302],
											"type": "array",
											"minItems": 1,
											"uniqueItems": true
										}
									}
								},
								"http_path": {
									"type": "string",
									"default": "\/"
								},
								"unhealthy": {
									"type": "object",
									"properties": {
										"http_failures": {
											"maximum": 254,
											"default": 5,
											"type": "integer",
											"minimum": 1
										},
										"timeouts": {
											"maximum": 254,
											"default": 3,
											"type": "integer",
											"minimum": 1
										},
										"tcp_failures": {
											"maximum": 254,
											"default": 2,
											"type": "integer",
											"minimum": 1
										},
										"interval": {
											"default": 0,
											"type": "integer",
											"minimum": 1
										},
										"http_statuses": {
											"items": {
												"maximum": 599,
												"type": "integer",
												"minimum": 200
											},
											"default": [429, 404, 500, 501, 502, 503, 504, 505],
											"type": "array",
											"minItems": 1,
											"uniqueItems": true
										}
									}
								}
							}
						}
					},
					"type": "object",
					"anyOf": [{
						"required": ["active"]
					}, {
						"required": ["active", "passive"]
					}]
				},
				"update_time": {
					"type": "integer"
				},
				"labels": {
					"maxProperties": 16,
					"description": "key\/value pairs to specify attributes",
					"type": "object",
					"patternProperties": {
						".*": {
							"type": "string",
							"pattern": "^[a-zA-Z0-9-_.]+$",
							"description": "value of label",
							"minLength": 1,
							"maxLength": 64
						}
					}
				},
				"id": {
					"anyOf": [{
						"pattern": "^[a-zA-Z0-9-_.]+$",
						"minLength": 1,
						"type": "string",
						"maxLength": 64
					}, {
						"type": "integer",
						"minimum": 1
					}]
				},
				"desc": {
					"type": "string",
					"maxLength": 256
				},
				"discovery_type": {
					"type": "string",
					"description": "discovery type"
				},
				"name": {
					"minLength": 1,
					"type": "string",
					"maxLength": 100
				},
				"pass_host": {
					"default": "pass",
					"description": "mod of host passing",
					"type": "string",
					"enum": ["pass", "node", "rewrite"]
				},
				"timeout": {
					"properties": {
						"connect": {
							"type": "number",
							"minimum": 0
						},
						"read": {
							"type": "number",
							"minimum": 0
						},
						"send": {
							"type": "number",
							"minimum": 0
						}
					},
					"type": "object",
					"required": ["connect", "send", "read"]
				}
			},
			"type": "object",
			"anyOf": [{
				"required": ["type", "nodes"]
			}, {
				"required": ["type", "k8s_deployment_info"]
			}, {
				"required": ["type", "service_name"]
			}]
		},
		"ip_def": [{
			"title": "IPv4",
			"type": "string",
			"format": "ipv4"
		}, {
			"title": "IPv4\/CIDR",
			"type": "string",
			"pattern": "^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}\/[0-9]{1,2}$"
		}, {
			"title": "IPv6",
			"type": "string",
			"format": "ipv6"
		}, {
			"title": "IPv6\/CIDR",
			"type": "string",
			"pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?\/[0-9]{1,3}$"
		}],
		"plugin_disable_schema": {
			"disable": {
				"type": "boolean"
			}
		},
		"uri_def": {
			"type": "string",
			"pattern": "^[^\\\/]+:\\\/\\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?"
		},
		"plugins": {
			"type": "array",
			"items": {
				"properties": {
					"stream": {
						"type": "boolean"
					},
					"name": {
						"type": "string",
						"minLength": 1
					},
					"additionalProperties": false
				},
				"type": "object",
				"required": ["name"]
			}
		},
		"host_def": {
			"type": "string",
			"pattern": "^\\*?[0-9a-zA-Z-.]+$"
		},
		"route": {
			"properties": {
				"host": {
					"type": "string",
					"pattern": "^\\*?[0-9a-zA-Z-.]+$"
				},
				"service_id": {
					"anyOf": [{
						"pattern": "^[a-zA-Z0-9-_.]+$",
						"minLength": 1,
						"type": "string",
						"maxLength": 64
					}, {
						"type": "integer",
						"minimum": 1
					}]
				},
				"filter_func": {
					"minLength": 10,
					"type": "string",
					"pattern": "^function"
				},
				"create_time": {
					"type": "integer"
				},
				"uri": {
					"minLength": 1,
					"type": "string",
					"maxLength": 4096
				},
				"desc": {
					"type": "string",
					"maxLength": 256
				},
				"labels": {
					"maxProperties": 16,
					"description": "key\/value pairs to specify attributes",
					"type": "object",
					"patternProperties": {
						".*": {
							"type": "string",
							"pattern": "^[a-zA-Z0-9-_.]+$",
							"description": "value of label",
							"minLength": 1,
							"maxLength": 64
						}
					}
				},
				"upstream": {
					"additionalProperties": false,
					"properties": {
						"retries": {
							"type": "integer",
							"minimum": 0
						},
						"type": {
							"description": "algorithms of load balancing",
							"type": "string",
							"enum": ["chash", "roundrobin", "ewma"]
						},
						"hash_on": {
							"default": "vars",
							"type": "string",
							"enum": ["vars", "header", "cookie", "consumer"]
						},
						"k8s_deployment_info": {
							"properties": {
								"deploy_name": {
									"type": "string",
									"description": "k8s deployment name"
								},
								"namespace": {
									"type": "string",
									"description": "k8s namespace"
								},
								"service_name": {
									"type": "string",
									"description": "k8s service name"
								},
								"port": {
									"type": "number",
									"minimum": 0
								},
								"backend_type": {
									"enum": ["svc", "pod"],
									"default": "pod",
									"type": "string",
									"description": "k8s service name"
								}
							},
							"type": "object",
							"anyOf": [{
								"required": ["namespace", "deploy_name", "port"]
							}, {
								"required": ["namespace", "service_name", "port"]
							}]
						},
						"create_time": {
							"type": "integer"
						},
						"upstream_host": {
							"type": "string",
							"pattern": "^\\*?[0-9a-zA-Z-.]+$"
						},
						"service_name": {
							"minLength": 1,
							"type": "string",
							"maxLength": 100
						},
						"nodes": {
							"anyOf": [{
								"minProperties": 1,
								"type": "object",
								"patternProperties": {
									".*": {
										"description": "weight of node",
										"type": "integer",
										"minimum": 0
									}
								}
							}, {
								"minItems": 1,
								"type": "array",
								"items": {
									"properties": {
										"host": {
											"type": "string",
											"pattern": "^\\*?[0-9a-zA-Z-.]+$"
										},
										"weight": {
											"description": "weight of node",
											"type": "integer",
											"minimum": 0
										},
										"metadata": {
											"type": "object",
											"description": "metadata of node"
										},
										"port": {
											"description": "port of node",
											"type": "integer",
											"minimum": 1
										}
									},
									"type": "object",
									"required": ["host", "port", "weight"]
								}
							}]
						},
						"key": {
							"type": "string",
							"description": "the key of chash for dynamic load balancing"
						},
						"enable_websocket": {
							"type": "boolean",
							"description": "enable websocket for request"
						},
						"checks": {
							"additionalProperties": false,
							"properties": {
								"passive": {
									"type": "object",
									"properties": {
										"healthy": {
											"type": "object",
											"properties": {
												"successes": {
													"maximum": 254,
													"default": 5,
													"type": "integer",
													"minimum": 1
												},
												"http_statuses": {
													"items": {
														"maximum": 599,
														"type": "integer",
														"minimum": 200
													},
													"default": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308],
													"type": "array",
													"minItems": 1,
													"uniqueItems": true
												}
											}
										},
										"type": {
											"default": "http",
											"type": "string",
											"enum": ["http", "https", "tcp"]
										},
										"unhealthy": {
											"type": "object",
											"properties": {
												"timeouts": {
													"maximum": 254,
													"default": 7,
													"type": "integer",
													"minimum": 1
												},
												"tcp_failures": {
													"maximum": 254,
													"default": 2,
													"type": "integer",
													"minimum": 1
												},
												"http_failures": {
													"maximum": 254,
													"default": 5,
													"type": "integer",
													"minimum": 1
												},
												"http_statuses": {
													"items": {
														"maximum": 599,
														"type": "integer",
														"minimum": 200
													},
													"default": [429, 500, 503],
													"type": "array",
													"minItems": 1,
													"uniqueItems": true
												}
											}
										}
									}
								},
								"active": {
									"type": "object",
									"properties": {
										"host": {
											"type": "string",
											"pattern": "^\\*?[0-9a-zA-Z-.]+$"
										},
										"type": {
											"default": "http",
											"type": "string",
											"enum": ["http", "https", "tcp"]
										},
										"port": {
											"maximum": 65535,
											"type": "integer",
											"minimum": 1
										},
										"req_headers": {
											"minItems": 1,
											"type": "array",
											"items": {
												"type": "string",
												"uniqueItems": true
											}
										},
										"timeout": {
											"type": "number",
											"default": 1
										},
										"concurrency": {
											"type": "integer",
											"default": 10
										},
										"https_verify_certificate": {
											"type": "boolean",
											"default": true
										},
										"healthy": {
											"type": "object",
											"properties": {
												"successes": {
													"maximum": 254,
													"default": 2,
													"type": "integer",
													"minimum": 1
												},
												"interval": {
													"default": 0,
													"type": "integer",
													"minimum": 1
												},
												"http_statuses": {
													"items": {
														"maximum": 599,
														"type": "integer",
														"minimum": 200
													},
													"default": [200, 302],
													"type": "array",
													"minItems": 1,
													"uniqueItems": true
												}
											}
										},
										"http_path": {
											"type": "string",
											"default": "\/"
										},
										"unhealthy": {
											"type": "object",
											"properties": {
												"http_failures": {
													"maximum": 254,
													"default": 5,
													"type": "integer",
													"minimum": 1
												},
												"timeouts": {
													"maximum": 254,
													"default": 3,
													"type": "integer",
													"minimum": 1
												},
												"tcp_failures": {
													"maximum": 254,
													"default": 2,
													"type": "integer",
													"minimum": 1
												},
												"interval": {
													"default": 0,
													"type": "integer",
													"minimum": 1
												},
												"http_statuses": {
													"items": {
														"maximum": 599,
														"type": "integer",
														"minimum": 200
													},
													"default": [429, 404, 500, 501, 502, 503, 504, 505],
													"type": "array",
													"minItems": 1,
													"uniqueItems": true
												}
											}
										}
									}
								}
							},
							"type": "object",
							"anyOf": [{
								"required": ["active"]
							}, {
								"required": ["active", "passive"]
							}]
						},
						"update_time": {
							"type": "integer"
						},
						"labels": {
							"maxProperties": 16,
							"description": "key\/value pairs to specify attributes",
							"type": "object",
							"patternProperties": {
								".*": {
									"type": "string",
									"pattern": "^[a-zA-Z0-9-_.]+$",
									"description": "value of label",
									"minLength": 1,
									"maxLength": 64
								}
							}
						},
						"id": {
							"anyOf": [{
								"pattern": "^[a-zA-Z0-9-_.]+$",
								"minLength": 1,
								"type": "string",
								"maxLength": 64
							}, {
								"type": "integer",
								"minimum": 1
							}]
						},
						"desc": {
							"type": "string",
							"maxLength": 256
						},
						"discovery_type": {
							"type": "string",
							"description": "discovery type"
						},
						"name": {
							"minLength": 1,
							"type": "string",
							"maxLength": 100
						},
						"pass_host": {
							"default": "pass",
							"description": "mod of host passing",
							"type": "string",
							"enum": ["pass", "node", "rewrite"]
						},
						"timeout": {
							"properties": {
								"connect": {
									"type": "number",
									"minimum": 0
								},
								"read": {
									"type": "number",
									"minimum": 0
								},
								"send": {
									"type": "number",
									"minimum": 0
								}
							},
							"type": "object",
							"required": ["connect", "send", "read"]
						}
					},
					"type": "object",
					"anyOf": [{
						"required": ["type", "nodes"]
					}, {
						"required": ["type", "k8s_deployment_info"]
					}, {
						"required": ["type", "service_name"]
					}]
				},
				"enable_websocket": {
					"type": "boolean",
					"description": "enable websocket for request"
				},
				"vars": {
					"type": "array",
					"items": {
						"items": {
							"minItems": 2,
							"maxItems": 3,
							"anyOf": [{
								"type": "string"
							}, {
								"type": "number"
							}]
						},
						"description": "Nginx builtin variable name and value",
						"type": "array"
					}
				},
				"service_protocol": {
					"enum": ["grpc", "http"]
				},
				"hosts": {
					"items": {
						"type": "string",
						"pattern": "^\\*?[0-9a-zA-Z-.]+$"
					},
					"uniqueItems": true,
					"type": "array",
					"minItems": 1
				},
				"remote_addrs": {
					"items": {
						"description": "client IP",
						"type": "string",
						"anyOf": [{
							"title": "IPv4",
							"type": "string",
							"format": "ipv4"
						}, {
							"title": "IPv4\/CIDR",
							"type": "string",
							"pattern": "^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}\/[0-9]{1,2}$"
						}, {
							"title": "IPv6",
							"type": "string",
							"format": "ipv6"
						}, {
							"title": "IPv6\/CIDR",
							"type": "string",
							"pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?\/[0-9]{1,3}$"
						}]
					},
					"uniqueItems": true,
					"type": "array",
					"minItems": 1
				},
				"status": {
					"default": 1,
					"description": "route status, 1 to enable, 0 to disable",
					"type": "integer",
					"enum": [1, 0]
				},
				"update_time": {
					"type": "integer"
				},
				"upstream_id": {
					"anyOf": [{
						"pattern": "^[a-zA-Z0-9-_.]+$",
						"minLength": 1,
						"type": "string",
						"maxLength": 64
					}, {
						"type": "integer",
						"minimum": 1
					}]
				},
				"remote_addr": {
					"description": "client IP",
					"type": "string",
					"anyOf": [{
						"title": "IPv4",
						"type": "string",
						"format": "ipv4"
					}, {
						"title": "IPv4\/CIDR",
						"type": "string",
						"pattern": "^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}\/[0-9]{1,2}$"
					}, {
						"title": "IPv6",
						"type": "string",
						"format": "ipv6"
					}, {
						"title": "IPv6\/CIDR",
						"type": "string",
						"pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?\/[0-9]{1,3}$"
					}]
				},
				"id": {
					"anyOf": [{
						"pattern": "^[a-zA-Z0-9-_.]+$",
						"minLength": 1,
						"type": "string",
						"maxLength": 64
					}, {
						"type": "integer",
						"minimum": 1
					}]
				},
				"plugins": {
					"type": "object"
				},
				"script": {
					"minLength": 10,
					"type": "string",
					"maxLength": 102400
				},
				"methods": {
					"items": {
						"description": "HTTP method",
						"type": "string",
						"enum": ["GET", "POST", "PUT", "DELETE", "PATCH", "HEAD", "OPTIONS", "CONNECT", "TRACE"]
					},
					"type": "array",
					"uniqueItems": true
				},
				"name": {
					"minLength": 1,
					"type": "string",
					"maxLength": 100
				},
				"uris": {
					"items": {
						"type": "string",
						"description": "HTTP uri"
					},
					"uniqueItems": true,
					"type": "array",
					"minItems": 1
				},
				"priority": {
					"type": "integer",
					"default": 0
				}
			},
			"type": "object",
			"not": {
				"anyOf": [{
					"required": ["script", "plugins"]
				}]
			},
			"additionalProperties": false,
			"allOf": [{
				"oneOf": [{
					"required": ["uri"]
				}, {
					"required": ["uris"]
				}]
			}, {
				"oneOf": [{
					"not": {
						"anyOf": [{
							"required": ["host"]
						}, {
							"required": ["hosts"]
						}]
					}
				}, {
					"required": ["host"]
				}, {
					"required": ["hosts"]
				}]
			}, {
				"oneOf": [{
					"not": {
						"anyOf": [{
							"required": ["remote_addr"]
						}, {
							"required": ["remote_addrs"]
						}]
					}
				}, {
					"required": ["remote_addr"]
				}, {
					"required": ["remote_addrs"]
				}]
			}],
			"anyOf": [{
				"required": ["plugins", "uri"]
			}, {
				"required": ["upstream", "uri"]
			}, {
				"required": ["upstream_id", "uri"]
			}, {
				"required": ["service_id", "uri"]
			}, {
				"required": ["plugins", "uris"]
			}, {
				"required": ["upstream", "uris"]
			}, {
				"required": ["upstream_id", "uris"]
			}, {
				"required": ["service_id", "uris"]
			}, {
				"required": ["script", "uri"]
			}, {
				"required": ["script", "uris"]
			}]
		}
	},
	"plugins": {
		"request-id": {
			"schema": {
				"type": "object",
				"properties": {
					"include_in_response": {
						"type": "boolean",
						"default": true
					},
					"header_name": {
						"type": "string",
						"default": "X-Request-Id"
					}
				}
			}
		},
		"consumer-restriction": {
			"schema": {
				"type": "object",
				"oneOf": [{
					"title": "blacklist",
					"required": ["blacklist"],
					"properties": {
						"blacklist": {
							"minItems": 1,
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"type": {
							"default": "consumer_name",
							"type": "string",
							"enum": ["consumer_name", "service_id"]
						},
						"rejected_code": {
							"default": 403,
							"type": "integer",
							"minimum": 200
						}
					}
				}, {
					"title": "whitelist",
					"required": ["whitelist"],
					"properties": {
						"rejected_code": {
							"default": 403,
							"type": "integer",
							"minimum": 200
						},
						"type": {
							"default": "consumer_name",
							"type": "string",
							"enum": ["consumer_name", "service_id"]
						},
						"whitelist": {
							"minItems": 1,
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				}]
			}
		},
		"sls-logger": {
			"schema": {
				"properties": {
					"host": {
						"type": "string"
					},
					"inactive_timeout": {
						"default": 5,
						"type": "integer",
						"minimum": 1
					},
					"max_retry_count": {
						"default": 0,
						"type": "integer",
						"minimum": 0
					},
					"access_key_secret": {
						"type": "string"
					},
					"timeout": {
						"default": 5000,
						"type": "integer",
						"minimum": 1
					},
					"buffer_duration": {
						"default": 60,
						"type": "integer",
						"minimum": 1
					},
					"logstore": {
						"type": "string"
					},
					"name": {
						"type": "string",
						"default": "sls-logger"
					},
					"port": {
						"type": "integer"
					},
					"access_key_id": {
						"type": "string"
					},
					"retry_delay": {
						"default": 1,
						"type": "integer",
						"minimum": 0
					},
					"include_req_body": {
						"type": "boolean",
						"default": false
					},
					"batch_max_size": {
						"default": 1000,
						"type": "integer",
						"minimum": 1
					},
					"project": {
						"type": "string"
					}
				},
				"type": "object",
				"required": ["host", "port", "project", "logstore", "access_key_id", "access_key_secret"]
			}
		},
		"key-auth": {
			"consumer_schema": {
				"required": ["key"],
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"key": {
						"type": "string"
					}
				}
			},
			"schema": {
				"additionalProperties": false,
				"type": "object",
				"properties": {}
			}
		},
		"example-plugin": {
			"schema": {
				"properties": {
					"s": {
						"type": "string"
					},
					"t": {
						"type": "array",
						"minItems": 1
					},
					"port": {
						"type": "integer"
					},
					"i": {
						"type": "number",
						"minimum": 0
					},
					"ip": {
						"type": "string"
					}
				},
				"type": "object",
				"required": ["i"]
			}
		},
		"request-validation": {
			"schema": {
				"type": "object",
				"anyOf": [{
					"title": "Body schema",
					"required": ["body_schema"],
					"properties": {
						"body_schema": {
							"type": "object"
						}
					}
				}, {
					"title": "Header schema",
					"required": ["header_schema"],
					"properties": {
						"header_schema": {
							"type": "object"
						}
					}
				}]
			}
		},
		"redirect": {
			"schema": {
				"properties": {
					"ret_code": {
						"default": 302,
						"type": "integer",
						"minimum": 200
					},
					"uri": {
						"type": "string",
						"minLength": 2
					},
					"http_to_https": {
						"type": "boolean"
					}
				},
				"type": "object",
				"oneOf": [{
					"required": ["uri"]
				}, {
					"required": ["http_to_https"]
				}]
			}
		},
		"proxy-rewrite": {
			"schema": {
				"additionalProperties": false,
				"properties": {
					"host": {
						"description": "new host for upstream",
						"type": "string",
						"pattern": "^[0-9a-zA-Z-.]+$"
					},
					"regex_uri": {
						"items": {
							"type": "string",
							"description": "regex uri"
						},
						"type": "array",
						"minItems": 2,
						"description": "new uri that substitute from client uri for upstream, lower priority than uri property",
						"maxItems": 2
					},
					"uri": {
						"type": "string",
						"pattern": "^\\\/.*",
						"description": "new uri for upstream",
						"minLength": 1,
						"maxLength": 4096
					},
					"headers": {
						"description": "new headers for request",
						"type": "object",
						"minProperties": 1
					},
					"scheme": {
						"description": "new scheme for upstream",
						"type": "string",
						"enum": ["http", "https"]
					}
				},
				"type": "object",
				"minProperties": 1
			}
		},
		"kafka-logger": {
			"schema": {
				"properties": {
					"inactive_timeout": {
						"default": 5,
						"type": "integer",
						"minimum": 1
					},
					"max_retry_count": {
						"default": 0,
						"type": "integer",
						"minimum": 0
					},
					"meta_format": {
						"default": "default",
						"type": "string",
						"enum": ["default", "origin"]
					},
					"timeout": {
						"default": 3,
						"type": "integer",
						"minimum": 1
					},
					"include_req_body": {
						"type": "boolean",
						"default": false
					},
					"kafka_topic": {
						"type": "string"
					},
					"buffer_duration": {
						"default": 60,
						"type": "integer",
						"minimum": 1
					},
					"name": {
						"type": "string",
						"default": "kafka logger"
					},
					"retry_delay": {
						"default": 1,
						"type": "integer",
						"minimum": 0
					},
					"broker_list": {
						"type": "object"
					},
					"batch_max_size": {
						"default": 1000,
						"type": "integer",
						"minimum": 1
					},
					"key": {
						"type": "string"
					}
				},
				"type": "object",
				"required": ["broker_list", "kafka_topic"]
			}
		},
		"authz-keycloak": {
			"schema": {
				"properties": {
					"grant_type": {
						"default": "urn:ietf:params:oauth:grant-type:uma-ticket",
						"type": "string",
						"minLength": 1,
						"enum": ["urn:ietf:params:oauth:grant-type:uma-ticket"],
						"maxLength": 100
					},
					"permissions": {
						"items": {
							"minLength": 1,
							"type": "string",
							"maxLength": 100
						},
						"type": "array",
						"uniqueItems": true
					},
					"keepalive_pool": {
						"default": 5,
						"type": "integer",
						"minimum": 1
					},
					"token_endpoint": {
						"minLength": 1,
						"type": "string",
						"maxLength": 4096
					},
					"policy_enforcement_mode": {
						"default": "ENFORCING",
						"type": "string",
						"enum": ["ENFORCING", "PERMISSIVE"]
					},
					"timeout": {
						"default": 3000,
						"type": "integer",
						"minimum": 1000
					},
					"audience": {
						"minLength": 1,
						"type": "string",
						"maxLength": 100
					},
					"keepalive_timeout": {
						"default": 60000,
						"type": "integer",
						"minimum": 1000
					},
					"ssl_verify": {
						"type": "boolean",
						"default": true
					},
					"keepalive": {
						"type": "boolean",
						"default": true
					}
				},
				"type": "object",
				"required": ["token_endpoint"]
			}
		},
		"proxy-cache": {
			"schema": {
				"type": "object",
				"properties": {
					"no_cache": {
						"minItems": 1,
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "(^[^\\$].+$|^\\$[0-9a-zA-Z_]+$)"
						}
					},
					"cache_bypass": {
						"minItems": 1,
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "(^[^\\$].+$|^\\$[0-9a-zA-Z_]+$)"
						}
					},
					"cache_http_status": {
						"items": {
							"maximum": 599,
							"description": "http response status",
							"type": "integer",
							"minimum": 200
						},
						"default": [200, 301, 404],
						"type": "array",
						"minItems": 1,
						"uniqueItems": true
					},
					"cache_key": {
						"minItems": 1,
						"default": ["$host", "$request_uri"],
						"type": "array",
						"items": {
							"description": "a key for caching",
							"type": "string",
							"pattern": "(^[^\\$].+$|^\\$[0-9a-zA-Z_]+$)"
						}
					},
					"cache_method": {
						"items": {
							"description": "http method",
							"type": "string",
							"enum": ["GET", "POST", "PUT", "DELETE", "PATCH", "HEAD", "OPTIONS", "CONNECT", "TRACE"]
						},
						"default": ["GET", "HEAD"],
						"type": "array",
						"minItems": 1,
						"uniqueItems": true
					},
					"hide_cache_headers": {
						"type": "boolean",
						"default": false
					},
					"cache_zone": {
						"default": "disk_cache_one",
						"minLength": 1,
						"type": "string",
						"maxLength": 100
					}
				}
			}
		},
		"ip-restriction": {
			"schema": {
				"type": "object",
				"oneOf": [{
					"additionalProperties": false,
					"title": "whitelist",
					"required": ["whitelist"],
					"properties": {
						"whitelist": {
							"items": {
								"anyOf": [{
									"title": "IPv4",
									"type": "string",
									"format": "ipv4"
								}, {
									"title": "IPv4\/CIDR",
									"type": "string",
									"pattern": "^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}\/[0-9]{1,2}$"
								}, {
									"title": "IPv6",
									"type": "string",
									"format": "ipv6"
								}, {
									"title": "IPv6\/CIDR",
									"type": "string",
									"pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?\/[0-9]{1,3}$"
								}]
							},
							"type": "array",
							"minItems": 1
						}
					}
				}, {
					"additionalProperties": false,
					"title": "blacklist",
					"required": ["blacklist"],
					"properties": {
						"blacklist": {
							"items": {
								"anyOf": [{
									"title": "IPv4",
									"type": "string",
									"format": "ipv4"
								}, {
									"title": "IPv4\/CIDR",
									"type": "string",
									"pattern": "^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}\/[0-9]{1,2}$"
								}, {
									"title": "IPv6",
									"type": "string",
									"format": "ipv6"
								}, {
									"title": "IPv6\/CIDR",
									"type": "string",
									"pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?\/[0-9]{1,3}$"
								}]
							},
							"type": "array",
							"minItems": 1
						}
					}
				}]
			}
		},
		"limit-conn": {
			"schema": {
				"properties": {
					"default_conn_delay": {
						"type": "number",
						"exclusiveMinimum": 0
					},
					"burst": {
						"type": "integer",
						"minimum": 0
					},
					"conn": {
						"type": "integer",
						"exclusiveMinimum": 0
					},
					"rejected_code": {
						"default": 503,
						"type": "integer",
						"minimum": 200
					},
					"key": {
						"type": "string",
						"enum": ["remote_addr", "server_addr", "http_x_real_ip", "http_x_forwarded_for", "consumer_name"]
					}
				},
				"type": "object",
				"required": ["conn", "burst", "default_conn_delay", "key"]
			}
		},
		"skywalking": {
			"schema": {
				"properties": {
					"sample_ratio": {
						"maximum": 1,
						"default": 1,
						"type": "number",
						"minimum": 1e-05
					}
				},
				"type": "object",
				"additionalProperties": false
			}
		},
		"fault-injection": {
			"schema": {
				"properties": {
					"delay": {
						"properties": {
							"duration": {
								"type": "number",
								"minimum": 0
							},
							"percentage": {
								"maximum": 100,
								"type": "integer",
								"minimum": 0
							}
						},
						"type": "object",
						"required": ["duration"]
					},
					"abort": {
						"properties": {
							"http_status": {
								"type": "integer",
								"minimum": 200
							},
							"body": {
								"type": "string",
								"minLength": 0
							},
							"percentage": {
								"maximum": 100,
								"type": "integer",
								"minimum": 0
							}
						},
						"type": "object",
						"required": ["http_status"]
					}
				},
				"type": "object",
				"minProperties": 1
			}
		},
		"grpc-transcode": {
			"schema": {
				"required": ["proto_id", "service", "method"],
				"properties": {
					"pb_option": {
						"items": {
							"type": "string",
							"anyOf": [{
								"description": "enum as result",
								"type": "string",
								"enum": ["int64_as_number", "int64_as_string", "int64_as_hexstring"]
							}, {
								"description": "int64 as result",
								"type": "string",
								"enum": ["ienum_as_name", "enum_as_value"]
							}, {
								"description": "default values option",
								"type": "string",
								"enum": ["auto_default_values", "no_default_values", "use_default_values", "use_default_metatable"]
							}, {
								"description": "hooks option",
								"type": "string",
								"enum": ["enable_hooks", "disable_hooks"]
							}]
						},
						"type": "array",
						"minItems": 1
					},
					"proto_id": {
						"anyOf": [{
							"pattern": "^[a-zA-Z0-9-_.]+$",
							"minLength": 1,
							"type": "string",
							"maxLength": 64
						}, {
							"type": "integer",
							"minimum": 1
						}]
					},
					"service": {
						"type": "string",
						"description": "the grpc service name"
					},
					"deadline": {
						"description": "deadline for grpc, millisecond",
						"type": "number",
						"default": 0
					},
					"method": {
						"type": "string",
						"description": "the method name in the grpc service."
					}
				},
				"type": "object",
				"additionalProperties": true
			}
		},
		"server-info": {
			"schema": {
				"type": "object",
				"additionalProperties": false
			}
		},
		"prometheus": {
			"schema": {
				"type": "object",
				"additionalProperties": false
			}
		},
		"limit-count": {
			"schema": {
				"dependencies": {
					"policy": {
						"oneOf": [{
							"properties": {
								"policy": {
									"enum": ["local"]
								}
							}
						}, {
							"required": ["redis_host"],
							"properties": {
								"redis_host": {
									"type": "string",
									"minLength": 2
								},
								"redis_password": {
									"type": "string",
									"minLength": 0
								},
								"redis_port": {
									"default": 6379,
									"type": "integer",
									"minimum": 1
								},
								"policy": {
									"enum": ["redis"]
								},
								"redis_timeout": {
									"default": 1000,
									"type": "integer",
									"minimum": 1
								}
							}
						}, {
							"required": ["redis_cluster_nodes"],
							"properties": {
								"redis_timeout": {
									"default": 1000,
									"type": "integer",
									"minimum": 1
								},
								"policy": {
									"enum": ["redis-cluster"]
								},
								"redis_cluster_nodes": {
									"minItems": 2,
									"type": "array",
									"items": {
										"minLength": 2,
										"type": "string",
										"maxLength": 100
									}
								},
								"redis_password": {
									"type": "string",
									"minLength": 0
								}
							}
						}]
					}
				},
				"properties": {
					"time_window": {
						"type": "integer",
						"minimum": 0
					},
					"count": {
						"type": "integer",
						"minimum": 0
					},
					"policy": {
						"default": "local",
						"type": "string",
						"enum": ["local", "redis", "redis-cluster"]
					},
					"rejected_code": {
						"maximum": 600,
						"default": 503,
						"type": "integer",
						"minimum": 200
					},
					"key": {
						"default": "remote_addr",
						"type": "string",
						"enum": ["remote_addr", "server_addr", "http_x_real_ip", "http_x_forwarded_for", "consumer_name", "service_id"]
					}
				},
				"type": "object",
				"required": ["count", "time_window"]
			}
		},
		"proxy-mirror": {
			"schema": {
				"required": ["host"],
				"properties": {
					"host": {
						"type": "string",
						"pattern": "^http(s)?:\\\/\\\/[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(\\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+(:[0-9]{1,5})?$"
					}
				},
				"type": "object",
				"minProperties": 1
			}
		},
		"wolf-rbac": {
			"schema": {
				"type": "object",
				"properties": {
					"appid": {
						"type": "string",
						"default": "unset"
					},
					"header_prefix": {
						"type": "string",
						"default": "X-"
					},
					"server": {
						"type": "string",
						"default": "http:\/\/127.0.0.1:10080"
					}
				}
			}
		},
		"serverless-post-function": {
			"schema": {
				"properties": {
					"functions": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"minItems": 1
					},
					"phase": {
						"type": "string",
						"enum": ["rewrite", "access", "header_filter", "body_filter", "log", "balancer"]
					}
				},
				"type": "object",
				"required": ["functions"]
			}
		},
		"uri-blocker": {
			"schema": {
				"properties": {
					"rejected_code": {
						"default": 403,
						"type": "integer",
						"minimum": 200
					},
					"block_rules": {
						"items": {
							"minLength": 1,
							"type": "string",
							"maxLength": 4096
						},
						"type": "array",
						"uniqueItems": true
					}
				},
				"type": "object",
				"required": ["block_rules"]
			}
		},
		"batch-requests": {
			"schema": {
				"type": "object",
				"additionalProperties": false
			}
		},
		"echo": {
			"schema": {
				"properties": {
					"auth_value": {
						"type": "string",
						"description": "auth value"
					},
					"headers": {
						"description": "new headers for response",
						"type": "object",
						"minProperties": 1
					},
					"before_body": {
						"type": "string",
						"description": "body before the filter phase."
					},
					"body": {
						"type": "string",
						"description": "body to replace upstream response."
					},
					"after_body": {
						"type": "string",
						"description": "body after the modification of filter phase."
					}
				},
				"type": "object",
				"minProperties": 1,
				"additionalProperties": false,
				"anyOf": [{
					"required": ["before_body"]
				}, {
					"required": ["body"]
				}, {
					"required": ["after_body"]
				}]
			}
		},
		"zipkin": {
			"schema": {
				"properties": {
					"endpoint": {
						"type": "string"
					},
					"server_addr": {
						"description": "default is $server_addr, you can specify your external ip address",
						"type": "string",
						"pattern": "^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}$"
					},
					"service_name": {
						"description": "service name for zipkin reporter",
						"type": "string",
						"default": "APISIX"
					},
					"sample_ratio": {
						"maximum": 1,
						"type": "number",
						"minimum": 1e-05
					}
				},
				"type": "object",
				"required": ["endpoint", "sample_ratio"]
			}
		},
		"udp-logger": {
			"schema": {
				"properties": {
					"host": {
						"type": "string"
					},
					"include_req_body": {
						"type": "boolean",
						"default": false
					},
					"inactive_timeout": {
						"default": 5,
						"type": "integer",
						"minimum": 1
					},
					"port": {
						"type": "integer",
						"minimum": 0
					},
					"buffer_duration": {
						"default": 60,
						"type": "integer",
						"minimum": 1
					},
					"name": {
						"type": "string",
						"default": "udp logger"
					},
					"timeout": {
						"default": 3,
						"type": "integer",
						"minimum": 1
					},
					"batch_max_size": {
						"default": 1000,
						"type": "integer",
						"minimum": 1
					}
				},
				"type": "object",
				"required": ["host", "port"]
			}
		},
		"tcp-logger": {
			"schema": {
				"properties": {
					"host": {
						"type": "string"
					},
					"tls": {
						"type": "boolean",
						"default": false
					},
					"port": {
						"type": "integer",
						"minimum": 0
					},
					"timeout": {
						"default": 1000,
						"type": "integer",
						"minimum": 1
					},
					"include_req_body": {
						"type": "boolean",
						"default": false
					},
					"max_retry_count": {
						"default": 0,
						"type": "integer",
						"minimum": 0
					},
					"inactive_timeout": {
						"default": 5,
						"type": "integer",
						"minimum": 1
					},
					"buffer_duration": {
						"default": 60,
						"type": "integer",
						"minimum": 1
					},
					"retry_delay": {
						"default": 1,
						"type": "integer",
						"minimum": 0
					},
					"name": {
						"type": "string",
						"default": "tcp logger"
					},
					"batch_max_size": {
						"default": 1000,
						"type": "integer",
						"minimum": 1
					},
					"tls_options": {
						"type": "string"
					}
				},
				"type": "object",
				"required": ["host", "port"]
			}
		},
		"hmac-auth": {
			"consumer_schema": {
				"properties": {
					"algorithm": {
						"default": "hmac-sha256",
						"type": "string",
						"enum": ["hmac-sha1", "hmac-sha256", "hmac-sha512"]
					},
					"secret_key": {
						"minLength": 1,
						"type": "string",
						"maxLength": 256
					},
					"keep_headers": {
						"title": "whether to keep the http request header",
						"type": "boolean",
						"default": false
					},
					"clock_skew": {
						"type": "integer",
						"default": 0
					},
					"access_key": {
						"minLength": 1,
						"type": "string",
						"maxLength": 256
					},
					"encode_uri_params": {
						"title": "Whether to escape the uri parameter",
						"type": "boolean",
						"default": true
					},
					"signed_headers": {
						"type": "array",
						"items": {
							"minLength": 1,
							"type": "string",
							"maxLength": 50
						}
					}
				},
				"type": "object",
				"title": "work with consumer object",
				"additionalProperties": false,
				"required": ["access_key", "secret_key"]
			},
			"schema": {
				"additionalProperties": false,
				"title": "work with route or service object",
				"type": "object",
				"properties": {}
			}
		},
		"serverless-pre-function": {
			"schema": {
				"properties": {
					"functions": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"minItems": 1
					},
					"phase": {
						"type": "string",
						"enum": ["rewrite", "access", "header_filter", "body_filter", "log", "balancer"]
					}
				},
				"type": "object",
				"required": ["functions"]
			}
		},
		"log-rotate": {
			"schema": {
				"properties": {},
				"type": "object",
				"additionalProperties": false
			}
		},
		"syslog": {
			"schema": {
				"properties": {
					"host": {
						"type": "string"
					},
					"pool_size": {
						"default": 5,
						"type": "integer",
						"minimum": 5
					},
					"tls": {
						"type": "boolean",
						"default": false
					},
					"port": {
						"type": "integer"
					},
					"drop_limit": {
						"type": "integer",
						"default": 1048576
					},
					"timeout": {
						"default": 3,
						"type": "integer",
						"minimum": 1
					},
					"include_req_body": {
						"type": "boolean",
						"default": false
					},
					"max_retry_times": {
						"default": 1,
						"type": "integer",
						"minimum": 1
					},
					"buffer_duration": {
						"default": 60,
						"type": "integer",
						"minimum": 1
					},
					"sock_type": {
						"default": "tcp",
						"type": "string",
						"enum": ["tcp", "udp"]
					},
					"flush_limit": {
						"default": 4096,
						"type": "integer",
						"minimum": 1
					},
					"name": {
						"type": "string",
						"default": "sys logger"
					},
					"batch_max_size": {
						"default": 1000,
						"type": "integer",
						"minimum": 1
					},
					"retry_interval": {
						"default": 1,
						"type": "integer",
						"minimum": 0
					}
				},
				"type": "object",
				"required": ["host", "port"]
			}
		},
		"openid-connect": {
			"schema": {
				"properties": {
					"client_id": {
						"type": "string"
					},
					"redirect_uri": {
						"type": "string"
					},
					"introspection_endpoint_auth_method": {
						"type": "string"
					},
					"public_key": {
						"type": "string"
					},
					"timeout": {
						"type": "integer",
						"minimum": 1
					},
					"bearer_only": {
						"type": "boolean"
					},
					"token_signing_alg_values_expected": {
						"type": "string"
					},
					"realm": {
						"type": "string"
					},
					"discovery": {
						"type": "string"
					},
					"logout_path": {
						"type": "string"
					},
					"scope": {
						"type": "string"
					},
					"introspection_endpoint": {
						"type": "string"
					},
					"ssl_verify": {
						"type": "boolean"
					},
					"client_secret": {
						"type": "string"
					}
				},
				"type": "object",
				"required": ["client_id", "client_secret", "discovery"]
			}
		},
		"http-logger": {
			"schema": {
				"properties": {
					"auth_header": {
						"type": "string",
						"default": ""
					},
					"inactive_timeout": {
						"default": 5,
						"type": "integer",
						"minimum": 1
					},
					"max_retry_count": {
						"default": 0,
						"type": "integer",
						"minimum": 0
					},
					"concat_method": {
						"default": "json",
						"type": "string",
						"enum": ["json", "new_line"]
					},
					"timeout": {
						"default": 3,
						"type": "integer",
						"minimum": 1
					},
					"uri": {
						"type": "string",
						"pattern": "^[^\\\/]+:\\\/\\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?"
					},
					"include_req_body": {
						"type": "boolean",
						"default": false
					},
					"retry_delay": {
						"default": 1,
						"type": "integer",
						"minimum": 0
					},
					"name": {
						"type": "string",
						"default": "http logger"
					},
					"batch_max_size": {
						"default": 1000,
						"type": "integer",
						"minimum": 1
					},
					"buffer_duration": {
						"default": 60,
						"type": "integer",
						"minimum": 1
					}
				},
				"type": "object",
				"required": ["uri"]
			}
		},
		"basic-auth": {
			"consumer_schema": {
				"properties": {
					"password": {
						"type": "string"
					},
					"username": {
						"type": "string"
					}
				},
				"type": "object",
				"title": "work with consumer object",
				"additionalProperties": false,
				"required": ["username", "password"]
			},
			"schema": {
				"additionalProperties": false,
				"title": "work with route or service object",
				"type": "object",
				"properties": {}
			}
		},
		"api-breaker": {
			"schema": {
				"properties": {
					"break_response_code": {
						"maximum": 599,
						"type": "integer",
						"minimum": 200
					},
					"healthy": {
						"properties": {
							"successes": {
								"default": 3,
								"type": "integer",
								"minimum": 1
							},
							"http_statuses": {
								"items": {
									"maximum": 499,
									"type": "integer",
									"minimum": 200
								},
								"default": [200],
								"type": "array",
								"minItems": 1,
								"uniqueItems": true
							}
						},
						"type": "object",
						"default": {
							"successes": 3,
							"http_statuses": [200]
						}
					},
					"max_breaker_sec": {
						"default": 300,
						"type": "integer",
						"minimum": 3
					},
					"unhealthy": {
						"properties": {
							"failures": {
								"default": 3,
								"type": "integer",
								"minimum": 1
							},
							"http_statuses": {
								"items": {
									"maximum": 599,
									"type": "integer",
									"minimum": 500
								},
								"default": [500],
								"type": "array",
								"minItems": 1,
								"uniqueItems": true
							}
						},
						"type": "object",
						"default": {
							"failures": 3,
							"http_statuses": [500]
						}
					}
				},
				"type": "object",
				"required": ["break_response_code"]
			}
		},
		"node-status": {
			"schema": {
				"type": "object",
				"additionalProperties": false
			}
		},
		"response-rewrite": {
			"schema": {
				"additionalProperties": false,
				"properties": {
					"body": {
						"type": "string",
						"description": "new body for response"
					},
					"body_base64": {
						"description": "whether new body for response need base64 decode before return",
						"type": "boolean",
						"default": false
					},
					"headers": {
						"description": "new headers for response",
						"type": "object",
						"minProperties": 1
					},
					"status_code": {
						"maximum": 598,
						"description": "new status code for response",
						"type": "integer",
						"minimum": 200
					}
				},
				"type": "object",
				"minProperties": 1
			}
		},
		"referer-restriction": {
			"schema": {
				"additionalProperties": false,
				"properties": {
					"whitelist": {
						"items": {
							"type": "string",
							"pattern": "^\\*?[0-9a-zA-Z-.]+$"
						},
						"type": "array",
						"minItems": 1
					},
					"bypass_missing": {
						"type": "boolean",
						"default": false
					}
				},
				"type": "object",
				"required": ["whitelist"]
			}
		},
		"jwt-auth": {
			"consumer_schema": {
				"required": ["key"],
				"additionalProperties": false,
				"type": "object",
				"properties": {
					"algorithm": {
						"default": "HS256",
						"type": "string",
						"enum": ["HS256", "HS512", "RS256"]
					},
					"exp": {
						"default": 86400,
						"type": "integer",
						"minimum": 1
					},
					"private_key": {
						"type": "string"
					},
					"base64_secret": {
						"type": "boolean",
						"default": false
					},
					"public_key": {
						"type": "string"
					},
					"secret": {
						"type": "string"
					},
					"key": {
						"type": "string"
					}
				}
			},
			"schema": {
				"additionalProperties": false,
				"type": "object",
				"properties": {}
			}
		},
		"limit-req": {
			"schema": {
				"properties": {
					"rate": {
						"type": "number",
						"minimum": 0
					},
					"rejected_code": {
						"default": 503,
						"type": "integer",
						"minimum": 200
					},
					"burst": {
						"type": "number",
						"minimum": 0
					},
					"key": {
						"type": "string",
						"enum": ["remote_addr", "server_addr", "http_x_real_ip", "http_x_forwarded_for", "consumer_name"]
					}
				},
				"type": "object",
				"required": ["rate", "burst", "key"]
			}
		},
		"cors": {
			"schema": {
				"type": "object",
				"properties": {
					"allow_credential": {
						"description": "allow client append credential. according to CORS specification,if you set this option to 'true', you can not use '*' for other options.",
						"type": "boolean",
						"default": false
					},
					"allow_headers": {
						"description": "you can use '*' to allow all header when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple header use ',' to split. default: *.",
						"type": "string",
						"default": "*"
					},
					"max_age": {
						"description": "maximum number of seconds the results can be cached.-1 mean no cached,the max value is depend on browser,more detail plz check MDN. default: 5.",
						"type": "integer",
						"default": 5
					},
					"expose_headers": {
						"description": "you can use '*' to expose all header when no credentials,multiple header use ',' to split. default: *.",
						"type": "string",
						"default": "*"
					},
					"allow_methods": {
						"description": "you can use '*' to allow all methods when no credentials and '**','**' to allow forcefully(it will bring some security risks, be carefully),multiple method use ',' to split. default: *.",
						"type": "string",
						"default": "*"
					},
					"allow_origins": {
						"description": "you can use '*' to allow all origins when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple origin use ',' to split. default: *.",
						"type": "string",
						"default": "*"
					}
				}
			}
		}
	}
}