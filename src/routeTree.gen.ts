/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as UpstreamsIndexImport } from './routes/upstreams/index'
import { Route as StreamroutesIndexImport } from './routes/stream_routes/index'
import { Route as SslsIndexImport } from './routes/ssls/index'
import { Route as ServicesIndexImport } from './routes/services/index'
import { Route as SecretsIndexImport } from './routes/secrets/index'
import { Route as RoutesIndexImport } from './routes/routes/index'
import { Route as ProtosIndexImport } from './routes/protos/index'
import { Route as PluginmetadataIndexImport } from './routes/plugin_metadata/index'
import { Route as PluginconfigsIndexImport } from './routes/plugin_configs/index'
import { Route as GlobalrulesIndexImport } from './routes/global_rules/index'
import { Route as ConsumersIndexImport } from './routes/consumers/index'
import { Route as ConsumergroupsIndexImport } from './routes/consumer_groups/index'
import { Route as UpstreamsAddImport } from './routes/upstreams/add'
import { Route as StreamroutesAddImport } from './routes/stream_routes/add'
import { Route as SslsAddImport } from './routes/ssls/add'
import { Route as ServicesAddImport } from './routes/services/add'
import { Route as SecretsAddImport } from './routes/secrets/add'
import { Route as RoutesAddImport } from './routes/routes/add'
import { Route as ProtosAddImport } from './routes/protos/add'
import { Route as PluginconfigsAddImport } from './routes/plugin_configs/add'
import { Route as GlobalrulesAddImport } from './routes/global_rules/add'
import { Route as ConsumersAddImport } from './routes/consumers/add'
import { Route as ConsumergroupsAddImport } from './routes/consumer_groups/add'
import { Route as UpstreamsDetailIdImport } from './routes/upstreams/detail.$id'
import { Route as StreamroutesDetailIdImport } from './routes/stream_routes/detail.$id'
import { Route as SslsDetailIdImport } from './routes/ssls/detail.$id'
import { Route as ServicesDetailIdImport } from './routes/services/detail.$id'
import { Route as RoutesDetailIdImport } from './routes/routes/detail.$id'
import { Route as ProtosDetailIdImport } from './routes/protos/detail.$id'
import { Route as PluginconfigsDetailIdImport } from './routes/plugin_configs/detail.$id'
import { Route as GlobalrulesDetailIdImport } from './routes/global_rules/detail.$id'
import { Route as ConsumergroupsDetailIdImport } from './routes/consumer_groups/detail.$id'
import { Route as ConsumersDetailUsernameIndexImport } from './routes/consumers/detail.$username/index'
import { Route as SecretsDetailManagerIdImport } from './routes/secrets/detail.$manager.$id'
import { Route as ConsumersDetailUsernameCredentialsIndexImport } from './routes/consumers/detail.$username/credentials/index'
import { Route as ConsumersDetailUsernameCredentialsAddImport } from './routes/consumers/detail.$username/credentials/add'
import { Route as ConsumersDetailUsernameCredentialsDetailIdImport } from './routes/consumers/detail.$username/credentials/detail.$id'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UpstreamsIndexRoute = UpstreamsIndexImport.update({
  id: '/upstreams/',
  path: '/upstreams/',
  getParentRoute: () => rootRoute,
} as any)

const StreamroutesIndexRoute = StreamroutesIndexImport.update({
  id: '/stream_routes/',
  path: '/stream_routes/',
  getParentRoute: () => rootRoute,
} as any)

const SslsIndexRoute = SslsIndexImport.update({
  id: '/ssls/',
  path: '/ssls/',
  getParentRoute: () => rootRoute,
} as any)

const ServicesIndexRoute = ServicesIndexImport.update({
  id: '/services/',
  path: '/services/',
  getParentRoute: () => rootRoute,
} as any)

const SecretsIndexRoute = SecretsIndexImport.update({
  id: '/secrets/',
  path: '/secrets/',
  getParentRoute: () => rootRoute,
} as any)

const RoutesIndexRoute = RoutesIndexImport.update({
  id: '/routes/',
  path: '/routes/',
  getParentRoute: () => rootRoute,
} as any)

const ProtosIndexRoute = ProtosIndexImport.update({
  id: '/protos/',
  path: '/protos/',
  getParentRoute: () => rootRoute,
} as any)

const PluginmetadataIndexRoute = PluginmetadataIndexImport.update({
  id: '/plugin_metadata/',
  path: '/plugin_metadata/',
  getParentRoute: () => rootRoute,
} as any)

const PluginconfigsIndexRoute = PluginconfigsIndexImport.update({
  id: '/plugin_configs/',
  path: '/plugin_configs/',
  getParentRoute: () => rootRoute,
} as any)

const GlobalrulesIndexRoute = GlobalrulesIndexImport.update({
  id: '/global_rules/',
  path: '/global_rules/',
  getParentRoute: () => rootRoute,
} as any)

const ConsumersIndexRoute = ConsumersIndexImport.update({
  id: '/consumers/',
  path: '/consumers/',
  getParentRoute: () => rootRoute,
} as any)

const ConsumergroupsIndexRoute = ConsumergroupsIndexImport.update({
  id: '/consumer_groups/',
  path: '/consumer_groups/',
  getParentRoute: () => rootRoute,
} as any)

const UpstreamsAddRoute = UpstreamsAddImport.update({
  id: '/upstreams/add',
  path: '/upstreams/add',
  getParentRoute: () => rootRoute,
} as any)

const StreamroutesAddRoute = StreamroutesAddImport.update({
  id: '/stream_routes/add',
  path: '/stream_routes/add',
  getParentRoute: () => rootRoute,
} as any)

const SslsAddRoute = SslsAddImport.update({
  id: '/ssls/add',
  path: '/ssls/add',
  getParentRoute: () => rootRoute,
} as any)

const ServicesAddRoute = ServicesAddImport.update({
  id: '/services/add',
  path: '/services/add',
  getParentRoute: () => rootRoute,
} as any)

const SecretsAddRoute = SecretsAddImport.update({
  id: '/secrets/add',
  path: '/secrets/add',
  getParentRoute: () => rootRoute,
} as any)

const RoutesAddRoute = RoutesAddImport.update({
  id: '/routes/add',
  path: '/routes/add',
  getParentRoute: () => rootRoute,
} as any)

const ProtosAddRoute = ProtosAddImport.update({
  id: '/protos/add',
  path: '/protos/add',
  getParentRoute: () => rootRoute,
} as any)

const PluginconfigsAddRoute = PluginconfigsAddImport.update({
  id: '/plugin_configs/add',
  path: '/plugin_configs/add',
  getParentRoute: () => rootRoute,
} as any)

const GlobalrulesAddRoute = GlobalrulesAddImport.update({
  id: '/global_rules/add',
  path: '/global_rules/add',
  getParentRoute: () => rootRoute,
} as any)

const ConsumersAddRoute = ConsumersAddImport.update({
  id: '/consumers/add',
  path: '/consumers/add',
  getParentRoute: () => rootRoute,
} as any)

const ConsumergroupsAddRoute = ConsumergroupsAddImport.update({
  id: '/consumer_groups/add',
  path: '/consumer_groups/add',
  getParentRoute: () => rootRoute,
} as any)

const UpstreamsDetailIdRoute = UpstreamsDetailIdImport.update({
  id: '/upstreams/detail/$id',
  path: '/upstreams/detail/$id',
  getParentRoute: () => rootRoute,
} as any)

const StreamroutesDetailIdRoute = StreamroutesDetailIdImport.update({
  id: '/stream_routes/detail/$id',
  path: '/stream_routes/detail/$id',
  getParentRoute: () => rootRoute,
} as any)

const SslsDetailIdRoute = SslsDetailIdImport.update({
  id: '/ssls/detail/$id',
  path: '/ssls/detail/$id',
  getParentRoute: () => rootRoute,
} as any)

const ServicesDetailIdRoute = ServicesDetailIdImport.update({
  id: '/services/detail/$id',
  path: '/services/detail/$id',
  getParentRoute: () => rootRoute,
} as any)

const RoutesDetailIdRoute = RoutesDetailIdImport.update({
  id: '/routes/detail/$id',
  path: '/routes/detail/$id',
  getParentRoute: () => rootRoute,
} as any)

const ProtosDetailIdRoute = ProtosDetailIdImport.update({
  id: '/protos/detail/$id',
  path: '/protos/detail/$id',
  getParentRoute: () => rootRoute,
} as any)

const PluginconfigsDetailIdRoute = PluginconfigsDetailIdImport.update({
  id: '/plugin_configs/detail/$id',
  path: '/plugin_configs/detail/$id',
  getParentRoute: () => rootRoute,
} as any)

const GlobalrulesDetailIdRoute = GlobalrulesDetailIdImport.update({
  id: '/global_rules/detail/$id',
  path: '/global_rules/detail/$id',
  getParentRoute: () => rootRoute,
} as any)

const ConsumergroupsDetailIdRoute = ConsumergroupsDetailIdImport.update({
  id: '/consumer_groups/detail/$id',
  path: '/consumer_groups/detail/$id',
  getParentRoute: () => rootRoute,
} as any)

const ConsumersDetailUsernameIndexRoute =
  ConsumersDetailUsernameIndexImport.update({
    id: '/consumers/detail/$username/',
    path: '/consumers/detail/$username/',
    getParentRoute: () => rootRoute,
  } as any)

const SecretsDetailManagerIdRoute = SecretsDetailManagerIdImport.update({
  id: '/secrets/detail/$manager/$id',
  path: '/secrets/detail/$manager/$id',
  getParentRoute: () => rootRoute,
} as any)

const ConsumersDetailUsernameCredentialsIndexRoute =
  ConsumersDetailUsernameCredentialsIndexImport.update({
    id: '/consumers/detail/$username/credentials/',
    path: '/consumers/detail/$username/credentials/',
    getParentRoute: () => rootRoute,
  } as any)

const ConsumersDetailUsernameCredentialsAddRoute =
  ConsumersDetailUsernameCredentialsAddImport.update({
    id: '/consumers/detail/$username/credentials/add',
    path: '/consumers/detail/$username/credentials/add',
    getParentRoute: () => rootRoute,
  } as any)

const ConsumersDetailUsernameCredentialsDetailIdRoute =
  ConsumersDetailUsernameCredentialsDetailIdImport.update({
    id: '/consumers/detail/$username/credentials/detail/$id',
    path: '/consumers/detail/$username/credentials/detail/$id',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/consumer_groups/add': {
      id: '/consumer_groups/add'
      path: '/consumer_groups/add'
      fullPath: '/consumer_groups/add'
      preLoaderRoute: typeof ConsumergroupsAddImport
      parentRoute: typeof rootRoute
    }
    '/consumers/add': {
      id: '/consumers/add'
      path: '/consumers/add'
      fullPath: '/consumers/add'
      preLoaderRoute: typeof ConsumersAddImport
      parentRoute: typeof rootRoute
    }
    '/global_rules/add': {
      id: '/global_rules/add'
      path: '/global_rules/add'
      fullPath: '/global_rules/add'
      preLoaderRoute: typeof GlobalrulesAddImport
      parentRoute: typeof rootRoute
    }
    '/plugin_configs/add': {
      id: '/plugin_configs/add'
      path: '/plugin_configs/add'
      fullPath: '/plugin_configs/add'
      preLoaderRoute: typeof PluginconfigsAddImport
      parentRoute: typeof rootRoute
    }
    '/protos/add': {
      id: '/protos/add'
      path: '/protos/add'
      fullPath: '/protos/add'
      preLoaderRoute: typeof ProtosAddImport
      parentRoute: typeof rootRoute
    }
    '/routes/add': {
      id: '/routes/add'
      path: '/routes/add'
      fullPath: '/routes/add'
      preLoaderRoute: typeof RoutesAddImport
      parentRoute: typeof rootRoute
    }
    '/secrets/add': {
      id: '/secrets/add'
      path: '/secrets/add'
      fullPath: '/secrets/add'
      preLoaderRoute: typeof SecretsAddImport
      parentRoute: typeof rootRoute
    }
    '/services/add': {
      id: '/services/add'
      path: '/services/add'
      fullPath: '/services/add'
      preLoaderRoute: typeof ServicesAddImport
      parentRoute: typeof rootRoute
    }
    '/ssls/add': {
      id: '/ssls/add'
      path: '/ssls/add'
      fullPath: '/ssls/add'
      preLoaderRoute: typeof SslsAddImport
      parentRoute: typeof rootRoute
    }
    '/stream_routes/add': {
      id: '/stream_routes/add'
      path: '/stream_routes/add'
      fullPath: '/stream_routes/add'
      preLoaderRoute: typeof StreamroutesAddImport
      parentRoute: typeof rootRoute
    }
    '/upstreams/add': {
      id: '/upstreams/add'
      path: '/upstreams/add'
      fullPath: '/upstreams/add'
      preLoaderRoute: typeof UpstreamsAddImport
      parentRoute: typeof rootRoute
    }
    '/consumer_groups/': {
      id: '/consumer_groups/'
      path: '/consumer_groups'
      fullPath: '/consumer_groups'
      preLoaderRoute: typeof ConsumergroupsIndexImport
      parentRoute: typeof rootRoute
    }
    '/consumers/': {
      id: '/consumers/'
      path: '/consumers'
      fullPath: '/consumers'
      preLoaderRoute: typeof ConsumersIndexImport
      parentRoute: typeof rootRoute
    }
    '/global_rules/': {
      id: '/global_rules/'
      path: '/global_rules'
      fullPath: '/global_rules'
      preLoaderRoute: typeof GlobalrulesIndexImport
      parentRoute: typeof rootRoute
    }
    '/plugin_configs/': {
      id: '/plugin_configs/'
      path: '/plugin_configs'
      fullPath: '/plugin_configs'
      preLoaderRoute: typeof PluginconfigsIndexImport
      parentRoute: typeof rootRoute
    }
    '/plugin_metadata/': {
      id: '/plugin_metadata/'
      path: '/plugin_metadata'
      fullPath: '/plugin_metadata'
      preLoaderRoute: typeof PluginmetadataIndexImport
      parentRoute: typeof rootRoute
    }
    '/protos/': {
      id: '/protos/'
      path: '/protos'
      fullPath: '/protos'
      preLoaderRoute: typeof ProtosIndexImport
      parentRoute: typeof rootRoute
    }
    '/routes/': {
      id: '/routes/'
      path: '/routes'
      fullPath: '/routes'
      preLoaderRoute: typeof RoutesIndexImport
      parentRoute: typeof rootRoute
    }
    '/secrets/': {
      id: '/secrets/'
      path: '/secrets'
      fullPath: '/secrets'
      preLoaderRoute: typeof SecretsIndexImport
      parentRoute: typeof rootRoute
    }
    '/services/': {
      id: '/services/'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof ServicesIndexImport
      parentRoute: typeof rootRoute
    }
    '/ssls/': {
      id: '/ssls/'
      path: '/ssls'
      fullPath: '/ssls'
      preLoaderRoute: typeof SslsIndexImport
      parentRoute: typeof rootRoute
    }
    '/stream_routes/': {
      id: '/stream_routes/'
      path: '/stream_routes'
      fullPath: '/stream_routes'
      preLoaderRoute: typeof StreamroutesIndexImport
      parentRoute: typeof rootRoute
    }
    '/upstreams/': {
      id: '/upstreams/'
      path: '/upstreams'
      fullPath: '/upstreams'
      preLoaderRoute: typeof UpstreamsIndexImport
      parentRoute: typeof rootRoute
    }
    '/consumer_groups/detail/$id': {
      id: '/consumer_groups/detail/$id'
      path: '/consumer_groups/detail/$id'
      fullPath: '/consumer_groups/detail/$id'
      preLoaderRoute: typeof ConsumergroupsDetailIdImport
      parentRoute: typeof rootRoute
    }
    '/global_rules/detail/$id': {
      id: '/global_rules/detail/$id'
      path: '/global_rules/detail/$id'
      fullPath: '/global_rules/detail/$id'
      preLoaderRoute: typeof GlobalrulesDetailIdImport
      parentRoute: typeof rootRoute
    }
    '/plugin_configs/detail/$id': {
      id: '/plugin_configs/detail/$id'
      path: '/plugin_configs/detail/$id'
      fullPath: '/plugin_configs/detail/$id'
      preLoaderRoute: typeof PluginconfigsDetailIdImport
      parentRoute: typeof rootRoute
    }
    '/protos/detail/$id': {
      id: '/protos/detail/$id'
      path: '/protos/detail/$id'
      fullPath: '/protos/detail/$id'
      preLoaderRoute: typeof ProtosDetailIdImport
      parentRoute: typeof rootRoute
    }
    '/routes/detail/$id': {
      id: '/routes/detail/$id'
      path: '/routes/detail/$id'
      fullPath: '/routes/detail/$id'
      preLoaderRoute: typeof RoutesDetailIdImport
      parentRoute: typeof rootRoute
    }
    '/services/detail/$id': {
      id: '/services/detail/$id'
      path: '/services/detail/$id'
      fullPath: '/services/detail/$id'
      preLoaderRoute: typeof ServicesDetailIdImport
      parentRoute: typeof rootRoute
    }
    '/ssls/detail/$id': {
      id: '/ssls/detail/$id'
      path: '/ssls/detail/$id'
      fullPath: '/ssls/detail/$id'
      preLoaderRoute: typeof SslsDetailIdImport
      parentRoute: typeof rootRoute
    }
    '/stream_routes/detail/$id': {
      id: '/stream_routes/detail/$id'
      path: '/stream_routes/detail/$id'
      fullPath: '/stream_routes/detail/$id'
      preLoaderRoute: typeof StreamroutesDetailIdImport
      parentRoute: typeof rootRoute
    }
    '/upstreams/detail/$id': {
      id: '/upstreams/detail/$id'
      path: '/upstreams/detail/$id'
      fullPath: '/upstreams/detail/$id'
      preLoaderRoute: typeof UpstreamsDetailIdImport
      parentRoute: typeof rootRoute
    }
    '/secrets/detail/$manager/$id': {
      id: '/secrets/detail/$manager/$id'
      path: '/secrets/detail/$manager/$id'
      fullPath: '/secrets/detail/$manager/$id'
      preLoaderRoute: typeof SecretsDetailManagerIdImport
      parentRoute: typeof rootRoute
    }
    '/consumers/detail/$username/': {
      id: '/consumers/detail/$username/'
      path: '/consumers/detail/$username'
      fullPath: '/consumers/detail/$username'
      preLoaderRoute: typeof ConsumersDetailUsernameIndexImport
      parentRoute: typeof rootRoute
    }
    '/consumers/detail/$username/credentials/add': {
      id: '/consumers/detail/$username/credentials/add'
      path: '/consumers/detail/$username/credentials/add'
      fullPath: '/consumers/detail/$username/credentials/add'
      preLoaderRoute: typeof ConsumersDetailUsernameCredentialsAddImport
      parentRoute: typeof rootRoute
    }
    '/consumers/detail/$username/credentials/': {
      id: '/consumers/detail/$username/credentials/'
      path: '/consumers/detail/$username/credentials'
      fullPath: '/consumers/detail/$username/credentials'
      preLoaderRoute: typeof ConsumersDetailUsernameCredentialsIndexImport
      parentRoute: typeof rootRoute
    }
    '/consumers/detail/$username/credentials/detail/$id': {
      id: '/consumers/detail/$username/credentials/detail/$id'
      path: '/consumers/detail/$username/credentials/detail/$id'
      fullPath: '/consumers/detail/$username/credentials/detail/$id'
      preLoaderRoute: typeof ConsumersDetailUsernameCredentialsDetailIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/consumer_groups/add': typeof ConsumergroupsAddRoute
  '/consumers/add': typeof ConsumersAddRoute
  '/global_rules/add': typeof GlobalrulesAddRoute
  '/plugin_configs/add': typeof PluginconfigsAddRoute
  '/protos/add': typeof ProtosAddRoute
  '/routes/add': typeof RoutesAddRoute
  '/secrets/add': typeof SecretsAddRoute
  '/services/add': typeof ServicesAddRoute
  '/ssls/add': typeof SslsAddRoute
  '/stream_routes/add': typeof StreamroutesAddRoute
  '/upstreams/add': typeof UpstreamsAddRoute
  '/consumer_groups': typeof ConsumergroupsIndexRoute
  '/consumers': typeof ConsumersIndexRoute
  '/global_rules': typeof GlobalrulesIndexRoute
  '/plugin_configs': typeof PluginconfigsIndexRoute
  '/plugin_metadata': typeof PluginmetadataIndexRoute
  '/protos': typeof ProtosIndexRoute
  '/routes': typeof RoutesIndexRoute
  '/secrets': typeof SecretsIndexRoute
  '/services': typeof ServicesIndexRoute
  '/ssls': typeof SslsIndexRoute
  '/stream_routes': typeof StreamroutesIndexRoute
  '/upstreams': typeof UpstreamsIndexRoute
  '/consumer_groups/detail/$id': typeof ConsumergroupsDetailIdRoute
  '/global_rules/detail/$id': typeof GlobalrulesDetailIdRoute
  '/plugin_configs/detail/$id': typeof PluginconfigsDetailIdRoute
  '/protos/detail/$id': typeof ProtosDetailIdRoute
  '/routes/detail/$id': typeof RoutesDetailIdRoute
  '/services/detail/$id': typeof ServicesDetailIdRoute
  '/ssls/detail/$id': typeof SslsDetailIdRoute
  '/stream_routes/detail/$id': typeof StreamroutesDetailIdRoute
  '/upstreams/detail/$id': typeof UpstreamsDetailIdRoute
  '/secrets/detail/$manager/$id': typeof SecretsDetailManagerIdRoute
  '/consumers/detail/$username': typeof ConsumersDetailUsernameIndexRoute
  '/consumers/detail/$username/credentials/add': typeof ConsumersDetailUsernameCredentialsAddRoute
  '/consumers/detail/$username/credentials': typeof ConsumersDetailUsernameCredentialsIndexRoute
  '/consumers/detail/$username/credentials/detail/$id': typeof ConsumersDetailUsernameCredentialsDetailIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/consumer_groups/add': typeof ConsumergroupsAddRoute
  '/consumers/add': typeof ConsumersAddRoute
  '/global_rules/add': typeof GlobalrulesAddRoute
  '/plugin_configs/add': typeof PluginconfigsAddRoute
  '/protos/add': typeof ProtosAddRoute
  '/routes/add': typeof RoutesAddRoute
  '/secrets/add': typeof SecretsAddRoute
  '/services/add': typeof ServicesAddRoute
  '/ssls/add': typeof SslsAddRoute
  '/stream_routes/add': typeof StreamroutesAddRoute
  '/upstreams/add': typeof UpstreamsAddRoute
  '/consumer_groups': typeof ConsumergroupsIndexRoute
  '/consumers': typeof ConsumersIndexRoute
  '/global_rules': typeof GlobalrulesIndexRoute
  '/plugin_configs': typeof PluginconfigsIndexRoute
  '/plugin_metadata': typeof PluginmetadataIndexRoute
  '/protos': typeof ProtosIndexRoute
  '/routes': typeof RoutesIndexRoute
  '/secrets': typeof SecretsIndexRoute
  '/services': typeof ServicesIndexRoute
  '/ssls': typeof SslsIndexRoute
  '/stream_routes': typeof StreamroutesIndexRoute
  '/upstreams': typeof UpstreamsIndexRoute
  '/consumer_groups/detail/$id': typeof ConsumergroupsDetailIdRoute
  '/global_rules/detail/$id': typeof GlobalrulesDetailIdRoute
  '/plugin_configs/detail/$id': typeof PluginconfigsDetailIdRoute
  '/protos/detail/$id': typeof ProtosDetailIdRoute
  '/routes/detail/$id': typeof RoutesDetailIdRoute
  '/services/detail/$id': typeof ServicesDetailIdRoute
  '/ssls/detail/$id': typeof SslsDetailIdRoute
  '/stream_routes/detail/$id': typeof StreamroutesDetailIdRoute
  '/upstreams/detail/$id': typeof UpstreamsDetailIdRoute
  '/secrets/detail/$manager/$id': typeof SecretsDetailManagerIdRoute
  '/consumers/detail/$username': typeof ConsumersDetailUsernameIndexRoute
  '/consumers/detail/$username/credentials/add': typeof ConsumersDetailUsernameCredentialsAddRoute
  '/consumers/detail/$username/credentials': typeof ConsumersDetailUsernameCredentialsIndexRoute
  '/consumers/detail/$username/credentials/detail/$id': typeof ConsumersDetailUsernameCredentialsDetailIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/consumer_groups/add': typeof ConsumergroupsAddRoute
  '/consumers/add': typeof ConsumersAddRoute
  '/global_rules/add': typeof GlobalrulesAddRoute
  '/plugin_configs/add': typeof PluginconfigsAddRoute
  '/protos/add': typeof ProtosAddRoute
  '/routes/add': typeof RoutesAddRoute
  '/secrets/add': typeof SecretsAddRoute
  '/services/add': typeof ServicesAddRoute
  '/ssls/add': typeof SslsAddRoute
  '/stream_routes/add': typeof StreamroutesAddRoute
  '/upstreams/add': typeof UpstreamsAddRoute
  '/consumer_groups/': typeof ConsumergroupsIndexRoute
  '/consumers/': typeof ConsumersIndexRoute
  '/global_rules/': typeof GlobalrulesIndexRoute
  '/plugin_configs/': typeof PluginconfigsIndexRoute
  '/plugin_metadata/': typeof PluginmetadataIndexRoute
  '/protos/': typeof ProtosIndexRoute
  '/routes/': typeof RoutesIndexRoute
  '/secrets/': typeof SecretsIndexRoute
  '/services/': typeof ServicesIndexRoute
  '/ssls/': typeof SslsIndexRoute
  '/stream_routes/': typeof StreamroutesIndexRoute
  '/upstreams/': typeof UpstreamsIndexRoute
  '/consumer_groups/detail/$id': typeof ConsumergroupsDetailIdRoute
  '/global_rules/detail/$id': typeof GlobalrulesDetailIdRoute
  '/plugin_configs/detail/$id': typeof PluginconfigsDetailIdRoute
  '/protos/detail/$id': typeof ProtosDetailIdRoute
  '/routes/detail/$id': typeof RoutesDetailIdRoute
  '/services/detail/$id': typeof ServicesDetailIdRoute
  '/ssls/detail/$id': typeof SslsDetailIdRoute
  '/stream_routes/detail/$id': typeof StreamroutesDetailIdRoute
  '/upstreams/detail/$id': typeof UpstreamsDetailIdRoute
  '/secrets/detail/$manager/$id': typeof SecretsDetailManagerIdRoute
  '/consumers/detail/$username/': typeof ConsumersDetailUsernameIndexRoute
  '/consumers/detail/$username/credentials/add': typeof ConsumersDetailUsernameCredentialsAddRoute
  '/consumers/detail/$username/credentials/': typeof ConsumersDetailUsernameCredentialsIndexRoute
  '/consumers/detail/$username/credentials/detail/$id': typeof ConsumersDetailUsernameCredentialsDetailIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/consumer_groups/add'
    | '/consumers/add'
    | '/global_rules/add'
    | '/plugin_configs/add'
    | '/protos/add'
    | '/routes/add'
    | '/secrets/add'
    | '/services/add'
    | '/ssls/add'
    | '/stream_routes/add'
    | '/upstreams/add'
    | '/consumer_groups'
    | '/consumers'
    | '/global_rules'
    | '/plugin_configs'
    | '/plugin_metadata'
    | '/protos'
    | '/routes'
    | '/secrets'
    | '/services'
    | '/ssls'
    | '/stream_routes'
    | '/upstreams'
    | '/consumer_groups/detail/$id'
    | '/global_rules/detail/$id'
    | '/plugin_configs/detail/$id'
    | '/protos/detail/$id'
    | '/routes/detail/$id'
    | '/services/detail/$id'
    | '/ssls/detail/$id'
    | '/stream_routes/detail/$id'
    | '/upstreams/detail/$id'
    | '/secrets/detail/$manager/$id'
    | '/consumers/detail/$username'
    | '/consumers/detail/$username/credentials/add'
    | '/consumers/detail/$username/credentials'
    | '/consumers/detail/$username/credentials/detail/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/consumer_groups/add'
    | '/consumers/add'
    | '/global_rules/add'
    | '/plugin_configs/add'
    | '/protos/add'
    | '/routes/add'
    | '/secrets/add'
    | '/services/add'
    | '/ssls/add'
    | '/stream_routes/add'
    | '/upstreams/add'
    | '/consumer_groups'
    | '/consumers'
    | '/global_rules'
    | '/plugin_configs'
    | '/plugin_metadata'
    | '/protos'
    | '/routes'
    | '/secrets'
    | '/services'
    | '/ssls'
    | '/stream_routes'
    | '/upstreams'
    | '/consumer_groups/detail/$id'
    | '/global_rules/detail/$id'
    | '/plugin_configs/detail/$id'
    | '/protos/detail/$id'
    | '/routes/detail/$id'
    | '/services/detail/$id'
    | '/ssls/detail/$id'
    | '/stream_routes/detail/$id'
    | '/upstreams/detail/$id'
    | '/secrets/detail/$manager/$id'
    | '/consumers/detail/$username'
    | '/consumers/detail/$username/credentials/add'
    | '/consumers/detail/$username/credentials'
    | '/consumers/detail/$username/credentials/detail/$id'
  id:
    | '__root__'
    | '/'
    | '/consumer_groups/add'
    | '/consumers/add'
    | '/global_rules/add'
    | '/plugin_configs/add'
    | '/protos/add'
    | '/routes/add'
    | '/secrets/add'
    | '/services/add'
    | '/ssls/add'
    | '/stream_routes/add'
    | '/upstreams/add'
    | '/consumer_groups/'
    | '/consumers/'
    | '/global_rules/'
    | '/plugin_configs/'
    | '/plugin_metadata/'
    | '/protos/'
    | '/routes/'
    | '/secrets/'
    | '/services/'
    | '/ssls/'
    | '/stream_routes/'
    | '/upstreams/'
    | '/consumer_groups/detail/$id'
    | '/global_rules/detail/$id'
    | '/plugin_configs/detail/$id'
    | '/protos/detail/$id'
    | '/routes/detail/$id'
    | '/services/detail/$id'
    | '/ssls/detail/$id'
    | '/stream_routes/detail/$id'
    | '/upstreams/detail/$id'
    | '/secrets/detail/$manager/$id'
    | '/consumers/detail/$username/'
    | '/consumers/detail/$username/credentials/add'
    | '/consumers/detail/$username/credentials/'
    | '/consumers/detail/$username/credentials/detail/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ConsumergroupsAddRoute: typeof ConsumergroupsAddRoute
  ConsumersAddRoute: typeof ConsumersAddRoute
  GlobalrulesAddRoute: typeof GlobalrulesAddRoute
  PluginconfigsAddRoute: typeof PluginconfigsAddRoute
  ProtosAddRoute: typeof ProtosAddRoute
  RoutesAddRoute: typeof RoutesAddRoute
  SecretsAddRoute: typeof SecretsAddRoute
  ServicesAddRoute: typeof ServicesAddRoute
  SslsAddRoute: typeof SslsAddRoute
  StreamroutesAddRoute: typeof StreamroutesAddRoute
  UpstreamsAddRoute: typeof UpstreamsAddRoute
  ConsumergroupsIndexRoute: typeof ConsumergroupsIndexRoute
  ConsumersIndexRoute: typeof ConsumersIndexRoute
  GlobalrulesIndexRoute: typeof GlobalrulesIndexRoute
  PluginconfigsIndexRoute: typeof PluginconfigsIndexRoute
  PluginmetadataIndexRoute: typeof PluginmetadataIndexRoute
  ProtosIndexRoute: typeof ProtosIndexRoute
  RoutesIndexRoute: typeof RoutesIndexRoute
  SecretsIndexRoute: typeof SecretsIndexRoute
  ServicesIndexRoute: typeof ServicesIndexRoute
  SslsIndexRoute: typeof SslsIndexRoute
  StreamroutesIndexRoute: typeof StreamroutesIndexRoute
  UpstreamsIndexRoute: typeof UpstreamsIndexRoute
  ConsumergroupsDetailIdRoute: typeof ConsumergroupsDetailIdRoute
  GlobalrulesDetailIdRoute: typeof GlobalrulesDetailIdRoute
  PluginconfigsDetailIdRoute: typeof PluginconfigsDetailIdRoute
  ProtosDetailIdRoute: typeof ProtosDetailIdRoute
  RoutesDetailIdRoute: typeof RoutesDetailIdRoute
  ServicesDetailIdRoute: typeof ServicesDetailIdRoute
  SslsDetailIdRoute: typeof SslsDetailIdRoute
  StreamroutesDetailIdRoute: typeof StreamroutesDetailIdRoute
  UpstreamsDetailIdRoute: typeof UpstreamsDetailIdRoute
  SecretsDetailManagerIdRoute: typeof SecretsDetailManagerIdRoute
  ConsumersDetailUsernameIndexRoute: typeof ConsumersDetailUsernameIndexRoute
  ConsumersDetailUsernameCredentialsAddRoute: typeof ConsumersDetailUsernameCredentialsAddRoute
  ConsumersDetailUsernameCredentialsIndexRoute: typeof ConsumersDetailUsernameCredentialsIndexRoute
  ConsumersDetailUsernameCredentialsDetailIdRoute: typeof ConsumersDetailUsernameCredentialsDetailIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ConsumergroupsAddRoute: ConsumergroupsAddRoute,
  ConsumersAddRoute: ConsumersAddRoute,
  GlobalrulesAddRoute: GlobalrulesAddRoute,
  PluginconfigsAddRoute: PluginconfigsAddRoute,
  ProtosAddRoute: ProtosAddRoute,
  RoutesAddRoute: RoutesAddRoute,
  SecretsAddRoute: SecretsAddRoute,
  ServicesAddRoute: ServicesAddRoute,
  SslsAddRoute: SslsAddRoute,
  StreamroutesAddRoute: StreamroutesAddRoute,
  UpstreamsAddRoute: UpstreamsAddRoute,
  ConsumergroupsIndexRoute: ConsumergroupsIndexRoute,
  ConsumersIndexRoute: ConsumersIndexRoute,
  GlobalrulesIndexRoute: GlobalrulesIndexRoute,
  PluginconfigsIndexRoute: PluginconfigsIndexRoute,
  PluginmetadataIndexRoute: PluginmetadataIndexRoute,
  ProtosIndexRoute: ProtosIndexRoute,
  RoutesIndexRoute: RoutesIndexRoute,
  SecretsIndexRoute: SecretsIndexRoute,
  ServicesIndexRoute: ServicesIndexRoute,
  SslsIndexRoute: SslsIndexRoute,
  StreamroutesIndexRoute: StreamroutesIndexRoute,
  UpstreamsIndexRoute: UpstreamsIndexRoute,
  ConsumergroupsDetailIdRoute: ConsumergroupsDetailIdRoute,
  GlobalrulesDetailIdRoute: GlobalrulesDetailIdRoute,
  PluginconfigsDetailIdRoute: PluginconfigsDetailIdRoute,
  ProtosDetailIdRoute: ProtosDetailIdRoute,
  RoutesDetailIdRoute: RoutesDetailIdRoute,
  ServicesDetailIdRoute: ServicesDetailIdRoute,
  SslsDetailIdRoute: SslsDetailIdRoute,
  StreamroutesDetailIdRoute: StreamroutesDetailIdRoute,
  UpstreamsDetailIdRoute: UpstreamsDetailIdRoute,
  SecretsDetailManagerIdRoute: SecretsDetailManagerIdRoute,
  ConsumersDetailUsernameIndexRoute: ConsumersDetailUsernameIndexRoute,
  ConsumersDetailUsernameCredentialsAddRoute:
    ConsumersDetailUsernameCredentialsAddRoute,
  ConsumersDetailUsernameCredentialsIndexRoute:
    ConsumersDetailUsernameCredentialsIndexRoute,
  ConsumersDetailUsernameCredentialsDetailIdRoute:
    ConsumersDetailUsernameCredentialsDetailIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/consumer_groups/add",
        "/consumers/add",
        "/global_rules/add",
        "/plugin_configs/add",
        "/protos/add",
        "/routes/add",
        "/secrets/add",
        "/services/add",
        "/ssls/add",
        "/stream_routes/add",
        "/upstreams/add",
        "/consumer_groups/",
        "/consumers/",
        "/global_rules/",
        "/plugin_configs/",
        "/plugin_metadata/",
        "/protos/",
        "/routes/",
        "/secrets/",
        "/services/",
        "/ssls/",
        "/stream_routes/",
        "/upstreams/",
        "/consumer_groups/detail/$id",
        "/global_rules/detail/$id",
        "/plugin_configs/detail/$id",
        "/protos/detail/$id",
        "/routes/detail/$id",
        "/services/detail/$id",
        "/ssls/detail/$id",
        "/stream_routes/detail/$id",
        "/upstreams/detail/$id",
        "/secrets/detail/$manager/$id",
        "/consumers/detail/$username/",
        "/consumers/detail/$username/credentials/add",
        "/consumers/detail/$username/credentials/",
        "/consumers/detail/$username/credentials/detail/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/consumer_groups/add": {
      "filePath": "consumer_groups/add.tsx"
    },
    "/consumers/add": {
      "filePath": "consumers/add.tsx"
    },
    "/global_rules/add": {
      "filePath": "global_rules/add.tsx"
    },
    "/plugin_configs/add": {
      "filePath": "plugin_configs/add.tsx"
    },
    "/protos/add": {
      "filePath": "protos/add.tsx"
    },
    "/routes/add": {
      "filePath": "routes/add.tsx"
    },
    "/secrets/add": {
      "filePath": "secrets/add.tsx"
    },
    "/services/add": {
      "filePath": "services/add.tsx"
    },
    "/ssls/add": {
      "filePath": "ssls/add.tsx"
    },
    "/stream_routes/add": {
      "filePath": "stream_routes/add.tsx"
    },
    "/upstreams/add": {
      "filePath": "upstreams/add.tsx"
    },
    "/consumer_groups/": {
      "filePath": "consumer_groups/index.tsx"
    },
    "/consumers/": {
      "filePath": "consumers/index.tsx"
    },
    "/global_rules/": {
      "filePath": "global_rules/index.tsx"
    },
    "/plugin_configs/": {
      "filePath": "plugin_configs/index.tsx"
    },
    "/plugin_metadata/": {
      "filePath": "plugin_metadata/index.tsx"
    },
    "/protos/": {
      "filePath": "protos/index.tsx"
    },
    "/routes/": {
      "filePath": "routes/index.tsx"
    },
    "/secrets/": {
      "filePath": "secrets/index.tsx"
    },
    "/services/": {
      "filePath": "services/index.tsx"
    },
    "/ssls/": {
      "filePath": "ssls/index.tsx"
    },
    "/stream_routes/": {
      "filePath": "stream_routes/index.tsx"
    },
    "/upstreams/": {
      "filePath": "upstreams/index.tsx"
    },
    "/consumer_groups/detail/$id": {
      "filePath": "consumer_groups/detail.$id.tsx"
    },
    "/global_rules/detail/$id": {
      "filePath": "global_rules/detail.$id.tsx"
    },
    "/plugin_configs/detail/$id": {
      "filePath": "plugin_configs/detail.$id.tsx"
    },
    "/protos/detail/$id": {
      "filePath": "protos/detail.$id.tsx"
    },
    "/routes/detail/$id": {
      "filePath": "routes/detail.$id.tsx"
    },
    "/services/detail/$id": {
      "filePath": "services/detail.$id.tsx"
    },
    "/ssls/detail/$id": {
      "filePath": "ssls/detail.$id.tsx"
    },
    "/stream_routes/detail/$id": {
      "filePath": "stream_routes/detail.$id.tsx"
    },
    "/upstreams/detail/$id": {
      "filePath": "upstreams/detail.$id.tsx"
    },
    "/secrets/detail/$manager/$id": {
      "filePath": "secrets/detail.$manager.$id.tsx"
    },
    "/consumers/detail/$username/": {
      "filePath": "consumers/detail.$username/index.tsx"
    },
    "/consumers/detail/$username/credentials/add": {
      "filePath": "consumers/detail.$username/credentials/add.tsx"
    },
    "/consumers/detail/$username/credentials/": {
      "filePath": "consumers/detail.$username/credentials/index.tsx"
    },
    "/consumers/detail/$username/credentials/detail/$id": {
      "filePath": "consumers/detail.$username/credentials/detail.$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
