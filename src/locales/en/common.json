{
  "APISIX Dashboard": "APISIX Dashboard",
  "form": {
    "basic": {
      "labels": {
        "errorFormat": "The format of label is wrong, it should be `key:value`",
        "key": "Key",
        "placeholder": "Input text like `key:value`, then enter or blur",
        "title": "Labels",
        "value": "Value"
      },
      "title": "Basic Infomation"
    },
    "btn": {
      "add": "Add",
      "delete": "Delete",
      "edit": "Edit",
      "save": "Save"
    },
    "disabled": "Disabled, click switch to enable",
    "upstream": {
      "checks": {
        "active": {
          "concurrency": "Concurrency",
          "healthy": {
            "http_statuses": "HTTP Statuses",
            "interval": "Interval",
            "successes": "Successes",
            "title": "Healthy"
          },
          "unhealthy": {
            "http_statuses": "HTTP Statuses",
            "interval": "Interval",
            "http_failures": "HTTP Failures",
            "tcp_failures": "TCP Failures",
            "timeouts": "Timeouts",
            "title": "Unhealthy"
          },
          "host": "Host",
          "http_path": "HTTP Path",
          "http_request_headers": "HTTP Request Headers",
          "https_verify_certificate": "Https Verify Certificate",
          "port": "Port",
          "timeout": "Timeout",
          "title": "Active",
          "type": "Type"
        },
        "passive": {
          "healthy": {
            "http_statuses": "HTTP Statuses",
            "successes": "Successes",
            "title": "Healthy"
          },
          "unhealthy": {
            "http_statuses": "HTTP Statuses",
            "http_failures": "HTTP Failures",
            "tcp_failures": "TCP Failures",
            "timeouts": "Timeouts",
            "title": "Unhealthy"
          },
          "title": "Passive",
          "type": "Type"
        },
        "title": "Health Checks"
      },
      "connectionConfiguration": "Connection Configuration",
      "discoveryArgs": {
        "title": "Discovery Args"
      },
      "discoveryType": {
        "title": "Discovery Type"
      },
      "findUpstreamFrom": "Find Upstream From",
      "hashOn": "Hash On",
      "hashOnDesc": "This will be valid when `type` is `chash`",
      "keepalivePool": {
        "idleTimeout": "IDLE Timeout",
        "requests": "Requests",
        "size": "Size",
        "title": "Keepalive Pool"
      },
      "key": "Key",
      "keyDesc": "This will be valid when `type` is `chash`",
      "loadBalancing": "Load Balancing",
      "nodes": {
        "action": {
          "title": "Action"
        },
        "add": "Add a Node",
        "host": {
          "title": "Host"
        },
        "port": {
          "title": "Port"
        },
        "priority": {
          "title": "Priority"
        },
        "title": "Nodes",
        "weight": {
          "title": "Weight"
        }
      },
      "passHost": "Pass Host",
      "retries": "Retries",
      "retry": "Retry",
      "retryTimeout": "Retry timeout",
      "scheme": "Scheme",
      "serviceDiscovery": {
        "serviceName": "Service Name",
        "title": "Service Discovery"
      },
      "serviceName": {
        "title": "Service Name"
      },
      "timeout": {
        "connect": "Connect",
        "read": "Read",
        "send": "Send",
        "title": "Timeout"
      },
      "title": "Upstream",
      "tls": {
        "clientCert": "Client Cert",
        "clientCertId": "Client Cert ID",
        "clientKey": "Client Key",
        "title": "TLS",
        "verify": "Verify"
      },
      "type": "Type",
      "upstreamHost": "Upstream Host",
      "upstreamHostDesc": "Set this when `pass_host` is `rewrite`"
    }
  },
  "navbar": {
    "consumer": "Consumer",
    "pluginGlobalRules": "Plugin Global Rules",
    "route": "Route",
    "secret": "Secret",
    "service": "Service",
    "ssl": "SSL",
    "upstreams": "Upstreams"
  },
  "noData": "No Data",
  "or": "OR",
  "route": {
    "add": {
      "form": {
        "desc": "Description",
        "name": "Name",
        "uri": "URI",
        "uris": "URIs"
      },
      "submit": "Add",
      "title": "Add Route"
    }
  },
  "seconds": "Seconds",
  "setting": {
    "adminKey": "Admin Key",
    "title": "Setting"
  },
  "upstreams": {
    "add": {
      "title": "Add Upstream"
    }
  }
}
