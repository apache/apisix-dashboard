name: go-lint
on:
  push:
    branches:
      - master
    paths:
      - 'api/**'
  pull_request:
    branches:
      - master
    paths:
      - 'api/**'

jobs:
  go-filter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: paths-filter
        uses: ./.github/actions/paths-filter
        id: changes
        with:
          filters: |
            go:
              - '**.go'
          working-directory: 'api'
          list-files: shell
    outputs:
      matches: ${{ steps.changes.outputs.go }}
      files: ${{ steps.changes.outputs.go_files }}

  golangci:
    name: lint
    runs-on: ubuntu-latest
    needs: go-filter
    if: needs.go-filter.outputs.matches == 'true'
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest

          # Optional: working directory, useful for monorepos
          working-directory: api

          # Optional: golangci-lint command line arguments.
          args: --tests=false

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          only-new-issues: true

          # Optional: if set to true then the action will use pre-installed Go.
          # skip-go-installation: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

  gofmt:
    runs-on: ubuntu-latest
    needs: go-filter
    if: needs.go-filter.outputs.matches == 'true'
    steps:
      - uses: actions/checkout@v2
      - name: setup go
        uses: actions/setup-go@v1
        with:
          go-version: '1.13'
      - name: check gofmt
        run: |
          diffs=`gofmt -l ${{ needs.go-filter.outputs.files }}`
          if [[ -n $diffs ]]; then
              echo "Files are not formatted by gofmt:"
              echo $diffs
              exit 1
          fi
