{
    "main": {
      "proto": {
        "required": [
          "content"
        ],
        "type": "object",
        "properties": {
          "update_time": {
            "type": "integer"
          },
          "create_time": {
            "type": "integer"
          },
          "desc": {
            "type": "string",
            "maxLength": 256
          },
          "content": {
            "maxLength": 1048576,
            "type": "string",
            "minLength": 1
          },
          "id": {
            "anyOf": [
              {
                "maxLength": 64,
                "pattern": "^[a-zA-Z0-9-_.]+$",
                "type": "string",
                "minLength": 1
              },
              {
                "type": "integer",
                "minimum": 1
              }
            ]
          }
        }
      },
      "route": {
        "not": {
          "anyOf": [
            {
              "required": [
                "script",
                "plugins"
              ]
            },
            {
              "required": [
                "script",
                "plugin_config_id"
              ]
            }
          ]
        },
        "properties": {
          "script": {
            "maxLength": 102400,
            "type": "string",
            "minLength": 10
          },
          "upstream_id": {
            "anyOf": [
              {
                "maxLength": 64,
                "pattern": "^[a-zA-Z0-9-_.]+$",
                "type": "string",
                "minLength": 1
              },
              {
                "type": "integer",
                "minimum": 1
              }
            ]
          },
          "upstream": {
            "oneOf": [
              {
                "required": [
                  "type",
                  "nodes"
                ]
              },
              {
                "required": [
                  "type",
                  "service_name",
                  "discovery_type"
                ]
              }
            ],
            "type": "object",
            "properties": {
              "labels": {
                "type": "object",
                "patternProperties": {
                  ".*": {
                    "maxLength": 64,
                    "description": "value of label",
                    "type": "string",
                    "pattern": "^\\S+$",
                    "minLength": 1
                  }
                },
                "description": "key/value pairs to specify attributes",
                "maxProperties": 16
              },
              "discovery_type": {
                "description": "discovery type",
                "type": "string"
              },
              "discovery_args": {
                "type": "object",
                "properties": {
                  "group_name": {
                    "description": "group name",
                    "type": "string"
                  },
                  "namespace_id": {
                    "description": "namespace id",
                    "type": "string"
                  }
                }
              },
              "scheme": {
                "enum": [
                  "grpc",
                  "grpcs",
                  "http",
                  "https",
                  "tcp",
                  "tls",
                  "udp"
                ],
                "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp.",
                "default": "http"
              },
              "desc": {
                "type": "string",
                "maxLength": 256
              },
              "checks": {
                "anyOf": [
                  {
                    "required": [
                      "active"
                    ]
                  },
                  {
                    "required": [
                      "active",
                      "passive"
                    ]
                  }
                ],
                "type": "object",
                "properties": {
                  "passive": {
                    "default": {
                      "healthy": {
                        "http_statuses": [
                          200,
                          201,
                          202,
                          203,
                          204,
                          205,
                          206,
                          207,
                          208,
                          226,
                          300,
                          301,
                          302,
                          303,
                          304,
                          305,
                          306,
                          307,
                          308
                        ],
                        "successes": 0
                      },
                      "type": "http",
                      "unhealthy": {
                        "http_statuses": [
                          429,
                          500,
                          503
                        ],
                        "timeouts": 0,
                        "http_failures": 0,
                        "tcp_failures": 0
                      }
                    },
                    "type": "object",
                    "properties": {
                      "healthy": {
                        "type": "object",
                        "properties": {
                          "http_statuses": {
                            "items": {
                              "maximum": 599,
                              "type": "integer",
                              "minimum": 200
                            },
                            "uniqueItems": true,
                            "default": [
                              200,
                              201,
                              202,
                              203,
                              204,
                              205,
                              206,
                              207,
                              208,
                              226,
                              300,
                              301,
                              302,
                              303,
                              304,
                              305,
                              306,
                              307,
                              308
                            ],
                            "type": "array",
                            "minItems": 1
                          },
                          "successes": {
                            "maximum": 254,
                            "default": 5,
                            "type": "integer",
                            "minimum": 0
                          }
                        }
                      },
                      "type": {
                        "enum": [
                          "http",
                          "https",
                          "tcp"
                        ],
                        "type": "string",
                        "default": "http"
                      },
                      "unhealthy": {
                        "type": "object",
                        "properties": {
                          "http_statuses": {
                            "items": {
                              "maximum": 599,
                              "type": "integer",
                              "minimum": 200
                            },
                            "uniqueItems": true,
                            "default": [
                              429,
                              500,
                              503
                            ],
                            "type": "array",
                            "minItems": 1
                          },
                          "timeouts": {
                            "maximum": 254,
                            "default": 7,
                            "type": "integer",
                            "minimum": 0
                          },
                          "http_failures": {
                            "maximum": 254,
                            "default": 5,
                            "type": "integer",
                            "minimum": 0
                          },
                          "tcp_failures": {
                            "maximum": 254,
                            "default": 2,
                            "type": "integer",
                            "minimum": 0
                          }
                        }
                      }
                    }
                  },
                  "active": {
                    "type": "object",
                    "properties": {
                      "https_verify_certificate": {
                        "type": "boolean",
                        "default": true
                      },
                      "host": {
                        "type": "string",
                        "pattern": "^\\*?[0-9a-zA-Z-._]+$"
                      },
                      "req_headers": {
                        "items": {
                          "type": "string",
                          "uniqueItems": true
                        },
                        "type": "array",
                        "minItems": 1
                      },
                      "type": {
                        "enum": [
                          "http",
                          "https",
                          "tcp"
                        ],
                        "type": "string",
                        "default": "http"
                      },
                      "unhealthy": {
                        "type": "object",
                        "properties": {
                          "interval": {
                            "default": 1,
                            "type": "integer",
                            "minimum": 1
                          },
                          "http_failures": {
                            "maximum": 254,
                            "default": 5,
                            "type": "integer",
                            "minimum": 1
                          },
                          "tcp_failures": {
                            "maximum": 254,
                            "default": 2,
                            "type": "integer",
                            "minimum": 1
                          },
                          "timeouts": {
                            "maximum": 254,
                            "default": 3,
                            "type": "integer",
                            "minimum": 1
                          },
                          "http_statuses": {
                            "items": {
                              "maximum": 599,
                              "type": "integer",
                              "minimum": 200
                            },
                            "uniqueItems": true,
                            "default": [
                              429,
                              404,
                              500,
                              501,
                              502,
                              503,
                              504,
                              505
                            ],
                            "type": "array",
                            "minItems": 1
                          }
                        }
                      },
                      "timeout": {
                        "type": "number",
                        "default": 1
                      },
                      "concurrency": {
                        "type": "integer",
                        "default": 10
                      },
                      "healthy": {
                        "type": "object",
                        "properties": {
                          "interval": {
                            "default": 1,
                            "type": "integer",
                            "minimum": 1
                          },
                          "successes": {
                            "maximum": 254,
                            "default": 2,
                            "type": "integer",
                            "minimum": 1
                          },
                          "http_statuses": {
                            "items": {
                              "maximum": 599,
                              "type": "integer",
                              "minimum": 200
                            },
                            "uniqueItems": true,
                            "default": [
                              200,
                              302
                            ],
                            "type": "array",
                            "minItems": 1
                          }
                        }
                      },
                      "port": {
                        "maximum": 65535,
                        "type": "integer",
                        "minimum": 1
                      },
                      "http_path": {
                        "type": "string",
                        "default": "/"
                      }
                    }
                  }
                }
              },
              "keepalive_pool": {
                "type": "object",
                "properties": {
                  "size": {
                    "default": 320,
                    "type": "integer",
                    "minimum": 1
                  },
                  "idle_timeout": {
                    "default": 60,
                    "type": "number",
                    "minimum": 0
                  },
                  "requests": {
                    "default": 1000,
                    "type": "integer",
                    "minimum": 1
                  }
                }
              },
              "pass_host": {
                "default": "pass",
                "enum": [
                  "pass",
                  "node",
                  "rewrite"
                ],
                "description": "mod of host passing",
                "type": "string"
              },
              "nodes": {
                "anyOf": [
                  {
                    "type": "object",
                    "patternProperties": {
                      ".*": {
                        "type": "integer",
                        "description": "weight of node",
                        "minimum": 0
                      }
                    }
                  },
                  {
                    "type": "array",
                    "items": {
                      "required": [
                        "host",
                        "port",
                        "weight"
                      ],
                      "type": "object",
                      "properties": {
                        "weight": {
                          "type": "integer",
                          "description": "weight of node",
                          "minimum": 0
                        },
                        "host": {
                          "type": "string",
                          "pattern": "^\\*?[0-9a-zA-Z-._]+$"
                        },
                        "metadata": {
                          "description": "metadata of node",
                          "type": "object"
                        },
                        "priority": {
                          "default": 0,
                          "description": "priority of node",
                          "type": "integer"
                        },
                        "port": {
                          "type": "integer",
                          "description": "port of node",
                          "minimum": 1
                        }
                      }
                    }
                  }
                ]
              },
              "create_time": {
                "type": "integer"
              },
              "retries": {
                "type": "integer",
                "minimum": 0
              },
              "retry_timeout": {
                "type": "number",
                "minimum": 0
              },
              "tls": {
                "required": [
                  "client_cert",
                  "client_key"
                ],
                "type": "object",
                "properties": {
                  "client_cert": {
                    "maxLength": 65536,
                    "type": "string",
                    "minLength": 128
                  },
                  "client_key": {
                    "maxLength": 65536,
                    "type": "string",
                    "minLength": 128
                  }
                }
              },
              "type": {
                "description": "algorithms of load balancing",
                "type": "string"
              },
              "update_time": {
                "type": "integer"
              },
              "hash_on": {
                "default": "vars",
                "type": "string",
                "enum": [
                  "vars",
                  "header",
                  "cookie",
                  "consumer",
                  "vars_combinations"
                ]
              },
              "upstream_host": {
                "type": "string",
                "pattern": "^\\*?[0-9a-zA-Z-._]+$"
              },
              "service_name": {
                "maxLength": 256,
                "type": "string",
                "minLength": 1
              },
              "name": {
                "maxLength": 100,
                "type": "string",
                "minLength": 1
              },
              "id": {
                "anyOf": [
                  {
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9-_.]+$",
                    "type": "string",
                    "minLength": 1
                  },
                  {
                    "type": "integer",
                    "minimum": 1
                  }
                ]
              },
              "key": {
                "description": "the key of chash for dynamic load balancing",
                "type": "string"
              },
              "timeout": {
                "required": [
                  "connect",
                  "send",
                  "read"
                ],
                "type": "object",
                "properties": {
                  "connect": {
                    "type": "number",
                    "exclusiveMinimum": 0
                  },
                  "read": {
                    "type": "number",
                    "exclusiveMinimum": 0
                  },
                  "send": {
                    "type": "number",
                    "exclusiveMinimum": 0
                  }
                }
              }
            }
          },
          "enable_websocket": {
            "description": "enable websocket for request",
            "type": "boolean"
          },
          "plugin_config_id": {
            "anyOf": [
              {
                "maxLength": 64,
                "pattern": "^[a-zA-Z0-9-_.]+$",
                "type": "string",
                "minLength": 1
              },
              {
                "type": "integer",
                "minimum": 1
              }
            ]
          },
          "desc": {
            "type": "string",
            "maxLength": 256
          },
          "service_protocol": {
            "enum": [
              "grpc",
              "http"
            ]
          },
          "remote_addr": {
            "anyOf": [
              {
                "title": "IPv4",
                "type": "string",
                "format": "ipv4"
              },
              {
                "title": "IPv4/CIDR",
                "type": "string",
                "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$"
              },
              {
                "title": "IPv6",
                "type": "string",
                "format": "ipv6"
              },
              {
                "title": "IPv6/CIDR",
                "type": "string",
                "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$"
              }
            ],
            "description": "client IP",
            "type": "string"
          },
          "service_id": {
            "anyOf": [
              {
                "maxLength": 64,
                "pattern": "^[a-zA-Z0-9-_.]+$",
                "type": "string",
                "minLength": 1
              },
              {
                "type": "integer",
                "minimum": 1
              }
            ]
          },
          "status": {
            "default": 1,
            "enum": [
              1,
              0
            ],
            "description": "route status, 1 to enable, 0 to disable",
            "type": "integer"
          },
          "host": {
            "type": "string",
            "pattern": "^\\*?[0-9a-zA-Z-._]+$"
          },
          "labels": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "maxLength": 64,
                "description": "value of label",
                "type": "string",
                "pattern": "^\\S+$",
                "minLength": 1
              }
            },
            "description": "key/value pairs to specify attributes",
            "maxProperties": 16
          },
          "create_time": {
            "type": "integer"
          },
          "plugins": {
            "type": "object"
          },
          "uri": {
            "maxLength": 4096,
            "type": "string",
            "minLength": 1
          },
          "uris": {
            "items": {
              "description": "HTTP uri",
              "type": "string"
            },
            "uniqueItems": true,
            "type": "array",
            "minItems": 1
          },
          "priority": {
            "type": "integer",
            "default": 0
          },
          "methods": {
            "items": {
              "enum": [
                "GET",
                "POST",
                "PUT",
                "DELETE",
                "PATCH",
                "HEAD",
                "OPTIONS",
                "CONNECT",
                "TRACE"
              ],
              "description": "HTTP method",
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true
          },
          "hosts": {
            "items": {
              "type": "string",
              "pattern": "^\\*?[0-9a-zA-Z-._]+$"
            },
            "uniqueItems": true,
            "type": "array",
            "minItems": 1
          },
          "update_time": {
            "type": "integer"
          },
          "filter_func": {
            "pattern": "^function",
            "type": "string",
            "minLength": 10
          },
          "vars": {
            "type": "array"
          },
          "script_id": {
            "anyOf": [
              {
                "maxLength": 64,
                "pattern": "^[a-zA-Z0-9-_.]+$",
                "type": "string",
                "minLength": 1
              },
              {
                "type": "integer",
                "minimum": 1
              }
            ]
          },
          "name": {
            "maxLength": 100,
            "type": "string",
            "minLength": 1
          },
          "id": {
            "anyOf": [
              {
                "maxLength": 64,
                "pattern": "^[a-zA-Z0-9-_.]+$",
                "type": "string",
                "minLength": 1
              },
              {
                "type": "integer",
                "minimum": 1
              }
            ]
          },
          "remote_addrs": {
            "items": {
              "anyOf": [
                {
                  "title": "IPv4",
                  "type": "string",
                  "format": "ipv4"
                },
                {
                  "title": "IPv4/CIDR",
                  "type": "string",
                  "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$"
                },
                {
                  "title": "IPv6",
                  "type": "string",
                  "format": "ipv6"
                },
                {
                  "title": "IPv6/CIDR",
                  "type": "string",
                  "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$"
                }
              ],
              "description": "client IP",
              "type": "string"
            },
            "uniqueItems": true,
            "type": "array",
            "minItems": 1
          },
          "timeout": {
            "required": [
              "connect",
              "send",
              "read"
            ],
            "type": "object",
            "properties": {
              "connect": {
                "type": "number",
                "exclusiveMinimum": 0
              },
              "read": {
                "type": "number",
                "exclusiveMinimum": 0
              },
              "send": {
                "type": "number",
                "exclusiveMinimum": 0
              }
            }
          }
        },
        "allOf": [
          {
            "oneOf": [
              {
                "required": [
                  "uri"
                ]
              },
              {
                "required": [
                  "uris"
                ]
              }
            ]
          },
          {
            "oneOf": [
              {
                "not": {
                  "anyOf": [
                    {
                      "required": [
                        "host"
                      ]
                    },
                    {
                      "required": [
                        "hosts"
                      ]
                    }
                  ]
                }
              },
              {
                "required": [
                  "host"
                ]
              },
              {
                "required": [
                  "hosts"
                ]
              }
            ]
          },
          {
            "oneOf": [
              {
                "not": {
                  "anyOf": [
                    {
                      "required": [
                        "remote_addr"
                      ]
                    },
                    {
                      "required": [
                        "remote_addrs"
                      ]
                    }
                  ]
                }
              },
              {
                "required": [
                  "remote_addr"
                ]
              },
              {
                "required": [
                  "remote_addrs"
                ]
              }
            ]
          }
        ],
        "type": "object",
        "anyOf": [
          {
            "required": [
              "plugins",
              "uri"
            ]
          },
          {
            "required": [
              "upstream",
              "uri"
            ]
          },
          {
            "required": [
              "upstream_id",
              "uri"
            ]
          },
          {
            "required": [
              "service_id",
              "uri"
            ]
          },
          {
            "required": [
              "plugins",
              "uris"
            ]
          },
          {
            "required": [
              "upstream",
              "uris"
            ]
          },
          {
            "required": [
              "upstream_id",
              "uris"
            ]
          },
          {
            "required": [
              "service_id",
              "uris"
            ]
          },
          {
            "required": [
              "script",
              "uri"
            ]
          },
          {
            "required": [
              "script",
              "uris"
            ]
          }
        ]
      },
      "global_rule": {
        "required": [
          "plugins"
        ],
        "type": "object",
        "properties": {
          "update_time": {
            "type": "integer"
          },
          "plugins": {
            "type": "object"
          },
          "create_time": {
            "type": "integer"
          },
          "id": {
            "anyOf": [
              {
                "maxLength": 64,
                "pattern": "^[a-zA-Z0-9-_.]+$",
                "type": "string",
                "minLength": 1
              },
              {
                "type": "integer",
                "minimum": 1
              }
            ]
          }
        }
      },
      "stream_route": {
        "type": "object",
        "properties": {
          "create_time": {
            "type": "integer"
          },
          "upstream_id": {
            "anyOf": [
              {
                "maxLength": 64,
                "pattern": "^[a-zA-Z0-9-_.]+$",
                "type": "string",
                "minLength": 1
              },
              {
                "type": "integer",
                "minimum": 1
              }
            ]
          },
          "server_port": {
            "description": "server port",
            "type": "integer"
          },
          "upstream": {
            "oneOf": [
              {
                "required": [
                  "type",
                  "nodes"
                ]
              },
              {
                "required": [
                  "type",
                  "service_name",
                  "discovery_type"
                ]
              }
            ],
            "type": "object",
            "properties": {
              "labels": {
                "type": "object",
                "patternProperties": {
                  ".*": {
                    "maxLength": 64,
                    "description": "value of label",
                    "type": "string",
                    "pattern": "^\\S+$",
                    "minLength": 1
                  }
                },
                "description": "key/value pairs to specify attributes",
                "maxProperties": 16
              },
              "discovery_type": {
                "description": "discovery type",
                "type": "string"
              },
              "discovery_args": {
                "type": "object",
                "properties": {
                  "group_name": {
                    "description": "group name",
                    "type": "string"
                  },
                  "namespace_id": {
                    "description": "namespace id",
                    "type": "string"
                  }
                }
              },
              "scheme": {
                "enum": [
                  "grpc",
                  "grpcs",
                  "http",
                  "https",
                  "tcp",
                  "tls",
                  "udp"
                ],
                "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp.",
                "default": "http"
              },
              "desc": {
                "type": "string",
                "maxLength": 256
              },
              "checks": {
                "anyOf": [
                  {
                    "required": [
                      "active"
                    ]
                  },
                  {
                    "required": [
                      "active",
                      "passive"
                    ]
                  }
                ],
                "type": "object",
                "properties": {
                  "passive": {
                    "default": {
                      "healthy": {
                        "http_statuses": [
                          200,
                          201,
                          202,
                          203,
                          204,
                          205,
                          206,
                          207,
                          208,
                          226,
                          300,
                          301,
                          302,
                          303,
                          304,
                          305,
                          306,
                          307,
                          308
                        ],
                        "successes": 0
                      },
                      "type": "http",
                      "unhealthy": {
                        "http_statuses": [
                          429,
                          500,
                          503
                        ],
                        "timeouts": 0,
                        "http_failures": 0,
                        "tcp_failures": 0
                      }
                    },
                    "type": "object",
                    "properties": {
                      "healthy": {
                        "type": "object",
                        "properties": {
                          "http_statuses": {
                            "items": {
                              "maximum": 599,
                              "type": "integer",
                              "minimum": 200
                            },
                            "uniqueItems": true,
                            "default": [
                              200,
                              201,
                              202,
                              203,
                              204,
                              205,
                              206,
                              207,
                              208,
                              226,
                              300,
                              301,
                              302,
                              303,
                              304,
                              305,
                              306,
                              307,
                              308
                            ],
                            "type": "array",
                            "minItems": 1
                          },
                          "successes": {
                            "maximum": 254,
                            "default": 5,
                            "type": "integer",
                            "minimum": 0
                          }
                        }
                      },
                      "type": {
                        "enum": [
                          "http",
                          "https",
                          "tcp"
                        ],
                        "type": "string",
                        "default": "http"
                      },
                      "unhealthy": {
                        "type": "object",
                        "properties": {
                          "http_statuses": {
                            "items": {
                              "maximum": 599,
                              "type": "integer",
                              "minimum": 200
                            },
                            "uniqueItems": true,
                            "default": [
                              429,
                              500,
                              503
                            ],
                            "type": "array",
                            "minItems": 1
                          },
                          "timeouts": {
                            "maximum": 254,
                            "default": 7,
                            "type": "integer",
                            "minimum": 0
                          },
                          "http_failures": {
                            "maximum": 254,
                            "default": 5,
                            "type": "integer",
                            "minimum": 0
                          },
                          "tcp_failures": {
                            "maximum": 254,
                            "default": 2,
                            "type": "integer",
                            "minimum": 0
                          }
                        }
                      }
                    }
                  },
                  "active": {
                    "type": "object",
                    "properties": {
                      "https_verify_certificate": {
                        "type": "boolean",
                        "default": true
                      },
                      "host": {
                        "type": "string",
                        "pattern": "^\\*?[0-9a-zA-Z-._]+$"
                      },
                      "req_headers": {
                        "items": {
                          "type": "string",
                          "uniqueItems": true
                        },
                        "type": "array",
                        "minItems": 1
                      },
                      "type": {
                        "enum": [
                          "http",
                          "https",
                          "tcp"
                        ],
                        "type": "string",
                        "default": "http"
                      },
                      "unhealthy": {
                        "type": "object",
                        "properties": {
                          "interval": {
                            "default": 1,
                            "type": "integer",
                            "minimum": 1
                          },
                          "http_failures": {
                            "maximum": 254,
                            "default": 5,
                            "type": "integer",
                            "minimum": 1
                          },
                          "tcp_failures": {
                            "maximum": 254,
                            "default": 2,
                            "type": "integer",
                            "minimum": 1
                          },
                          "timeouts": {
                            "maximum": 254,
                            "default": 3,
                            "type": "integer",
                            "minimum": 1
                          },
                          "http_statuses": {
                            "items": {
                              "maximum": 599,
                              "type": "integer",
                              "minimum": 200
                            },
                            "uniqueItems": true,
                            "default": [
                              429,
                              404,
                              500,
                              501,
                              502,
                              503,
                              504,
                              505
                            ],
                            "type": "array",
                            "minItems": 1
                          }
                        }
                      },
                      "timeout": {
                        "type": "number",
                        "default": 1
                      },
                      "concurrency": {
                        "type": "integer",
                        "default": 10
                      },
                      "healthy": {
                        "type": "object",
                        "properties": {
                          "interval": {
                            "default": 1,
                            "type": "integer",
                            "minimum": 1
                          },
                          "successes": {
                            "maximum": 254,
                            "default": 2,
                            "type": "integer",
                            "minimum": 1
                          },
                          "http_statuses": {
                            "items": {
                              "maximum": 599,
                              "type": "integer",
                              "minimum": 200
                            },
                            "uniqueItems": true,
                            "default": [
                              200,
                              302
                            ],
                            "type": "array",
                            "minItems": 1
                          }
                        }
                      },
                      "port": {
                        "maximum": 65535,
                        "type": "integer",
                        "minimum": 1
                      },
                      "http_path": {
                        "type": "string",
                        "default": "/"
                      }
                    }
                  }
                }
              },
              "keepalive_pool": {
                "type": "object",
                "properties": {
                  "size": {
                    "default": 320,
                    "type": "integer",
                    "minimum": 1
                  },
                  "idle_timeout": {
                    "default": 60,
                    "type": "number",
                    "minimum": 0
                  },
                  "requests": {
                    "default": 1000,
                    "type": "integer",
                    "minimum": 1
                  }
                }
              },
              "pass_host": {
                "default": "pass",
                "enum": [
                  "pass",
                  "node",
                  "rewrite"
                ],
                "description": "mod of host passing",
                "type": "string"
              },
              "nodes": {
                "anyOf": [
                  {
                    "type": "object",
                    "patternProperties": {
                      ".*": {
                        "type": "integer",
                        "description": "weight of node",
                        "minimum": 0
                      }
                    }
                  },
                  {
                    "type": "array",
                    "items": {
                      "required": [
                        "host",
                        "port",
                        "weight"
                      ],
                      "type": "object",
                      "properties": {
                        "weight": {
                          "type": "integer",
                          "description": "weight of node",
                          "minimum": 0
                        },
                        "host": {
                          "type": "string",
                          "pattern": "^\\*?[0-9a-zA-Z-._]+$"
                        },
                        "metadata": {
                          "description": "metadata of node",
                          "type": "object"
                        },
                        "priority": {
                          "default": 0,
                          "description": "priority of node",
                          "type": "integer"
                        },
                        "port": {
                          "type": "integer",
                          "description": "port of node",
                          "minimum": 1
                        }
                      }
                    }
                  }
                ]
              },
              "create_time": {
                "type": "integer"
              },
              "retries": {
                "type": "integer",
                "minimum": 0
              },
              "retry_timeout": {
                "type": "number",
                "minimum": 0
              },
              "tls": {
                "required": [
                  "client_cert",
                  "client_key"
                ],
                "type": "object",
                "properties": {
                  "client_cert": {
                    "maxLength": 65536,
                    "type": "string",
                    "minLength": 128
                  },
                  "client_key": {
                    "maxLength": 65536,
                    "type": "string",
                    "minLength": 128
                  }
                }
              },
              "type": {
                "description": "algorithms of load balancing",
                "type": "string"
              },
              "update_time": {
                "type": "integer"
              },
              "hash_on": {
                "default": "vars",
                "type": "string",
                "enum": [
                  "vars",
                  "header",
                  "cookie",
                  "consumer",
                  "vars_combinations"
                ]
              },
              "upstream_host": {
                "type": "string",
                "pattern": "^\\*?[0-9a-zA-Z-._]+$"
              },
              "service_name": {
                "maxLength": 256,
                "type": "string",
                "minLength": 1
              },
              "name": {
                "maxLength": 100,
                "type": "string",
                "minLength": 1
              },
              "id": {
                "anyOf": [
                  {
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9-_.]+$",
                    "type": "string",
                    "minLength": 1
                  },
                  {
                    "type": "integer",
                    "minimum": 1
                  }
                ]
              },
              "key": {
                "description": "the key of chash for dynamic load balancing",
                "type": "string"
              },
              "timeout": {
                "required": [
                  "connect",
                  "send",
                  "read"
                ],
                "type": "object",
                "properties": {
                  "connect": {
                    "type": "number",
                    "exclusiveMinimum": 0
                  },
                  "read": {
                    "type": "number",
                    "exclusiveMinimum": 0
                  },
                  "send": {
                    "type": "number",
                    "exclusiveMinimum": 0
                  }
                }
              }
            }
          },
          "update_time": {
            "type": "integer"
          },
          "plugins": {
            "type": "object"
          },
          "desc": {
            "type": "string",
            "maxLength": 256
          },
          "remote_addr": {
            "anyOf": [
              {
                "title": "IPv4",
                "type": "string",
                "format": "ipv4"
              },
              {
                "title": "IPv4/CIDR",
                "type": "string",
                "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$"
              },
              {
                "title": "IPv6",
                "type": "string",
                "format": "ipv6"
              },
              {
                "title": "IPv6/CIDR",
                "type": "string",
                "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$"
              }
            ],
            "description": "client IP",
            "type": "string"
          },
          "id": {
            "anyOf": [
              {
                "maxLength": 64,
                "pattern": "^[a-zA-Z0-9-_.]+$",
                "type": "string",
                "minLength": 1
              },
              {
                "type": "integer",
                "minimum": 1
              }
            ]
          },
          "sni": {
            "pattern": "^\\*?[0-9a-zA-Z-._]+$",
            "description": "server name indication",
            "type": "string"
          },
          "server_addr": {
            "anyOf": [
              {
                "title": "IPv4",
                "type": "string",
                "format": "ipv4"
              },
              {
                "title": "IPv4/CIDR",
                "type": "string",
                "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$"
              },
              {
                "title": "IPv6",
                "type": "string",
                "format": "ipv6"
              },
              {
                "title": "IPv6/CIDR",
                "type": "string",
                "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$"
              }
            ],
            "description": "server IP",
            "type": "string"
          }
        }
      },
      "upstream_hash_vars_schema": {
        "type": "string",
        "pattern": "^((uri|server_name|server_addr|request_uri|remote_port|remote_addr|query_string|host|hostname)|arg_[0-9a-zA-z_-]+)$"
      },
      "plugins": {
        "type": "array",
        "items": {
          "required": [
            "name"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1
            },
            "stream": {
              "type": "boolean"
            }
          }
        }
      },
      "upstream_hash_header_schema": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9-_]+$"
      },
      "consumer": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "update_time": {
            "type": "integer"
          },
          "create_time": {
            "type": "integer"
          },
          "desc": {
            "type": "string",
            "maxLength": 256
          },
          "plugins": {
            "type": "object"
          },
          "labels": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "maxLength": 64,
                "description": "value of label",
                "type": "string",
                "pattern": "^\\S+$",
                "minLength": 1
              }
            },
            "description": "key/value pairs to specify attributes",
            "maxProperties": 16
          },
          "username": {
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9_]+$",
            "type": "string",
            "minLength": 1
          }
        }
      },
      "plugin_config": {
        "required": [
          "id",
          "plugins"
        ],
        "type": "object",
        "properties": {
          "update_time": {
            "type": "integer"
          },
          "labels": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "maxLength": 64,
                "description": "value of label",
                "type": "string",
                "pattern": "^\\S+$",
                "minLength": 1
              }
            },
            "description": "key/value pairs to specify attributes",
            "maxProperties": 16
          },
          "desc": {
            "type": "string",
            "maxLength": 256
          },
          "id": {
            "anyOf": [
              {
                "maxLength": 64,
                "pattern": "^[a-zA-Z0-9-_.]+$",
                "type": "string",
                "minLength": 1
              },
              {
                "type": "integer",
                "minimum": 1
              }
            ]
          },
          "create_time": {
            "type": "integer"
          },
          "plugins": {
            "type": "object"
          }
        }
      },
      "upstream": {
        "oneOf": [
          {
            "required": [
              "type",
              "nodes"
            ]
          },
          {
            "required": [
              "type",
              "service_name",
              "discovery_type"
            ]
          }
        ],
        "type": "object",
        "properties": {
          "labels": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "maxLength": 64,
                "description": "value of label",
                "type": "string",
                "pattern": "^\\S+$",
                "minLength": 1
              }
            },
            "description": "key/value pairs to specify attributes",
            "maxProperties": 16
          },
          "discovery_type": {
            "description": "discovery type",
            "type": "string"
          },
          "discovery_args": {
            "type": "object",
            "properties": {
              "group_name": {
                "description": "group name",
                "type": "string"
              },
              "namespace_id": {
                "description": "namespace id",
                "type": "string"
              }
            }
          },
          "scheme": {
            "enum": [
              "grpc",
              "grpcs",
              "http",
              "https",
              "tcp",
              "tls",
              "udp"
            ],
            "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp.",
            "default": "http"
          },
          "desc": {
            "type": "string",
            "maxLength": 256
          },
          "checks": {
            "anyOf": [
              {
                "required": [
                  "active"
                ]
              },
              {
                "required": [
                  "active",
                  "passive"
                ]
              }
            ],
            "type": "object",
            "properties": {
              "passive": {
                "default": {
                  "healthy": {
                    "http_statuses": [
                      200,
                      201,
                      202,
                      203,
                      204,
                      205,
                      206,
                      207,
                      208,
                      226,
                      300,
                      301,
                      302,
                      303,
                      304,
                      305,
                      306,
                      307,
                      308
                    ],
                    "successes": 0
                  },
                  "type": "http",
                  "unhealthy": {
                    "http_statuses": [
                      429,
                      500,
                      503
                    ],
                    "timeouts": 0,
                    "http_failures": 0,
                    "tcp_failures": 0
                  }
                },
                "type": "object",
                "properties": {
                  "healthy": {
                    "type": "object",
                    "properties": {
                      "http_statuses": {
                        "items": {
                          "maximum": 599,
                          "type": "integer",
                          "minimum": 200
                        },
                        "uniqueItems": true,
                        "default": [
                          200,
                          201,
                          202,
                          203,
                          204,
                          205,
                          206,
                          207,
                          208,
                          226,
                          300,
                          301,
                          302,
                          303,
                          304,
                          305,
                          306,
                          307,
                          308
                        ],
                        "type": "array",
                        "minItems": 1
                      },
                      "successes": {
                        "maximum": 254,
                        "default": 5,
                        "type": "integer",
                        "minimum": 0
                      }
                    }
                  },
                  "type": {
                    "enum": [
                      "http",
                      "https",
                      "tcp"
                    ],
                    "type": "string",
                    "default": "http"
                  },
                  "unhealthy": {
                    "type": "object",
                    "properties": {
                      "http_statuses": {
                        "items": {
                          "maximum": 599,
                          "type": "integer",
                          "minimum": 200
                        },
                        "uniqueItems": true,
                        "default": [
                          429,
                          500,
                          503
                        ],
                        "type": "array",
                        "minItems": 1
                      },
                      "timeouts": {
                        "maximum": 254,
                        "default": 7,
                        "type": "integer",
                        "minimum": 0
                      },
                      "http_failures": {
                        "maximum": 254,
                        "default": 5,
                        "type": "integer",
                        "minimum": 0
                      },
                      "tcp_failures": {
                        "maximum": 254,
                        "default": 2,
                        "type": "integer",
                        "minimum": 0
                      }
                    }
                  }
                }
              },
              "active": {
                "type": "object",
                "properties": {
                  "https_verify_certificate": {
                    "type": "boolean",
                    "default": true
                  },
                  "host": {
                    "type": "string",
                    "pattern": "^\\*?[0-9a-zA-Z-._]+$"
                  },
                  "req_headers": {
                    "items": {
                      "type": "string",
                      "uniqueItems": true
                    },
                    "type": "array",
                    "minItems": 1
                  },
                  "type": {
                    "enum": [
                      "http",
                      "https",
                      "tcp"
                    ],
                    "type": "string",
                    "default": "http"
                  },
                  "unhealthy": {
                    "type": "object",
                    "properties": {
                      "interval": {
                        "default": 1,
                        "type": "integer",
                        "minimum": 1
                      },
                      "http_failures": {
                        "maximum": 254,
                        "default": 5,
                        "type": "integer",
                        "minimum": 1
                      },
                      "tcp_failures": {
                        "maximum": 254,
                        "default": 2,
                        "type": "integer",
                        "minimum": 1
                      },
                      "timeouts": {
                        "maximum": 254,
                        "default": 3,
                        "type": "integer",
                        "minimum": 1
                      },
                      "http_statuses": {
                        "items": {
                          "maximum": 599,
                          "type": "integer",
                          "minimum": 200
                        },
                        "uniqueItems": true,
                        "default": [
                          429,
                          404,
                          500,
                          501,
                          502,
                          503,
                          504,
                          505
                        ],
                        "type": "array",
                        "minItems": 1
                      }
                    }
                  },
                  "timeout": {
                    "type": "number",
                    "default": 1
                  },
                  "concurrency": {
                    "type": "integer",
                    "default": 10
                  },
                  "healthy": {
                    "type": "object",
                    "properties": {
                      "interval": {
                        "default": 1,
                        "type": "integer",
                        "minimum": 1
                      },
                      "successes": {
                        "maximum": 254,
                        "default": 2,
                        "type": "integer",
                        "minimum": 1
                      },
                      "http_statuses": {
                        "items": {
                          "maximum": 599,
                          "type": "integer",
                          "minimum": 200
                        },
                        "uniqueItems": true,
                        "default": [
                          200,
                          302
                        ],
                        "type": "array",
                        "minItems": 1
                      }
                    }
                  },
                  "port": {
                    "maximum": 65535,
                    "type": "integer",
                    "minimum": 1
                  },
                  "http_path": {
                    "type": "string",
                    "default": "/"
                  }
                }
              }
            }
          },
          "keepalive_pool": {
            "type": "object",
            "properties": {
              "size": {
                "default": 320,
                "type": "integer",
                "minimum": 1
              },
              "idle_timeout": {
                "default": 60,
                "type": "number",
                "minimum": 0
              },
              "requests": {
                "default": 1000,
                "type": "integer",
                "minimum": 1
              }
            }
          },
          "pass_host": {
            "default": "pass",
            "enum": [
              "pass",
              "node",
              "rewrite"
            ],
            "description": "mod of host passing",
            "type": "string"
          },
          "nodes": {
            "anyOf": [
              {
                "type": "object",
                "patternProperties": {
                  ".*": {
                    "type": "integer",
                    "description": "weight of node",
                    "minimum": 0
                  }
                }
              },
              {
                "type": "array",
                "items": {
                  "required": [
                    "host",
                    "port",
                    "weight"
                  ],
                  "type": "object",
                  "properties": {
                    "weight": {
                      "type": "integer",
                      "description": "weight of node",
                      "minimum": 0
                    },
                    "host": {
                      "type": "string",
                      "pattern": "^\\*?[0-9a-zA-Z-._]+$"
                    },
                    "metadata": {
                      "description": "metadata of node",
                      "type": "object"
                    },
                    "priority": {
                      "default": 0,
                      "description": "priority of node",
                      "type": "integer"
                    },
                    "port": {
                      "type": "integer",
                      "description": "port of node",
                      "minimum": 1
                    }
                  }
                }
              }
            ]
          },
          "create_time": {
            "type": "integer"
          },
          "retries": {
            "type": "integer",
            "minimum": 0
          },
          "retry_timeout": {
            "type": "number",
            "minimum": 0
          },
          "tls": {
            "required": [
              "client_cert",
              "client_key"
            ],
            "type": "object",
            "properties": {
              "client_cert": {
                "maxLength": 65536,
                "type": "string",
                "minLength": 128
              },
              "client_key": {
                "maxLength": 65536,
                "type": "string",
                "minLength": 128
              }
            }
          },
          "type": {
            "description": "algorithms of load balancing",
            "type": "string"
          },
          "update_time": {
            "type": "integer"
          },
          "hash_on": {
            "default": "vars",
            "type": "string",
            "enum": [
              "vars",
              "header",
              "cookie",
              "consumer",
              "vars_combinations"
            ]
          },
          "upstream_host": {
            "type": "string",
            "pattern": "^\\*?[0-9a-zA-Z-._]+$"
          },
          "service_name": {
            "maxLength": 256,
            "type": "string",
            "minLength": 1
          },
          "name": {
            "maxLength": 100,
            "type": "string",
            "minLength": 1
          },
          "id": {
            "anyOf": [
              {
                "maxLength": 64,
                "pattern": "^[a-zA-Z0-9-_.]+$",
                "type": "string",
                "minLength": 1
              },
              {
                "type": "integer",
                "minimum": 1
              }
            ]
          },
          "key": {
            "description": "the key of chash for dynamic load balancing",
            "type": "string"
          },
          "timeout": {
            "required": [
              "connect",
              "send",
              "read"
            ],
            "type": "object",
            "properties": {
              "connect": {
                "type": "number",
                "exclusiveMinimum": 0
              },
              "read": {
                "type": "number",
                "exclusiveMinimum": 0
              },
              "send": {
                "type": "number",
                "exclusiveMinimum": 0
              }
            }
          }
        }
      },
      "service": {
        "type": "object",
        "properties": {
          "script": {
            "maxLength": 102400,
            "type": "string",
            "minLength": 10
          },
          "upstream_id": {
            "anyOf": [
              {
                "maxLength": 64,
                "pattern": "^[a-zA-Z0-9-_.]+$",
                "type": "string",
                "minLength": 1
              },
              {
                "type": "integer",
                "minimum": 1
              }
            ]
          },
          "upstream": {
            "oneOf": [
              {
                "required": [
                  "type",
                  "nodes"
                ]
              },
              {
                "required": [
                  "type",
                  "service_name",
                  "discovery_type"
                ]
              }
            ],
            "type": "object",
            "properties": {
              "labels": {
                "type": "object",
                "patternProperties": {
                  ".*": {
                    "maxLength": 64,
                    "description": "value of label",
                    "type": "string",
                    "pattern": "^\\S+$",
                    "minLength": 1
                  }
                },
                "description": "key/value pairs to specify attributes",
                "maxProperties": 16
              },
              "discovery_type": {
                "description": "discovery type",
                "type": "string"
              },
              "discovery_args": {
                "type": "object",
                "properties": {
                  "group_name": {
                    "description": "group name",
                    "type": "string"
                  },
                  "namespace_id": {
                    "description": "namespace id",
                    "type": "string"
                  }
                }
              },
              "scheme": {
                "enum": [
                  "grpc",
                  "grpcs",
                  "http",
                  "https",
                  "tcp",
                  "tls",
                  "udp"
                ],
                "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp.",
                "default": "http"
              },
              "desc": {
                "type": "string",
                "maxLength": 256
              },
              "checks": {
                "anyOf": [
                  {
                    "required": [
                      "active"
                    ]
                  },
                  {
                    "required": [
                      "active",
                      "passive"
                    ]
                  }
                ],
                "type": "object",
                "properties": {
                  "passive": {
                    "default": {
                      "healthy": {
                        "http_statuses": [
                          200,
                          201,
                          202,
                          203,
                          204,
                          205,
                          206,
                          207,
                          208,
                          226,
                          300,
                          301,
                          302,
                          303,
                          304,
                          305,
                          306,
                          307,
                          308
                        ],
                        "successes": 0
                      },
                      "type": "http",
                      "unhealthy": {
                        "http_statuses": [
                          429,
                          500,
                          503
                        ],
                        "timeouts": 0,
                        "http_failures": 0,
                        "tcp_failures": 0
                      }
                    },
                    "type": "object",
                    "properties": {
                      "healthy": {
                        "type": "object",
                        "properties": {
                          "http_statuses": {
                            "items": {
                              "maximum": 599,
                              "type": "integer",
                              "minimum": 200
                            },
                            "uniqueItems": true,
                            "default": [
                              200,
                              201,
                              202,
                              203,
                              204,
                              205,
                              206,
                              207,
                              208,
                              226,
                              300,
                              301,
                              302,
                              303,
                              304,
                              305,
                              306,
                              307,
                              308
                            ],
                            "type": "array",
                            "minItems": 1
                          },
                          "successes": {
                            "maximum": 254,
                            "default": 5,
                            "type": "integer",
                            "minimum": 0
                          }
                        }
                      },
                      "type": {
                        "enum": [
                          "http",
                          "https",
                          "tcp"
                        ],
                        "type": "string",
                        "default": "http"
                      },
                      "unhealthy": {
                        "type": "object",
                        "properties": {
                          "http_statuses": {
                            "items": {
                              "maximum": 599,
                              "type": "integer",
                              "minimum": 200
                            },
                            "uniqueItems": true,
                            "default": [
                              429,
                              500,
                              503
                            ],
                            "type": "array",
                            "minItems": 1
                          },
                          "timeouts": {
                            "maximum": 254,
                            "default": 7,
                            "type": "integer",
                            "minimum": 0
                          },
                          "http_failures": {
                            "maximum": 254,
                            "default": 5,
                            "type": "integer",
                            "minimum": 0
                          },
                          "tcp_failures": {
                            "maximum": 254,
                            "default": 2,
                            "type": "integer",
                            "minimum": 0
                          }
                        }
                      }
                    }
                  },
                  "active": {
                    "type": "object",
                    "properties": {
                      "https_verify_certificate": {
                        "type": "boolean",
                        "default": true
                      },
                      "host": {
                        "type": "string",
                        "pattern": "^\\*?[0-9a-zA-Z-._]+$"
                      },
                      "req_headers": {
                        "items": {
                          "type": "string",
                          "uniqueItems": true
                        },
                        "type": "array",
                        "minItems": 1
                      },
                      "type": {
                        "enum": [
                          "http",
                          "https",
                          "tcp"
                        ],
                        "type": "string",
                        "default": "http"
                      },
                      "unhealthy": {
                        "type": "object",
                        "properties": {
                          "interval": {
                            "default": 1,
                            "type": "integer",
                            "minimum": 1
                          },
                          "http_failures": {
                            "maximum": 254,
                            "default": 5,
                            "type": "integer",
                            "minimum": 1
                          },
                          "tcp_failures": {
                            "maximum": 254,
                            "default": 2,
                            "type": "integer",
                            "minimum": 1
                          },
                          "timeouts": {
                            "maximum": 254,
                            "default": 3,
                            "type": "integer",
                            "minimum": 1
                          },
                          "http_statuses": {
                            "items": {
                              "maximum": 599,
                              "type": "integer",
                              "minimum": 200
                            },
                            "uniqueItems": true,
                            "default": [
                              429,
                              404,
                              500,
                              501,
                              502,
                              503,
                              504,
                              505
                            ],
                            "type": "array",
                            "minItems": 1
                          }
                        }
                      },
                      "timeout": {
                        "type": "number",
                        "default": 1
                      },
                      "concurrency": {
                        "type": "integer",
                        "default": 10
                      },
                      "healthy": {
                        "type": "object",
                        "properties": {
                          "interval": {
                            "default": 1,
                            "type": "integer",
                            "minimum": 1
                          },
                          "successes": {
                            "maximum": 254,
                            "default": 2,
                            "type": "integer",
                            "minimum": 1
                          },
                          "http_statuses": {
                            "items": {
                              "maximum": 599,
                              "type": "integer",
                              "minimum": 200
                            },
                            "uniqueItems": true,
                            "default": [
                              200,
                              302
                            ],
                            "type": "array",
                            "minItems": 1
                          }
                        }
                      },
                      "port": {
                        "maximum": 65535,
                        "type": "integer",
                        "minimum": 1
                      },
                      "http_path": {
                        "type": "string",
                        "default": "/"
                      }
                    }
                  }
                }
              },
              "keepalive_pool": {
                "type": "object",
                "properties": {
                  "size": {
                    "default": 320,
                    "type": "integer",
                    "minimum": 1
                  },
                  "idle_timeout": {
                    "default": 60,
                    "type": "number",
                    "minimum": 0
                  },
                  "requests": {
                    "default": 1000,
                    "type": "integer",
                    "minimum": 1
                  }
                }
              },
              "pass_host": {
                "default": "pass",
                "enum": [
                  "pass",
                  "node",
                  "rewrite"
                ],
                "description": "mod of host passing",
                "type": "string"
              },
              "nodes": {
                "anyOf": [
                  {
                    "type": "object",
                    "patternProperties": {
                      ".*": {
                        "type": "integer",
                        "description": "weight of node",
                        "minimum": 0
                      }
                    }
                  },
                  {
                    "type": "array",
                    "items": {
                      "required": [
                        "host",
                        "port",
                        "weight"
                      ],
                      "type": "object",
                      "properties": {
                        "weight": {
                          "type": "integer",
                          "description": "weight of node",
                          "minimum": 0
                        },
                        "host": {
                          "type": "string",
                          "pattern": "^\\*?[0-9a-zA-Z-._]+$"
                        },
                        "metadata": {
                          "description": "metadata of node",
                          "type": "object"
                        },
                        "priority": {
                          "default": 0,
                          "description": "priority of node",
                          "type": "integer"
                        },
                        "port": {
                          "type": "integer",
                          "description": "port of node",
                          "minimum": 1
                        }
                      }
                    }
                  }
                ]
              },
              "create_time": {
                "type": "integer"
              },
              "retries": {
                "type": "integer",
                "minimum": 0
              },
              "retry_timeout": {
                "type": "number",
                "minimum": 0
              },
              "tls": {
                "required": [
                  "client_cert",
                  "client_key"
                ],
                "type": "object",
                "properties": {
                  "client_cert": {
                    "maxLength": 65536,
                    "type": "string",
                    "minLength": 128
                  },
                  "client_key": {
                    "maxLength": 65536,
                    "type": "string",
                    "minLength": 128
                  }
                }
              },
              "type": {
                "description": "algorithms of load balancing",
                "type": "string"
              },
              "update_time": {
                "type": "integer"
              },
              "hash_on": {
                "default": "vars",
                "type": "string",
                "enum": [
                  "vars",
                  "header",
                  "cookie",
                  "consumer",
                  "vars_combinations"
                ]
              },
              "upstream_host": {
                "type": "string",
                "pattern": "^\\*?[0-9a-zA-Z-._]+$"
              },
              "service_name": {
                "maxLength": 256,
                "type": "string",
                "minLength": 1
              },
              "name": {
                "maxLength": 100,
                "type": "string",
                "minLength": 1
              },
              "id": {
                "anyOf": [
                  {
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9-_.]+$",
                    "type": "string",
                    "minLength": 1
                  },
                  {
                    "type": "integer",
                    "minimum": 1
                  }
                ]
              },
              "key": {
                "description": "the key of chash for dynamic load balancing",
                "type": "string"
              },
              "timeout": {
                "required": [
                  "connect",
                  "send",
                  "read"
                ],
                "type": "object",
                "properties": {
                  "connect": {
                    "type": "number",
                    "exclusiveMinimum": 0
                  },
                  "read": {
                    "type": "number",
                    "exclusiveMinimum": 0
                  },
                  "send": {
                    "type": "number",
                    "exclusiveMinimum": 0
                  }
                }
              }
            }
          },
          "enable_websocket": {
            "description": "enable websocket for request",
            "type": "boolean"
          },
          "name": {
            "maxLength": 100,
            "type": "string",
            "minLength": 1
          },
          "plugins": {
            "type": "object"
          },
          "desc": {
            "type": "string",
            "maxLength": 256
          },
          "hosts": {
            "items": {
              "type": "string",
              "pattern": "^\\*?[0-9a-zA-Z-._]+$"
            },
            "uniqueItems": true,
            "type": "array",
            "minItems": 1
          },
          "update_time": {
            "type": "integer"
          },
          "id": {
            "anyOf": [
              {
                "maxLength": 64,
                "pattern": "^[a-zA-Z0-9-_.]+$",
                "type": "string",
                "minLength": 1
              },
              {
                "type": "integer",
                "minimum": 1
              }
            ]
          },
          "create_time": {
            "type": "integer"
          },
          "labels": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "maxLength": 64,
                "description": "value of label",
                "type": "string",
                "pattern": "^\\S+$",
                "minLength": 1
              }
            },
            "description": "key/value pairs to specify attributes",
            "maxProperties": 16
          }
        }
      },
      "ssl": {
        "oneOf": [
          {
            "required": [
              "sni",
              "key",
              "cert"
            ]
          },
          {
            "required": [
              "snis",
              "key",
              "cert"
            ]
          }
        ],
        "type": "object",
        "properties": {
          "snis": {
            "items": {
              "type": "string",
              "pattern": "^\\*?[0-9a-zA-Z-._]+$"
            },
            "type": "array",
            "minItems": 1
          },
          "certs": {
            "type": "array",
            "items": {
              "maxLength": 65536,
              "type": "string",
              "minLength": 128
            }
          },
          "status": {
            "default": 1,
            "enum": [
              1,
              0
            ],
            "description": "ssl status, 1 to enable, 0 to disable",
            "type": "integer"
          },
          "validity_end": {
            "type": "integer"
          },
          "validity_start": {
            "type": "integer"
          },
          "labels": {
            "type": "object",
            "patternProperties": {
              ".*": {
                "maxLength": 64,
                "description": "value of label",
                "type": "string",
                "pattern": "^\\S+$",
                "minLength": 1
              }
            },
            "description": "key/value pairs to specify attributes",
            "maxProperties": 16
          },
          "create_time": {
            "type": "integer"
          },
          "update_time": {
            "type": "integer"
          },
          "sni": {
            "type": "string",
            "pattern": "^\\*?[0-9a-zA-Z-._]+$"
          },
          "cert": {
            "maxLength": 65536,
            "type": "string",
            "minLength": 128
          },
          "key": {
            "maxLength": 65536,
            "type": "string",
            "minLength": 128
          },
          "exptime": {
            "type": "integer",
            "minimum": 1588262400
          },
          "id": {
            "anyOf": [
              {
                "maxLength": 64,
                "pattern": "^[a-zA-Z0-9-_.]+$",
                "type": "string",
                "minLength": 1
              },
              {
                "type": "integer",
                "minimum": 1
              }
            ]
          },
          "client": {
            "required": [
              "ca"
            ],
            "type": "object",
            "properties": {
              "ca": {
                "maxLength": 65536,
                "type": "string",
                "minLength": 128
              },
              "depth": {
                "default": 1,
                "type": "integer",
                "minimum": 0
              }
            }
          },
          "keys": {
            "type": "array",
            "items": {
              "maxLength": 65536,
              "type": "string",
              "minLength": 128
            }
          }
        }
      }
    },
    "plugins": {
      "openid-connect": {
        "priority": 2599,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "client_id",
            "client_secret",
            "discovery"
          ],
          "type": "object",
          "properties": {
            "discovery": {
              "type": "string"
            },
            "access_token_in_authorization_header": {
              "default": false,
              "description": "Whether the access token should be added in the Authorization header as opposed to the X-Access-Token header.",
              "type": "boolean"
            },
            "set_id_token_header": {
              "default": true,
              "description": "Whether the ID token should be added in the X-ID-Token header to the request for downstream.",
              "type": "boolean"
            },
            "set_userinfo_header": {
              "default": true,
              "description": "Whether the user info token should be added in the X-Userinfo header to the request for downstream.",
              "type": "boolean"
            },
            "scope": {
              "type": "string",
              "default": "openid"
            },
            "disable": {
              "type": "boolean"
            },
            "timeout": {
              "description": "timeout in seconds",
              "default": 3,
              "type": "integer",
              "minimum": 1
            },
            "ssl_verify": {
              "type": "boolean",
              "default": false
            },
            "introspection_endpoint_auth_method": {
              "type": "string",
              "default": "client_secret_basic"
            },
            "bearer_only": {
              "type": "boolean",
              "default": false
            },
            "realm": {
              "type": "string",
              "default": "apisix"
            },
            "client_id": {
              "type": "string"
            },
            "client_secret": {
              "type": "string"
            },
            "logout_path": {
              "type": "string",
              "default": "/logout"
            },
            "introspection_endpoint": {
              "type": "string"
            },
            "redirect_uri": {
              "type": "string",
              "description": "use ngx.var.request_uri if not configured"
            },
            "set_access_token_header": {
              "default": true,
              "description": "Whether the access token should be added as a header to the request for downstream",
              "type": "boolean"
            },
            "public_key": {
              "type": "string"
            },
            "token_signing_alg_values_expected": {
              "type": "string"
            }
          }
        },
        "version": 0.1
      },
      "limit-conn": {
        "priority": 1003,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "conn",
            "burst",
            "default_conn_delay",
            "key"
          ],
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "conn": {
              "type": "integer",
              "exclusiveMinimum": 0
            },
            "burst": {
              "type": "integer",
              "minimum": 0
            },
            "default_conn_delay": {
              "type": "number",
              "exclusiveMinimum": 0
            },
            "only_use_default_delay": {
              "type": "boolean",
              "default": false
            },
            "key_type": {
              "enum": [
                "var",
                "var_combination"
              ],
              "type": "string",
              "default": "var"
            },
            "rejected_code": {
              "maximum": 599,
              "default": 503,
              "type": "integer",
              "minimum": 200
            },
            "rejected_msg": {
              "type": "string",
              "minLength": 1
            },
            "allow_degradation": {
              "type": "boolean",
              "default": false
            },
            "key": {
              "type": "string"
            }
          }
        },
        "version": 0.1
      },
      "response-rewrite": {
        "priority": 899,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "minProperties": 1,
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "body": {
              "description": "new body for response",
              "type": "string"
            },
            "vars": {
              "type": "array"
            },
            "headers": {
              "type": "object",
              "description": "new headers for response",
              "minProperties": 1
            },
            "body_base64": {
              "default": false,
              "description": "whether new body for response need base64 decode before return",
              "type": "boolean"
            },
            "status_code": {
              "maximum": 598,
              "type": "integer",
              "description": "new status code for response",
              "minimum": 200
            }
          }
        },
        "version": 0.1
      },
      "fault-injection": {
        "priority": 11000,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "minProperties": 1,
          "type": "object",
          "properties": {
            "abort": {
              "required": [
                "http_status"
              ],
              "type": "object",
              "properties": {
                "percentage": {
                  "maximum": 100,
                  "type": "integer",
                  "minimum": 0
                },
                "body": {
                  "type": "string",
                  "minLength": 0
                },
                "vars": {
                  "items": {
                    "type": "array"
                  },
                  "maxItems": 20,
                  "type": "array"
                },
                "http_status": {
                  "type": "integer",
                  "minimum": 200
                }
              }
            },
            "delay": {
              "required": [
                "duration"
              ],
              "type": "object",
              "properties": {
                "percentage": {
                  "maximum": 100,
                  "type": "integer",
                  "minimum": 0
                },
                "duration": {
                  "type": "number",
                  "minimum": 0
                },
                "vars": {
                  "items": {
                    "type": "array"
                  },
                  "maxItems": 20,
                  "type": "array"
                }
              }
            },
            "disable": {
              "type": "boolean"
            }
          }
        },
        "version": 0.1
      },
      "uri-blocker": {
        "priority": 2900,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "block_rules"
          ],
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "rejected_code": {
              "default": 403,
              "type": "integer",
              "minimum": 200
            },
            "rejected_msg": {
              "type": "string",
              "minLength": 1
            },
            "case_insensitive": {
              "type": "boolean",
              "default": false
            },
            "block_rules": {
              "items": {
                "maxLength": 4096,
                "type": "string",
                "minLength": 1
              },
              "type": "array",
              "uniqueItems": true
            }
          }
        },
        "version": 0.1
      },
      "api-breaker": {
        "priority": 1005,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "break_response_code"
          ],
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "healthy": {
              "default": {
                "http_statuses": [
                  200
                ],
                "successes": 3
              },
              "type": "object",
              "properties": {
                "http_statuses": {
                  "items": {
                    "maximum": 499,
                    "type": "integer",
                    "minimum": 200
                  },
                  "uniqueItems": true,
                  "default": [
                    200
                  ],
                  "type": "array",
                  "minItems": 1
                },
                "successes": {
                  "default": 3,
                  "type": "integer",
                  "minimum": 1
                }
              }
            },
            "break_response_code": {
              "maximum": 599,
              "type": "integer",
              "minimum": 200
            },
            "unhealthy": {
              "default": {
                "http_statuses": [
                  500
                ],
                "failures": 3
              },
              "type": "object",
              "properties": {
                "http_statuses": {
                  "items": {
                    "maximum": 599,
                    "type": "integer",
                    "minimum": 500
                  },
                  "uniqueItems": true,
                  "default": [
                    500
                  ],
                  "type": "array",
                  "minItems": 1
                },
                "failures": {
                  "default": 3,
                  "type": "integer",
                  "minimum": 1
                }
              }
            },
            "max_breaker_sec": {
              "default": 300,
              "type": "integer",
              "minimum": 3
            }
          }
        },
        "version": 0.1
      },
      "redirect": {
        "priority": 900,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "oneOf": [
            {
              "required": [
                "uri"
              ]
            },
            {
              "required": [
                "regex_uri"
              ]
            },
            {
              "required": [
                "http_to_https"
              ]
            }
          ],
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "http_to_https": {
              "type": "boolean"
            },
            "encode_uri": {
              "type": "boolean",
              "default": false
            },
            "uri": {
              "pattern": "(\\\\\\$[0-9a-zA-Z_]+)|\\$\\{([0-9a-zA-Z_]+)\\}|\\$([0-9a-zA-Z_]+)|(\\$|[^$\\\\]+)",
              "type": "string",
              "minLength": 2
            },
            "ret_code": {
              "default": 302,
              "type": "integer",
              "minimum": 200
            },
            "regex_uri": {
              "items": {
                "description": "regex uri",
                "type": "string"
              },
              "maxItems": 2,
              "description": "params for generating new uri that substitute from client uri, first param is regular expression, the second one is uri template",
              "type": "array",
              "minItems": 2
            },
            "append_query_string": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "version": 0.1
      },
      "prometheus": {
        "priority": 500,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "type": "object",
          "properties": {
            "prefer_name": {
              "type": "boolean",
              "default": false
            },
            "disable": {
              "type": "boolean"
            }
          }
        },
        "version": 0.2
      },
      "request-validation": {
        "schema": {
          "anyOf": [
            {
              "required": [
                "header_schema"
              ]
            },
            {
              "required": [
                "body_schema"
              ]
            }
          ],
          "$comment": "this is a mark for our injected plugin schema",
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "header_schema": {
              "type": "object"
            },
            "rejected_code": {
              "maximum": 599,
              "default": 400,
              "type": "integer",
              "minimum": 200
            },
            "rejected_msg": {
              "maxLength": 256,
              "type": "string",
              "minLength": 1
            },
            "body_schema": {
              "type": "object"
            }
          }
        },
        "priority": 2800,
        "type": "validation",
        "version": 0.1
      },
      "wolf-rbac": {
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "type": "object",
          "properties": {
            "server": {
              "type": "string",
              "default": "http://127.0.0.1:12180"
            },
            "appid": {
              "type": "string",
              "default": "unset"
            },
            "disable": {
              "type": "boolean"
            },
            "header_prefix": {
              "type": "string",
              "default": "X-"
            }
          }
        },
        "priority": 2555,
        "type": "auth",
        "version": 0.1
      },
      "proxy-rewrite": {
        "priority": 1008,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "minProperties": 1,
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "host": {
              "pattern": "^[0-9a-zA-Z-.]+(:\\d{1,5})?$",
              "description": "new host for upstream",
              "type": "string"
            },
            "uri": {
              "maxLength": 4096,
              "description": "new uri for upstream",
              "pattern": "^\\/.*",
              "type": "string",
              "minLength": 1
            },
            "headers": {
              "type": "object",
              "description": "new headers for request",
              "minProperties": 1
            },
            "regex_uri": {
              "items": {
                "description": "regex uri",
                "type": "string"
              },
              "maxItems": 2,
              "description": "new uri that substitute from client uri for upstream, lower priority than uri property",
              "type": "array",
              "minItems": 2
            },
            "scheme": {
              "enum": [
                "http",
                "https"
              ],
              "description": "new scheme for upstream",
              "type": "string"
            },
            "method": {
              "enum": [
                "PUT",
                "DELETE",
                "MKCOL",
                "COPY",
                "MOVE",
                "OPTIONS",
                "PROPFIND",
                "LOCK",
                "UNLOCK",
                "PATCH",
                "TRACE",
                "GET",
                "HEAD",
                "POST"
              ],
              "description": "proxy route method",
              "type": "string"
            }
          }
        },
        "version": 0.1
      },
      "authz-keycloak": {
        "priority": 2000,
        "schema": {
          "allOf": [
            {
              "anyOf": [
                {
                  "required": [
                    "discovery"
                  ]
                },
                {
                  "required": [
                    "token_endpoint"
                  ]
                }
              ]
            },
            {
              "anyOf": [
                {
                  "required": [
                    "client_id"
                  ]
                },
                {
                  "required": [
                    "audience"
                  ]
                }
              ]
            },
            {
              "anyOf": [
                {
                  "properties": {
                    "lazy_load_paths": {
                      "enum": [
                        false
                      ]
                    }
                  }
                },
                {
                  "anyOf": [
                    {
                      "required": [
                        "discovery"
                      ]
                    },
                    {
                      "required": [
                        "resource_registration_endpoint"
                      ]
                    }
                  ],
                  "properties": {
                    "lazy_load_paths": {
                      "enum": [
                        true
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "$comment": "this is a mark for our injected plugin schema",
          "type": "object",
          "properties": {
            "discovery": {
              "maxLength": 4096,
              "type": "string",
              "minLength": 1
            },
            "keepalive_timeout": {
              "default": 60000,
              "type": "integer",
              "minimum": 1000
            },
            "grant_type": {
              "maxLength": 100,
              "default": "urn:ietf:params:oauth:grant-type:uma-ticket",
              "enum": [
                "urn:ietf:params:oauth:grant-type:uma-ticket"
              ],
              "type": "string",
              "minLength": 1
            },
            "resource_registration_endpoint": {
              "maxLength": 4096,
              "type": "string",
              "minLength": 1
            },
            "audience": {
              "maxLength": 100,
              "description": "Deprecated, use `client_id` instead.",
              "type": "string",
              "minLength": 1
            },
            "keepalive": {
              "type": "boolean",
              "default": true
            },
            "policy_enforcement_mode": {
              "enum": [
                "ENFORCING",
                "PERMISSIVE"
              ],
              "type": "string",
              "default": "ENFORCING"
            },
            "disable": {
              "type": "boolean"
            },
            "lazy_load_paths": {
              "type": "boolean",
              "default": false
            },
            "http_method_as_scope": {
              "type": "boolean",
              "default": false
            },
            "cache_ttl_seconds": {
              "default": 86400,
              "type": "integer",
              "minimum": 1
            },
            "client_id": {
              "maxLength": 100,
              "type": "string",
              "minLength": 1
            },
            "client_secret": {
              "maxLength": 100,
              "type": "string",
              "minLength": 1
            },
            "permissions": {
              "items": {
                "maxLength": 100,
                "type": "string",
                "minLength": 1
              },
              "default": {},
              "type": "array",
              "uniqueItems": true
            },
            "ssl_verify": {
              "type": "boolean",
              "default": true
            },
            "keepalive_pool": {
              "default": 5,
              "type": "integer",
              "minimum": 1
            },
            "token_endpoint": {
              "maxLength": 4096,
              "type": "string",
              "minLength": 1
            },
            "timeout": {
              "default": 3000,
              "type": "integer",
              "minimum": 1000
            }
          }
        },
        "version": 0.1
      },
      "ext-plugin-pre-req": {
        "priority": 12000,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "type": "object",
          "properties": {
            "allow_degradation": {
              "type": "boolean",
              "default": false
            },
            "conf": {
              "items": {
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "maxLength": 128,
                    "type": "string",
                    "minLength": 1
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "type": "array",
              "minItems": 1
            },
            "disable": {
              "type": "boolean"
            }
          }
        },
        "version": 0.1
      },
      "gzip": {
        "priority": 995,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "type": "object",
          "properties": {
            "http_version": {
              "default": 1.1,
              "enum": [
                1.1,
                1
              ]
            },
            "vary": {
              "type": "boolean"
            },
            "disable": {
              "type": "boolean"
            },
            "buffers": {
              "default": {
                "size": 4096,
                "number": 32
              },
              "type": "object",
              "properties": {
                "size": {
                  "default": 4096,
                  "type": "integer",
                  "minimum": 1
                },
                "number": {
                  "default": 32,
                  "type": "integer",
                  "minimum": 1
                }
              }
            },
            "types": {
              "anyOf": [
                {
                  "items": {
                    "type": "string",
                    "minLength": 1
                  },
                  "type": "array",
                  "minItems": 1
                },
                {
                  "enum": [
                    "*"
                  ]
                }
              ],
              "default": [
                "text/html"
              ]
            },
            "min_length": {
              "default": 20,
              "type": "integer",
              "minimum": 1
            },
            "comp_level": {
              "maximum": 9,
              "default": 1,
              "type": "integer",
              "minimum": 1
            }
          }
        },
        "version": 0.1
      },
      "serverless-pre-function": {
        "priority": 10000,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "functions"
          ],
          "type": "object",
          "properties": {
            "functions": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "minItems": 1
            },
            "disable": {
              "type": "boolean"
            },
            "phase": {
              "default": "access",
              "type": "string",
              "enum": [
                "rewrite",
                "access",
                "header_filter",
                "body_filter",
                "log",
                "before_proxy"
              ]
            }
          }
        },
        "version": 0.1
      },
      "real-ip": {
        "priority": 23000,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "source"
          ],
          "type": "object",
          "properties": {
            "trusted_addresses": {
              "items": {
                "anyOf": [
                  {
                    "title": "IPv4",
                    "type": "string",
                    "format": "ipv4"
                  },
                  {
                    "title": "IPv4/CIDR",
                    "type": "string",
                    "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$"
                  },
                  {
                    "title": "IPv6",
                    "type": "string",
                    "format": "ipv6"
                  },
                  {
                    "title": "IPv6/CIDR",
                    "type": "string",
                    "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$"
                  }
                ]
              },
              "type": "array",
              "minItems": 1
            },
            "disable": {
              "type": "boolean"
            },
            "source": {
              "type": "string",
              "minLength": 1
            }
          }
        },
        "version": 0.1
      },
      "authz-casbin": {
        "metadata_schema": {
          "required": [
            "model",
            "policy"
          ],
          "type": "object",
          "properties": {
            "model": {
              "type": "string"
            },
            "policy": {
              "type": "string"
            }
          }
        },
        "priority": 2560,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "oneOf": [
            {
              "required": [
                "model_path",
                "policy_path",
                "username"
              ]
            },
            {
              "required": [
                "model",
                "policy",
                "username"
              ]
            }
          ],
          "type": "object",
          "properties": {
            "model": {
              "type": "string"
            },
            "policy": {
              "type": "string"
            },
            "disable": {
              "type": "boolean"
            },
            "username": {
              "type": "string"
            },
            "model_path": {
              "type": "string"
            },
            "policy_path": {
              "type": "string"
            }
          }
        },
        "version": 0.1
      },
      "proxy-control": {
        "priority": 21990,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "request_buffering": {
              "type": "boolean",
              "default": true
            }
          }
        },
        "version": 0.1
      },
      "zipkin": {
        "priority": 11011,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "endpoint",
            "sample_ratio"
          ],
          "type": "object",
          "properties": {
            "server_addr": {
              "pattern": "^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}$",
              "type": "string",
              "description": "default is $server_addr, you can specify your external ip address"
            },
            "span_version": {
              "default": 2,
              "enum": [
                1,
                2
              ]
            },
            "disable": {
              "type": "boolean"
            },
            "sample_ratio": {
              "maximum": 1,
              "type": "number",
              "minimum": 0.00001
            },
            "endpoint": {
              "type": "string"
            },
            "service_name": {
              "default": "APISIX",
              "type": "string",
              "description": "service name for zipkin reporter"
            }
          }
        },
        "version": 0.1
      },
      "proxy-mirror": {
        "priority": 1010,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "host"
          ],
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "sample_ratio": {
              "maximum": 1,
              "default": 1,
              "type": "number",
              "minimum": 0.00001
            },
            "host": {
              "type": "string",
              "pattern": "^http(s)?:\\/\\/[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(\\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+(:[0-9]{1,5})?$"
            }
          }
        },
        "version": 0.1
      },
      "request-id": {
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "type": "object",
          "properties": {
            "header_name": {
              "type": "string",
              "default": "X-Request-Id"
            },
            "disable": {
              "type": "boolean"
            },
            "include_in_response": {
              "type": "boolean",
              "default": true
            },
            "algorithm": {
              "enum": [
                "uuid",
                "snowflake"
              ],
              "type": "string",
              "default": "uuid"
            }
          }
        },
        "priority": 11010,
        "version": 0.1
      },
      "syslog": {
        "priority": 401,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "host",
            "port"
          ],
          "type": "object",
          "properties": {
            "drop_limit": {
              "type": "integer",
              "default": 1048576
            },
            "sock_type": {
              "default": "tcp",
              "type": "string",
              "enum": [
                "tcp",
                "udp"
              ]
            },
            "max_retry_count": {
              "default": 0,
              "type": "integer",
              "minimum": 0
            },
            "retry_delay": {
              "default": 1,
              "type": "integer",
              "minimum": 0
            },
            "inactive_timeout": {
              "default": 5,
              "type": "integer",
              "minimum": 1
            },
            "buffer_duration": {
              "default": 60,
              "type": "integer",
              "minimum": 1
            },
            "include_req_body": {
              "type": "boolean",
              "default": false
            },
            "port": {
              "type": "integer"
            },
            "disable": {
              "type": "boolean"
            },
            "host": {
              "type": "string"
            },
            "tls": {
              "type": "boolean",
              "default": false
            },
            "name": {
              "type": "string",
              "default": "sys logger"
            },
            "timeout": {
              "default": 3,
              "type": "integer",
              "minimum": 1
            },
            "pool_size": {
              "default": 5,
              "type": "integer",
              "minimum": 5
            },
            "batch_max_size": {
              "default": 1000,
              "type": "integer",
              "minimum": 1
            },
            "max_retry_times": {
              "default": 1,
              "type": "integer",
              "minimum": 1
            },
            "retry_interval": {
              "default": 1,
              "type": "integer",
              "minimum": 0
            },
            "flush_limit": {
              "default": 4096,
              "type": "integer",
              "minimum": 1
            }
          }
        },
        "version": 0.1
      },
      "basic-auth": {
        "version": 0.1,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "title": "work with route or service object",
          "type": "object",
          "properties": {
            "hide_credentials": {
              "type": "boolean",
              "default": false
            },
            "disable": {
              "type": "boolean"
            }
          }
        },
        "consumer_schema": {
          "required": [
            "username",
            "password"
          ],
          "title": "work with consumer object",
          "type": "object",
          "properties": {
            "password": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          }
        },
        "type": "auth",
        "priority": 2520
      },
      "server-info": {
        "priority": 990,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            }
          }
        },
        "scope": "global",
        "version": 0.1
      },
      "limit-req": {
        "priority": 1001,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "rate",
            "burst",
            "key"
          ],
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "burst": {
              "type": "number",
              "minimum": 0
            },
            "nodelay": {
              "type": "boolean",
              "default": false
            },
            "key_type": {
              "enum": [
                "var",
                "var_combination"
              ],
              "type": "string",
              "default": "var"
            },
            "rejected_code": {
              "maximum": 599,
              "default": 503,
              "type": "integer",
              "minimum": 200
            },
            "rejected_msg": {
              "type": "string",
              "minLength": 1
            },
            "allow_degradation": {
              "type": "boolean",
              "default": false
            },
            "rate": {
              "type": "number",
              "exclusiveMinimum": 0
            },
            "key": {
              "type": "string"
            }
          }
        },
        "version": 0.1
      },
      "grpc-transcode": {
        "priority": 506,
        "schema": {
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "deadline": {
              "default": 0,
              "description": "deadline for grpc, millisecond",
              "type": "number"
            },
            "proto_id": {
              "anyOf": [
                {
                  "maxLength": 64,
                  "pattern": "^[a-zA-Z0-9-_.]+$",
                  "type": "string",
                  "minLength": 1
                },
                {
                  "type": "integer",
                  "minimum": 1
                }
              ]
            },
            "pb_option": {
              "items": {
                "type": "string",
                "anyOf": [
                  {
                    "enum": [
                      "int64_as_number",
                      "int64_as_string",
                      "int64_as_hexstring"
                    ],
                    "description": "enum as result",
                    "type": "string"
                  },
                  {
                    "enum": [
                      "enum_as_name",
                      "enum_as_value"
                    ],
                    "description": "int64 as result",
                    "type": "string"
                  },
                  {
                    "enum": [
                      "auto_default_values",
                      "no_default_values",
                      "use_default_values",
                      "use_default_metatable"
                    ],
                    "description": "default values option",
                    "type": "string"
                  },
                  {
                    "enum": [
                      "enable_hooks",
                      "disable_hooks"
                    ],
                    "description": "hooks option",
                    "type": "string"
                  }
                ]
              },
              "type": "array",
              "minItems": 1
            },
            "service": {
              "description": "the grpc service name",
              "type": "string"
            },
            "method": {
              "description": "the method name in the grpc service.",
              "type": "string"
            }
          },
          "$comment": "this is a mark for our injected plugin schema",
          "additionalProperties": true,
          "required": [
            "proto_id",
            "service",
            "method"
          ],
          "type": "object"
        },
        "version": 0.1
      },
      "datadog": {
        "metadata_schema": {
          "type": "object",
          "properties": {
            "constant_tags": {
              "items": {
                "type": "string"
              },
              "default": [
                "source:apisix"
              ],
              "type": "array"
            },
            "host": {
              "type": "string",
              "default": "127.0.0.1"
            },
            "port": {
              "default": 8125,
              "type": "integer",
              "minimum": 0
            },
            "namespace": {
              "type": "string",
              "default": "apisix"
            }
          }
        },
        "priority": 495,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "type": "object",
          "properties": {
            "prefer_name": {
              "type": "boolean",
              "default": true
            },
            "batch_max_size": {
              "default": 1000,
              "type": "integer",
              "minimum": 1
            },
            "disable": {
              "type": "boolean"
            },
            "max_retry_count": {
              "default": 0,
              "type": "integer",
              "minimum": 0
            },
            "buffer_duration": {
              "default": 60,
              "type": "integer",
              "minimum": 1
            },
            "inactive_timeout": {
              "default": 5,
              "type": "integer",
              "minimum": 1
            },
            "retry_delay": {
              "default": 1,
              "type": "integer",
              "minimum": 0
            },
            "name": {
              "type": "string",
              "default": "datadog"
            }
          }
        },
        "version": 0.1
      },
      "client-control": {
        "priority": 22000,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "type": "object",
          "properties": {
            "max_body_size": {
              "type": "integer",
              "minimum": 0
            },
            "disable": {
              "type": "boolean"
            }
          }
        },
        "version": 0.1
      },
      "ip-restriction": {
        "priority": 3000,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "oneOf": [
            {
              "required": [
                "whitelist"
              ]
            },
            {
              "required": [
                "blacklist"
              ]
            }
          ],
          "type": "object",
          "properties": {
            "blacklist": {
              "items": {
                "anyOf": [
                  {
                    "title": "IPv4",
                    "type": "string",
                    "format": "ipv4"
                  },
                  {
                    "title": "IPv4/CIDR",
                    "type": "string",
                    "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$"
                  },
                  {
                    "title": "IPv6",
                    "type": "string",
                    "format": "ipv6"
                  },
                  {
                    "title": "IPv6/CIDR",
                    "type": "string",
                    "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$"
                  }
                ]
              },
              "type": "array",
              "minItems": 1
            },
            "disable": {
              "type": "boolean"
            },
            "message": {
              "maxLength": 1024,
              "default": "Your IP address is not allowed",
              "type": "string",
              "minLength": 1
            },
            "whitelist": {
              "items": {
                "anyOf": [
                  {
                    "title": "IPv4",
                    "type": "string",
                    "format": "ipv4"
                  },
                  {
                    "title": "IPv4/CIDR",
                    "type": "string",
                    "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$"
                  },
                  {
                    "title": "IPv6",
                    "type": "string",
                    "format": "ipv6"
                  },
                  {
                    "title": "IPv6/CIDR",
                    "type": "string",
                    "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$"
                  }
                ]
              },
              "type": "array",
              "minItems": 1
            }
          }
        },
        "version": 0.1
      },
      "opa": {
        "priority": 2001,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "host",
            "policy"
          ],
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "host": {
              "type": "string"
            },
            "with_route": {
              "type": "boolean",
              "default": false
            },
            "with_service": {
              "type": "boolean",
              "default": false
            },
            "with_consumer": {
              "type": "boolean",
              "default": false
            },
            "keepalive_timeout": {
              "default": 60000,
              "type": "integer",
              "minimum": 1000
            },
            "ssl_verify": {
              "type": "boolean",
              "default": true
            },
            "keepalive_pool": {
              "default": 5,
              "type": "integer",
              "minimum": 1
            },
            "policy": {
              "type": "string"
            },
            "keepalive": {
              "type": "boolean",
              "default": true
            },
            "timeout": {
              "maximum": 60000,
              "description": "timeout in milliseconds",
              "default": 3000,
              "type": "integer",
              "minimum": 1
            }
          }
        },
        "version": 0.1
      },
      "key-auth": {
        "version": 0.1,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "header": {
              "type": "string",
              "default": "apikey"
            },
            "query": {
              "type": "string",
              "default": "apikey"
            }
          }
        },
        "consumer_schema": {
          "required": [
            "key"
          ],
          "type": "object",
          "properties": {
            "key": {
              "type": "string"
            }
          }
        },
        "type": "auth",
        "priority": 2500
      },
      "ua-restriction": {
        "priority": 2999,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "bypass_missing": {
              "type": "boolean",
              "default": false
            },
            "allowlist": {
              "items": {
                "type": "string",
                "minLength": 1
              },
              "type": "array",
              "minItems": 1
            },
            "message": {
              "maxLength": 1024,
              "default": "Not allowed",
              "type": "string",
              "minLength": 1
            },
            "denylist": {
              "items": {
                "type": "string",
                "minLength": 1
              },
              "type": "array",
              "minItems": 1
            }
          }
        },
        "version": 0.1
      },
      "forward-auth": {
        "priority": 2002,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "uri"
          ],
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "uri": {
              "type": "string"
            },
            "keepalive_pool": {
              "default": 5,
              "type": "integer",
              "minimum": 1
            },
            "keepalive_timeout": {
              "default": 60000,
              "type": "integer",
              "minimum": 1000
            },
            "request_headers": {
              "items": {
                "type": "string"
              },
              "default": {},
              "type": "array",
              "description": "client request header that will be sent to the authorization service"
            },
            "upstream_headers": {
              "items": {
                "type": "string"
              },
              "default": {},
              "type": "array",
              "description": "authorization response header that will be sent to the upstream"
            },
            "ssl_verify": {
              "type": "boolean",
              "default": true
            },
            "client_headers": {
              "items": {
                "type": "string"
              },
              "default": {},
              "type": "array",
              "description": "authorization response header that will be sent tothe client when authorizing failed"
            },
            "keepalive": {
              "type": "boolean",
              "default": true
            },
            "timeout": {
              "maximum": 60000,
              "description": "timeout in milliseconds",
              "default": 3000,
              "type": "integer",
              "minimum": 1
            }
          }
        },
        "version": 0.1
      },
      "cors": {
        "priority": 4000,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "allow_methods": {
              "default": "*",
              "description": "you can use '*' to allow all methods when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple method use ',' to split. default: *.",
              "type": "string"
            },
            "allow_origins_by_regex": {
              "items": {
                "maxLength": 4096,
                "type": "string",
                "minLength": 1
              },
              "description": "you can use regex to allow specific origins when no credentials,for example use [.*\\.test.com] to allow a.test.com and b.test.com",
              "uniqueItems": true,
              "type": "array",
              "minItems": 1
            },
            "allow_credential": {
              "default": false,
              "description": "allow client append credential. according to CORS specification,if you set this option to 'true', you can not use '*' for other options.",
              "type": "boolean"
            },
            "allow_origins": {
              "pattern": "^(\\*|\\*\\*|null|\\w+://[^,]+(,\\w+://[^,]+)*)$",
              "default": "*",
              "description": "you can use '*' to allow all origins when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple origin use ',' to split. default: *.",
              "type": "string"
            },
            "max_age": {
              "default": 5,
              "description": "maximum number of seconds the results can be cached.-1 means no cached, the max value is depend on browser,more details plz check MDN. default: 5.",
              "type": "integer"
            },
            "allow_headers": {
              "default": "*",
              "description": "you can use '*' to allow all header when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple header use ',' to split. default: *.",
              "type": "string"
            },
            "expose_headers": {
              "default": "*",
              "description": "you can use '*' to expose all header when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple header use ',' to split. default: *.",
              "type": "string"
            }
          }
        },
        "version": 0.1
      },
      "proxy-cache": {
        "priority": 1009,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "hide_cache_headers": {
              "type": "boolean",
              "default": false
            },
            "cache_control": {
              "type": "boolean",
              "default": false
            },
            "cache_bypass": {
              "items": {
                "type": "string",
                "pattern": "(^[^\\$].+$|^\\$[0-9a-zA-Z_]+$)"
              },
              "type": "array",
              "minItems": 1
            },
            "no_cache": {
              "items": {
                "type": "string",
                "pattern": "(^[^\\$].+$|^\\$[0-9a-zA-Z_]+$)"
              },
              "type": "array",
              "minItems": 1
            },
            "cache_zone": {
              "maxLength": 100,
              "default": "disk_cache_one",
              "type": "string",
              "minLength": 1
            },
            "cache_strategy": {
              "enum": [
                "disk",
                "memory"
              ],
              "type": "string",
              "default": "disk"
            },
            "cache_key": {
              "items": {
                "pattern": "(^[^\\$].+$|^\\$[0-9a-zA-Z_]+$)",
                "description": "a key for caching",
                "type": "string"
              },
              "default": [
                "$host",
                "$request_uri"
              ],
              "type": "array",
              "minItems": 1
            },
            "cache_http_status": {
              "items": {
                "maximum": 599,
                "type": "integer",
                "description": "http response status",
                "minimum": 200
              },
              "uniqueItems": true,
              "default": [
                200,
                301,
                404
              ],
              "type": "array",
              "minItems": 1
            },
            "cache_ttl": {
              "default": 300,
              "type": "integer",
              "minimum": 1
            },
            "cache_method": {
              "items": {
                "enum": [
                  "GET",
                  "POST",
                  "HEAD"
                ],
                "description": "supported http method",
                "type": "string"
              },
              "uniqueItems": true,
              "default": [
                "GET",
                "HEAD"
              ],
              "type": "array",
              "minItems": 1
            }
          }
        },
        "version": 0.2
      },
      "jwt-auth": {
        "version": 0.1,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            }
          }
        },
        "consumer_schema": {
          "dependencies": {
            "algorithm": {
              "oneOf": [
                {
                  "properties": {
                    "algorithm": {
                      "default": "HS256",
                      "enum": [
                        "HS256",
                        "HS512"
                      ]
                    }
                  }
                },
                {
                  "required": [
                    "public_key",
                    "private_key"
                  ],
                  "properties": {
                    "private_key": {
                      "type": "string"
                    },
                    "public_key": {
                      "type": "string"
                    },
                    "algorithm": {
                      "enum": [
                        "RS256"
                      ]
                    }
                  }
                },
                {
                  "required": [
                    "vault"
                  ],
                  "properties": {
                    "algorithm": {
                      "enum": [
                        "RS256"
                      ]
                    },
                    "vault": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              ]
            }
          },
          "required": [
            "key"
          ],
          "type": "object",
          "properties": {
            "vault": {
              "type": "object",
              "properties": {}
            },
            "algorithm": {
              "enum": [
                "HS256",
                "HS512",
                "RS256"
              ],
              "type": "string",
              "default": "HS256"
            },
            "exp": {
              "default": 86400,
              "type": "integer",
              "minimum": 1
            },
            "base64_secret": {
              "type": "boolean",
              "default": false
            },
            "key": {
              "type": "string"
            },
            "secret": {
              "type": "string"
            }
          }
        },
        "type": "auth",
        "priority": 2510
      },
      "http-logger": {
        "metadata_schema": {
          "type": "object",
          "properties": {
            "log_format": {
              "type": "object",
              "default": {
                "@timestamp": "$time_iso8601",
                "host": "$host",
                "client_ip": "$remote_addr"
              }
            }
          }
        },
        "priority": 410,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "uri"
          ],
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "batch_max_size": {
              "default": 1000,
              "type": "integer",
              "minimum": 1
            },
            "uri": {
              "type": "string",
              "pattern": "^[^\\/]+:\\/\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?"
            },
            "concat_method": {
              "default": "json",
              "type": "string",
              "enum": [
                "json",
                "new_line"
              ]
            },
            "inactive_timeout": {
              "default": 5,
              "type": "integer",
              "minimum": 1
            },
            "include_resp_body_expr": {
              "items": {
                "type": "array"
              },
              "type": "array",
              "minItems": 1
            },
            "name": {
              "type": "string",
              "default": "http logger"
            },
            "auth_header": {
              "type": "string",
              "default": ""
            },
            "include_resp_body": {
              "type": "boolean",
              "default": false
            },
            "retry_delay": {
              "default": 1,
              "type": "integer",
              "minimum": 0
            },
            "buffer_duration": {
              "default": 60,
              "type": "integer",
              "minimum": 1
            },
            "include_req_body": {
              "type": "boolean",
              "default": false
            },
            "max_retry_count": {
              "default": 0,
              "type": "integer",
              "minimum": 0
            },
            "timeout": {
              "default": 3,
              "type": "integer",
              "minimum": 1
            }
          }
        },
        "version": 0.1
      },
      "splunk-hec-logging": {
        "priority": 409,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "endpoint"
          ],
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "batch_max_size": {
              "default": 1000,
              "type": "integer",
              "minimum": 1
            },
            "max_retry_count": {
              "default": 0,
              "type": "integer",
              "minimum": 0
            },
            "retry_delay": {
              "default": 1,
              "type": "integer",
              "minimum": 0
            },
            "inactive_timeout": {
              "default": 5,
              "type": "integer",
              "minimum": 1
            },
            "endpoint": {
              "required": [
                "uri",
                "token"
              ],
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                },
                "channel": {
                  "type": "string"
                },
                "timeout": {
                  "default": 10,
                  "type": "integer",
                  "minimum": 1
                },
                "uri": {
                  "type": "string",
                  "pattern": "^[^\\/]+:\\/\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?"
                }
              }
            },
            "name": {
              "type": "string",
              "default": "splunk-hec-logging"
            },
            "ssl_verify": {
              "type": "boolean",
              "default": true
            },
            "buffer_duration": {
              "default": 60,
              "type": "integer",
              "minimum": 1
            }
          }
        },
        "version": 0.1
      },
      "echo": {
        "priority": 412,
        "schema": {
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "body": {
              "description": "body to replace upstream response.",
              "type": "string"
            },
            "before_body": {
              "description": "body before the filter phase.",
              "type": "string"
            },
            "headers": {
              "type": "object",
              "description": "new headers for response",
              "minProperties": 1
            },
            "after_body": {
              "description": "body after the modification of filter phase.",
              "type": "string"
            }
          },
          "anyOf": [
            {
              "required": [
                "before_body"
              ]
            },
            {
              "required": [
                "body"
              ]
            },
            {
              "required": [
                "after_body"
              ]
            }
          ],
          "$comment": "this is a mark for our injected plugin schema",
          "type": "object",
          "minProperties": 1
        },
        "version": 0.1
      },
      "rocketmq-logger": {
        "metadata_schema": {
          "type": "object",
          "properties": {
            "log_format": {
              "type": "object",
              "default": {
                "@timestamp": "$time_iso8601",
                "host": "$host",
                "client_ip": "$remote_addr"
              }
            }
          }
        },
        "priority": 402,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "nameserver_list",
            "topic"
          ],
          "type": "object",
          "properties": {
            "max_retry_count": {
              "default": 0,
              "type": "integer",
              "minimum": 0
            },
            "retry_delay": {
              "default": 1,
              "type": "integer",
              "minimum": 0
            },
            "inactive_timeout": {
              "default": 5,
              "type": "integer",
              "minimum": 1
            },
            "key": {
              "type": "string"
            },
            "buffer_duration": {
              "default": 60,
              "type": "integer",
              "minimum": 1
            },
            "include_req_body": {
              "type": "boolean",
              "default": false
            },
            "include_req_body_expr": {
              "items": {
                "type": "array"
              },
              "type": "array",
              "minItems": 1
            },
            "disable": {
              "type": "boolean"
            },
            "batch_max_size": {
              "default": 1000,
              "type": "integer",
              "minimum": 1
            },
            "secret_key": {
              "type": "string",
              "default": ""
            },
            "meta_format": {
              "default": "default",
              "type": "string",
              "enum": [
                "default",
                "origin"
              ]
            },
            "include_resp_body_expr": {
              "items": {
                "type": "array"
              },
              "type": "array",
              "minItems": 1
            },
            "name": {
              "type": "string",
              "default": "rocketmq logger"
            },
            "topic": {
              "type": "string"
            },
            "include_resp_body": {
              "type": "boolean",
              "default": false
            },
            "access_key": {
              "type": "string",
              "default": ""
            },
            "use_tls": {
              "type": "boolean",
              "default": false
            },
            "nameserver_list": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "minItems": 1
            },
            "tag": {
              "type": "string"
            },
            "timeout": {
              "default": 3,
              "type": "integer",
              "minimum": 1
            }
          }
        },
        "version": 0.1
      },
      "openwhisk": {
        "priority": -1901,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "api_host",
            "service_token",
            "namespace",
            "action"
          ],
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "api_host": {
              "type": "string"
            },
            "service_token": {
              "type": "string"
            },
            "namespace": {
              "maxLength": 256,
              "type": "string",
              "pattern": "\\A([\\w]|[\\w][\\w@ .-]*[\\w@.-]+)\\z"
            },
            "result": {
              "type": "boolean",
              "default": true
            },
            "keepalive_timeout": {
              "default": 60000,
              "type": "integer",
              "minimum": 1000
            },
            "keepalive_pool": {
              "default": 5,
              "type": "integer",
              "minimum": 1
            },
            "package": {
              "maxLength": 256,
              "type": "string",
              "pattern": "\\A([\\w]|[\\w][\\w@ .-]*[\\w@.-]+)\\z"
            },
            "ssl_verify": {
              "type": "boolean",
              "default": true
            },
            "action": {
              "maxLength": 256,
              "type": "string",
              "pattern": "\\A([\\w]|[\\w][\\w@ .-]*[\\w@.-]+)\\z"
            },
            "keepalive": {
              "type": "boolean",
              "default": true
            },
            "timeout": {
              "maximum": 60000,
              "description": "timeout in milliseconds",
              "default": 3000,
              "type": "integer",
              "minimum": 1
            }
          }
        },
        "version": 0.1
      },
      "limit-count": {
        "priority": 1002,
        "schema": {
          "dependencies": {
            "policy": {
              "oneOf": [
                {
                  "properties": {
                    "policy": {
                      "enum": [
                        "local"
                      ]
                    }
                  }
                },
                {
                  "required": [
                    "redis_host"
                  ],
                  "properties": {
                    "redis_password": {
                      "type": "string",
                      "minLength": 0
                    },
                    "policy": {
                      "enum": [
                        "redis"
                      ]
                    },
                    "redis_timeout": {
                      "default": 1000,
                      "type": "integer",
                      "minimum": 1
                    },
                    "redis_database": {
                      "default": 0,
                      "type": "integer",
                      "minimum": 0
                    },
                    "redis_host": {
                      "type": "string",
                      "minLength": 2
                    },
                    "redis_port": {
                      "default": 6379,
                      "type": "integer",
                      "minimum": 1
                    }
                  }
                },
                {
                  "required": [
                    "redis_cluster_nodes",
                    "redis_cluster_name"
                  ],
                  "properties": {
                    "redis_password": {
                      "type": "string",
                      "minLength": 0
                    },
                    "policy": {
                      "enum": [
                        "redis-cluster"
                      ]
                    },
                    "redis_timeout": {
                      "default": 1000,
                      "type": "integer",
                      "minimum": 1
                    },
                    "redis_cluster_nodes": {
                      "items": {
                        "maxLength": 100,
                        "type": "string",
                        "minLength": 2
                      },
                      "type": "array",
                      "minItems": 2
                    },
                    "redis_cluster_name": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          },
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "rejected_msg": {
              "type": "string",
              "minLength": 1
            },
            "group": {
              "type": "string"
            },
            "key_type": {
              "enum": [
                "var",
                "var_combination",
                "constant"
              ],
              "type": "string",
              "default": "var"
            },
            "policy": {
              "enum": [
                "local",
                "redis",
                "redis-cluster"
              ],
              "type": "string",
              "default": "local"
            },
            "rejected_code": {
              "maximum": 599,
              "default": 503,
              "type": "integer",
              "minimum": 200
            },
            "key": {
              "type": "string",
              "default": "remote_addr"
            },
            "allow_degradation": {
              "type": "boolean",
              "default": false
            },
            "time_window": {
              "type": "integer",
              "exclusiveMinimum": 0
            },
            "count": {
              "type": "integer",
              "exclusiveMinimum": 0
            },
            "show_limit_quota_header": {
              "type": "boolean",
              "default": true
            }
          },
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "count",
            "time_window"
          ],
          "type": "object"
        },
        "version": 0.4
      },
      "tcp-logger": {
        "priority": 405,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "host",
            "port"
          ],
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "batch_max_size": {
              "default": 1000,
              "type": "integer",
              "minimum": 1
            },
            "max_retry_count": {
              "default": 0,
              "type": "integer",
              "minimum": 0
            },
            "retry_delay": {
              "default": 1,
              "type": "integer",
              "minimum": 0
            },
            "tls": {
              "type": "boolean",
              "default": false
            },
            "name": {
              "type": "string",
              "default": "tcp logger"
            },
            "tls_options": {
              "type": "string"
            },
            "inactive_timeout": {
              "default": 5,
              "type": "integer",
              "minimum": 1
            },
            "host": {
              "type": "string"
            },
            "buffer_duration": {
              "default": 60,
              "type": "integer",
              "minimum": 1
            },
            "include_req_body": {
              "type": "boolean",
              "default": false
            },
            "port": {
              "type": "integer",
              "minimum": 0
            },
            "timeout": {
              "default": 1000,
              "type": "integer",
              "minimum": 1
            }
          }
        },
        "version": 0.1
      },
      "grpc-web": {
        "priority": 505,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            }
          }
        },
        "version": 0.1
      },
      "sls-logger": {
        "priority": 406,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "host",
            "port",
            "project",
            "logstore",
            "access_key_id",
            "access_key_secret"
          ],
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "host": {
              "type": "string"
            },
            "project": {
              "type": "string"
            },
            "logstore": {
              "type": "string"
            },
            "access_key_id": {
              "type": "string"
            },
            "access_key_secret": {
              "type": "string"
            },
            "retry_delay": {
              "default": 1,
              "type": "integer",
              "minimum": 0
            },
            "name": {
              "type": "string",
              "default": "sls-logger"
            },
            "inactive_timeout": {
              "default": 5,
              "type": "integer",
              "minimum": 1
            },
            "batch_max_size": {
              "default": 1000,
              "type": "integer",
              "minimum": 1
            },
            "max_retry_count": {
              "default": 0,
              "type": "integer",
              "minimum": 0
            },
            "buffer_duration": {
              "default": 60,
              "type": "integer",
              "minimum": 1
            },
            "include_req_body": {
              "type": "boolean",
              "default": false
            },
            "port": {
              "type": "integer"
            },
            "timeout": {
              "default": 5000,
              "type": "integer",
              "minimum": 1
            }
          }
        },
        "version": 0.1
      },
      "kafka-logger": {
        "metadata_schema": {
          "type": "object",
          "properties": {
            "log_format": {
              "type": "object",
              "default": {
                "@timestamp": "$time_iso8601",
                "host": "$host",
                "client_ip": "$remote_addr"
              }
            }
          }
        },
        "priority": 403,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "broker_list",
            "kafka_topic"
          ],
          "type": "object",
          "properties": {
            "max_retry_count": {
              "default": 0,
              "type": "integer",
              "minimum": 0
            },
            "retry_delay": {
              "default": 1,
              "type": "integer",
              "minimum": 0
            },
            "broker_list": {
              "patternProperties": {
                ".*": {
                  "maximum": 65535,
                  "type": "integer",
                  "description": "the port of kafka broker",
                  "minimum": 1
                }
              },
              "type": "object",
              "minProperties": 1
            },
            "kafka_topic": {
              "type": "string"
            },
            "producer_type": {
              "default": "async",
              "type": "string",
              "enum": [
                "async",
                "sync"
              ]
            },
            "required_acks": {
              "default": 1,
              "type": "integer",
              "enum": [
                0,
                1,
                -1
              ]
            },
            "cluster_name": {
              "default": 1,
              "type": "integer",
              "minimum": 1
            },
            "buffer_duration": {
              "default": 60,
              "type": "integer",
              "minimum": 1
            },
            "include_req_body": {
              "type": "boolean",
              "default": false
            },
            "include_req_body_expr": {
              "items": {
                "type": "array"
              },
              "type": "array",
              "minItems": 1
            },
            "disable": {
              "type": "boolean"
            },
            "batch_max_size": {
              "default": 1000,
              "type": "integer",
              "minimum": 1
            },
            "meta_format": {
              "default": "default",
              "type": "string",
              "enum": [
                "default",
                "origin"
              ]
            },
            "include_resp_body_expr": {
              "items": {
                "type": "array"
              },
              "type": "array",
              "minItems": 1
            },
            "name": {
              "type": "string",
              "default": "kafka logger"
            },
            "include_resp_body": {
              "type": "boolean",
              "default": false
            },
            "inactive_timeout": {
              "default": 5,
              "type": "integer",
              "minimum": 1
            },
            "key": {
              "type": "string"
            },
            "timeout": {
              "default": 3,
              "type": "integer",
              "minimum": 1
            }
          }
        },
        "version": 0.1
      },
      "hmac-auth": {
        "version": 0.1,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "title": "work with route or service object",
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            }
          }
        },
        "consumer_schema": {
          "required": [
            "access_key",
            "secret_key"
          ],
          "title": "work with consumer object",
          "type": "object",
          "properties": {
            "validate_request_body": {
              "title": "A boolean value telling the plugin to enable body validation",
              "type": "boolean",
              "default": false
            },
            "max_req_body": {
              "title": "Max request body size",
              "type": "integer",
              "default": 524288
            },
            "secret_key": {
              "maxLength": 256,
              "type": "string",
              "minLength": 1
            },
            "algorithm": {
              "enum": [
                "hmac-sha1",
                "hmac-sha256",
                "hmac-sha512"
              ],
              "type": "string",
              "default": "hmac-sha256"
            },
            "access_key": {
              "maxLength": 256,
              "type": "string",
              "minLength": 1
            },
            "keep_headers": {
              "title": "whether to keep the http request header",
              "type": "boolean",
              "default": false
            },
            "signed_headers": {
              "type": "array",
              "items": {
                "maxLength": 50,
                "type": "string",
                "minLength": 1
              }
            },
            "encode_uri_params": {
              "title": "Whether to escape the uri parameter",
              "type": "boolean",
              "default": true
            },
            "clock_skew": {
              "type": "integer",
              "default": 0
            }
          }
        },
        "type": "auth",
        "priority": 2530
      },
      "ldap-auth": {
        "version": 0.1,
        "schema": {
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "base_dn": {
              "type": "string"
            },
            "ldap_uri": {
              "type": "string"
            },
            "use_tls": {
              "type": "boolean"
            },
            "uid": {
              "type": "string"
            }
          },
          "$comment": "this is a mark for our injected plugin schema",
          "title": "work with route or service object",
          "required": [
            "base_dn",
            "ldap_uri"
          ],
          "type": "object"
        },
        "consumer_schema": {
          "required": [
            "user_dn"
          ],
          "title": "work with consumer object",
          "type": "object",
          "properties": {
            "user_dn": {
              "type": "string"
            }
          }
        },
        "type": "auth",
        "priority": 2540
      },
      "skywalking-logger": {
        "metadata_schema": {
          "type": "object",
          "properties": {
            "log_format": {
              "type": "object",
              "default": {
                "@timestamp": "$time_iso8601",
                "host": "$host",
                "client_ip": "$remote_addr"
              }
            }
          }
        },
        "priority": 408,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "endpoint_addr"
          ],
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "service_instance_name": {
              "type": "string",
              "default": "APISIX Instance Name"
            },
            "max_retry_count": {
              "default": 0,
              "type": "integer",
              "minimum": 0
            },
            "retry_delay": {
              "default": 1,
              "type": "integer",
              "minimum": 0
            },
            "inactive_timeout": {
              "default": 5,
              "type": "integer",
              "minimum": 1
            },
            "service_name": {
              "type": "string",
              "default": "APISIX"
            },
            "endpoint_addr": {
              "type": "string",
              "pattern": "^[^\\/]+:\\/\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?"
            },
            "name": {
              "type": "string",
              "default": "skywalking logger"
            },
            "buffer_duration": {
              "default": 60,
              "type": "integer",
              "minimum": 1
            },
            "include_req_body": {
              "type": "boolean",
              "default": false
            },
            "batch_max_size": {
              "default": 1000,
              "type": "integer",
              "minimum": 1
            },
            "timeout": {
              "default": 3,
              "type": "integer",
              "minimum": 1
            }
          }
        },
        "version": 0.1
      },
      "ext-plugin-post-req": {
        "priority": -3000,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "type": "object",
          "properties": {
            "allow_degradation": {
              "type": "boolean",
              "default": false
            },
            "conf": {
              "items": {
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "maxLength": 128,
                    "type": "string",
                    "minLength": 1
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "type": "array",
              "minItems": 1
            },
            "disable": {
              "type": "boolean"
            }
          }
        },
        "version": 0.1
      },
      "consumer-restriction": {
        "priority": 2400,
        "schema": {
          "anyOf": [
            {
              "required": [
                "blacklist"
              ]
            },
            {
              "required": [
                "whitelist"
              ]
            },
            {
              "required": [
                "allowed_by_methods"
              ]
            }
          ],
          "$comment": "this is a mark for our injected plugin schema",
          "type": "object",
          "properties": {
            "blacklist": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "minItems": 1
            },
            "rejected_code": {
              "default": 403,
              "type": "integer",
              "minimum": 200
            },
            "rejected_msg": {
              "type": "string"
            },
            "disable": {
              "type": "boolean"
            },
            "whitelist": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "minItems": 1
            },
            "type": {
              "enum": [
                "consumer_name",
                "service_id",
                "route_id"
              ],
              "type": "string",
              "default": "consumer_name"
            },
            "allowed_by_methods": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "string"
                  },
                  "methods": {
                    "items": {
                      "enum": [
                        "GET",
                        "POST",
                        "PUT",
                        "DELETE",
                        "PATCH",
                        "HEAD",
                        "OPTIONS",
                        "CONNECT",
                        "TRACE"
                      ],
                      "description": "HTTP method",
                      "type": "string"
                    },
                    "type": "array",
                    "minItems": 1
                  }
                }
              }
            }
          }
        },
        "version": 0.1
      },
      "serverless-post-function": {
        "priority": -2000,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "functions"
          ],
          "type": "object",
          "properties": {
            "functions": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "minItems": 1
            },
            "disable": {
              "type": "boolean"
            },
            "phase": {
              "default": "access",
              "type": "string",
              "enum": [
                "rewrite",
                "access",
                "header_filter",
                "body_filter",
                "log",
                "before_proxy"
              ]
            }
          }
        },
        "version": 0.1
      },
      "example-plugin": {
        "metadata_schema": {
          "required": [
            "ikey",
            "skey"
          ],
          "type": "object",
          "properties": {
            "skey": {
              "type": "string"
            },
            "ikey": {
              "type": "number",
              "minimum": 0
            }
          }
        },
        "priority": 0,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "i"
          ],
          "type": "object",
          "properties": {
            "s": {
              "type": "string"
            },
            "t": {
              "type": "array",
              "minItems": 1
            },
            "disable": {
              "type": "boolean"
            },
            "i": {
              "type": "number",
              "minimum": 0
            },
            "port": {
              "type": "integer"
            },
            "ip": {
              "type": "string"
            }
          }
        },
        "version": 0.1
      },
      "google-cloud-logging": {
        "priority": 407,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "oneOf": [
            {
              "required": [
                "auth_config"
              ]
            },
            {
              "required": [
                "auth_file"
              ]
            }
          ],
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "batch_max_size": {
              "default": 1000,
              "type": "integer",
              "minimum": 1
            },
            "max_retry_count": {
              "default": 0,
              "type": "integer",
              "minimum": 0
            },
            "retry_delay": {
              "default": 1,
              "type": "integer",
              "minimum": 0
            },
            "inactive_timeout": {
              "default": 5,
              "type": "integer",
              "minimum": 1
            },
            "name": {
              "type": "string",
              "default": "google-cloud-logging"
            },
            "auth_file": {
              "type": "string"
            },
            "resource": {
              "required": [
                "type"
              ],
              "default": {
                "type": "global"
              },
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "labels": {
                  "type": "object"
                }
              }
            },
            "ssl_verify": {
              "type": "boolean",
              "default": true
            },
            "auth_config": {
              "required": [
                "private_key",
                "project_id",
                "token_uri"
              ],
              "type": "object",
              "properties": {
                "token_uri": {
                  "type": "string",
                  "default": "https://oauth2.googleapis.com/token"
                },
                "scopes": {
                  "items": {
                    "description": "Google OAuth2 Authorization Scopes",
                    "type": "string"
                  },
                  "uniqueItems": true,
                  "default": [
                    "https://www.googleapis.com/auth/logging.read",
                    "https://www.googleapis.com/auth/logging.write",
                    "https://www.googleapis.com/auth/logging.admin",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "type": "array",
                  "minItems": 1
                },
                "entries_uri": {
                  "type": "string",
                  "default": "https://logging.googleapis.com/v2/entries:write"
                },
                "private_key": {
                  "type": "string"
                },
                "project_id": {
                  "type": "string"
                }
              }
            },
            "buffer_duration": {
              "default": 60,
              "type": "integer",
              "minimum": 1
            },
            "log_id": {
              "type": "string",
              "default": "apisix.apache.org%2Flogs"
            }
          }
        },
        "version": 0.1
      },
      "aws-lambda": {
        "priority": -1899,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "function_uri"
          ],
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "keepalive_timeout": {
              "default": 60000,
              "type": "integer",
              "minimum": 1000
            },
            "keepalive_pool": {
              "default": 5,
              "type": "integer",
              "minimum": 1
            },
            "keepalive": {
              "type": "boolean",
              "default": true
            },
            "ssl_verify": {
              "type": "boolean",
              "default": true
            },
            "function_uri": {
              "type": "string"
            },
            "authorization": {
              "type": "object",
              "properties": {
                "iam": {
                  "required": [
                    "accesskey",
                    "secretkey"
                  ],
                  "type": "object",
                  "properties": {
                    "accesskey": {
                      "type": "string",
                      "description": "access key id from from aws iam console"
                    },
                    "service": {
                      "default": "execute-api",
                      "type": "string",
                      "description": "the service that is receiving the request"
                    },
                    "secretkey": {
                      "type": "string",
                      "description": "secret access key from from aws iam console"
                    },
                    "aws_region": {
                      "default": "us-east-1",
                      "type": "string",
                      "description": "the aws region that is receiving the request"
                    }
                  }
                },
                "apikey": {
                  "type": "string"
                }
              }
            },
            "timeout": {
              "default": 3000,
              "type": "integer",
              "minimum": 100
            }
          }
        },
        "version": 0.1
      },
      "azure-functions": {
        "metadata_schema": {
          "type": "object",
          "properties": {
            "master_clientid": {
              "type": "string",
              "default": ""
            },
            "master_apikey": {
              "type": "string",
              "default": ""
            }
          }
        },
        "priority": -1900,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "function_uri"
          ],
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "keepalive_timeout": {
              "default": 60000,
              "type": "integer",
              "minimum": 1000
            },
            "keepalive_pool": {
              "default": 5,
              "type": "integer",
              "minimum": 1
            },
            "keepalive": {
              "type": "boolean",
              "default": true
            },
            "ssl_verify": {
              "type": "boolean",
              "default": true
            },
            "function_uri": {
              "type": "string"
            },
            "authorization": {
              "type": "object",
              "properties": {
                "clientid": {
                  "type": "string"
                },
                "apikey": {
                  "type": "string"
                }
              }
            },
            "timeout": {
              "default": 3000,
              "type": "integer",
              "minimum": 100
            }
          }
        },
        "version": 0.1
      },
      "traffic-split": {
        "priority": 966,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "type": "object",
          "properties": {
            "rules": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "match": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "vars": {
                          "type": "array"
                        }
                      }
                    }
                  },
                  "weighted_upstreams": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "weight": {
                          "type": "integer",
                          "default": 1,
                          "description": "used to split traffic between differentupstreams for plugin configuration",
                          "minimum": 0
                        },
                        "upstream_id": {
                          "anyOf": [
                            {
                              "maxLength": 64,
                              "pattern": "^[a-zA-Z0-9-_.]+$",
                              "type": "string",
                              "minLength": 1
                            },
                            {
                              "type": "integer",
                              "minimum": 1
                            }
                          ]
                        },
                        "upstream": {
                          "oneOf": [
                            {
                              "required": [
                                "type",
                                "nodes"
                              ]
                            },
                            {
                              "required": [
                                "type",
                                "service_name",
                                "discovery_type"
                              ]
                            }
                          ],
                          "type": "object",
                          "properties": {
                            "labels": {
                              "type": "object",
                              "patternProperties": {
                                ".*": {
                                  "maxLength": 64,
                                  "description": "value of label",
                                  "type": "string",
                                  "pattern": "^\\S+$",
                                  "minLength": 1
                                }
                              },
                              "description": "key/value pairs to specify attributes",
                              "maxProperties": 16
                            },
                            "discovery_type": {
                              "description": "discovery type",
                              "type": "string"
                            },
                            "discovery_args": {
                              "type": "object",
                              "properties": {
                                "group_name": {
                                  "description": "group name",
                                  "type": "string"
                                },
                                "namespace_id": {
                                  "description": "namespace id",
                                  "type": "string"
                                }
                              }
                            },
                            "scheme": {
                              "enum": [
                                "grpc",
                                "grpcs",
                                "http",
                                "https",
                                "tcp",
                                "tls",
                                "udp"
                              ],
                              "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp.",
                              "default": "http"
                            },
                            "desc": {
                              "type": "string",
                              "maxLength": 256
                            },
                            "checks": {
                              "anyOf": [
                                {
                                  "required": [
                                    "active"
                                  ]
                                },
                                {
                                  "required": [
                                    "active",
                                    "passive"
                                  ]
                                }
                              ],
                              "type": "object",
                              "properties": {
                                "passive": {
                                  "default": {
                                    "healthy": {
                                      "http_statuses": [
                                        200,
                                        201,
                                        202,
                                        203,
                                        204,
                                        205,
                                        206,
                                        207,
                                        208,
                                        226,
                                        300,
                                        301,
                                        302,
                                        303,
                                        304,
                                        305,
                                        306,
                                        307,
                                        308
                                      ],
                                      "successes": 0
                                    },
                                    "type": "http",
                                    "unhealthy": {
                                      "http_statuses": [
                                        429,
                                        500,
                                        503
                                      ],
                                      "timeouts": 0,
                                      "http_failures": 0,
                                      "tcp_failures": 0
                                    }
                                  },
                                  "type": "object",
                                  "properties": {
                                    "healthy": {
                                      "type": "object",
                                      "properties": {
                                        "http_statuses": {
                                          "items": {
                                            "maximum": 599,
                                            "type": "integer",
                                            "minimum": 200
                                          },
                                          "uniqueItems": true,
                                          "default": [
                                            200,
                                            201,
                                            202,
                                            203,
                                            204,
                                            205,
                                            206,
                                            207,
                                            208,
                                            226,
                                            300,
                                            301,
                                            302,
                                            303,
                                            304,
                                            305,
                                            306,
                                            307,
                                            308
                                          ],
                                          "type": "array",
                                          "minItems": 1
                                        },
                                        "successes": {
                                          "maximum": 254,
                                          "default": 5,
                                          "type": "integer",
                                          "minimum": 0
                                        }
                                      }
                                    },
                                    "type": {
                                      "enum": [
                                        "http",
                                        "https",
                                        "tcp"
                                      ],
                                      "type": "string",
                                      "default": "http"
                                    },
                                    "unhealthy": {
                                      "type": "object",
                                      "properties": {
                                        "http_statuses": {
                                          "items": {
                                            "maximum": 599,
                                            "type": "integer",
                                            "minimum": 200
                                          },
                                          "uniqueItems": true,
                                          "default": [
                                            429,
                                            500,
                                            503
                                          ],
                                          "type": "array",
                                          "minItems": 1
                                        },
                                        "timeouts": {
                                          "maximum": 254,
                                          "default": 7,
                                          "type": "integer",
                                          "minimum": 0
                                        },
                                        "http_failures": {
                                          "maximum": 254,
                                          "default": 5,
                                          "type": "integer",
                                          "minimum": 0
                                        },
                                        "tcp_failures": {
                                          "maximum": 254,
                                          "default": 2,
                                          "type": "integer",
                                          "minimum": 0
                                        }
                                      }
                                    }
                                  }
                                },
                                "active": {
                                  "type": "object",
                                  "properties": {
                                    "https_verify_certificate": {
                                      "type": "boolean",
                                      "default": true
                                    },
                                    "host": {
                                      "type": "string",
                                      "pattern": "^\\*?[0-9a-zA-Z-._]+$"
                                    },
                                    "req_headers": {
                                      "items": {
                                        "type": "string",
                                        "uniqueItems": true
                                      },
                                      "type": "array",
                                      "minItems": 1
                                    },
                                    "type": {
                                      "enum": [
                                        "http",
                                        "https",
                                        "tcp"
                                      ],
                                      "type": "string",
                                      "default": "http"
                                    },
                                    "unhealthy": {
                                      "type": "object",
                                      "properties": {
                                        "interval": {
                                          "default": 1,
                                          "type": "integer",
                                          "minimum": 1
                                        },
                                        "http_failures": {
                                          "maximum": 254,
                                          "default": 5,
                                          "type": "integer",
                                          "minimum": 1
                                        },
                                        "tcp_failures": {
                                          "maximum": 254,
                                          "default": 2,
                                          "type": "integer",
                                          "minimum": 1
                                        },
                                        "timeouts": {
                                          "maximum": 254,
                                          "default": 3,
                                          "type": "integer",
                                          "minimum": 1
                                        },
                                        "http_statuses": {
                                          "items": {
                                            "maximum": 599,
                                            "type": "integer",
                                            "minimum": 200
                                          },
                                          "uniqueItems": true,
                                          "default": [
                                            429,
                                            404,
                                            500,
                                            501,
                                            502,
                                            503,
                                            504,
                                            505
                                          ],
                                          "type": "array",
                                          "minItems": 1
                                        }
                                      }
                                    },
                                    "timeout": {
                                      "type": "number",
                                      "default": 1
                                    },
                                    "concurrency": {
                                      "type": "integer",
                                      "default": 10
                                    },
                                    "healthy": {
                                      "type": "object",
                                      "properties": {
                                        "interval": {
                                          "default": 1,
                                          "type": "integer",
                                          "minimum": 1
                                        },
                                        "successes": {
                                          "maximum": 254,
                                          "default": 2,
                                          "type": "integer",
                                          "minimum": 1
                                        },
                                        "http_statuses": {
                                          "items": {
                                            "maximum": 599,
                                            "type": "integer",
                                            "minimum": 200
                                          },
                                          "uniqueItems": true,
                                          "default": [
                                            200,
                                            302
                                          ],
                                          "type": "array",
                                          "minItems": 1
                                        }
                                      }
                                    },
                                    "port": {
                                      "maximum": 65535,
                                      "type": "integer",
                                      "minimum": 1
                                    },
                                    "http_path": {
                                      "type": "string",
                                      "default": "/"
                                    }
                                  }
                                }
                              }
                            },
                            "keepalive_pool": {
                              "type": "object",
                              "properties": {
                                "size": {
                                  "default": 320,
                                  "type": "integer",
                                  "minimum": 1
                                },
                                "idle_timeout": {
                                  "default": 60,
                                  "type": "number",
                                  "minimum": 0
                                },
                                "requests": {
                                  "default": 1000,
                                  "type": "integer",
                                  "minimum": 1
                                }
                              }
                            },
                            "pass_host": {
                              "default": "pass",
                              "enum": [
                                "pass",
                                "node",
                                "rewrite"
                              ],
                              "description": "mod of host passing",
                              "type": "string"
                            },
                            "nodes": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "patternProperties": {
                                    ".*": {
                                      "type": "integer",
                                      "description": "weight of node",
                                      "minimum": 0
                                    }
                                  }
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "required": [
                                      "host",
                                      "port",
                                      "weight"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "weight": {
                                        "type": "integer",
                                        "description": "weight of node",
                                        "minimum": 0
                                      },
                                      "host": {
                                        "type": "string",
                                        "pattern": "^\\*?[0-9a-zA-Z-._]+$"
                                      },
                                      "metadata": {
                                        "description": "metadata of node",
                                        "type": "object"
                                      },
                                      "priority": {
                                        "default": 0,
                                        "description": "priority of node",
                                        "type": "integer"
                                      },
                                      "port": {
                                        "type": "integer",
                                        "description": "port of node",
                                        "minimum": 1
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "create_time": {
                              "type": "integer"
                            },
                            "retries": {
                              "type": "integer",
                              "minimum": 0
                            },
                            "retry_timeout": {
                              "type": "number",
                              "minimum": 0
                            },
                            "tls": {
                              "required": [
                                "client_cert",
                                "client_key"
                              ],
                              "type": "object",
                              "properties": {
                                "client_cert": {
                                  "maxLength": 65536,
                                  "type": "string",
                                  "minLength": 128
                                },
                                "client_key": {
                                  "maxLength": 65536,
                                  "type": "string",
                                  "minLength": 128
                                }
                              }
                            },
                            "type": {
                              "description": "algorithms of load balancing",
                              "type": "string"
                            },
                            "update_time": {
                              "type": "integer"
                            },
                            "hash_on": {
                              "default": "vars",
                              "type": "string",
                              "enum": [
                                "vars",
                                "header",
                                "cookie",
                                "consumer",
                                "vars_combinations"
                              ]
                            },
                            "upstream_host": {
                              "type": "string",
                              "pattern": "^\\*?[0-9a-zA-Z-._]+$"
                            },
                            "service_name": {
                              "maxLength": 256,
                              "type": "string",
                              "minLength": 1
                            },
                            "name": {
                              "maxLength": 100,
                              "type": "string",
                              "minLength": 1
                            },
                            "id": {
                              "anyOf": [
                                {
                                  "maxLength": 64,
                                  "pattern": "^[a-zA-Z0-9-_.]+$",
                                  "type": "string",
                                  "minLength": 1
                                },
                                {
                                  "type": "integer",
                                  "minimum": 1
                                }
                              ]
                            },
                            "key": {
                              "description": "the key of chash for dynamic load balancing",
                              "type": "string"
                            },
                            "timeout": {
                              "required": [
                                "connect",
                                "send",
                                "read"
                              ],
                              "type": "object",
                              "properties": {
                                "connect": {
                                  "type": "number",
                                  "exclusiveMinimum": 0
                                },
                                "read": {
                                  "type": "number",
                                  "exclusiveMinimum": 0
                                },
                                "send": {
                                  "type": "number",
                                  "exclusiveMinimum": 0
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "maxItems": 20,
                    "default": [
                      {
                        "weight": 1
                      }
                    ],
                    "type": "array",
                    "minItems": 1
                  }
                }
              }
            },
            "disable": {
              "type": "boolean"
            }
          }
        },
        "version": 0.1
      },
      "udp-logger": {
        "priority": 400,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "host",
            "port"
          ],
          "type": "object",
          "properties": {
            "disable": {
              "type": "boolean"
            },
            "host": {
              "type": "string"
            },
            "max_retry_count": {
              "default": 0,
              "type": "integer",
              "minimum": 0
            },
            "retry_delay": {
              "default": 1,
              "type": "integer",
              "minimum": 0
            },
            "inactive_timeout": {
              "default": 5,
              "type": "integer",
              "minimum": 1
            },
            "name": {
              "type": "string",
              "default": "udp logger"
            },
            "batch_max_size": {
              "default": 1000,
              "type": "integer",
              "minimum": 1
            },
            "buffer_duration": {
              "default": 60,
              "type": "integer",
              "minimum": 1
            },
            "include_req_body": {
              "type": "boolean",
              "default": false
            },
            "port": {
              "type": "integer",
              "minimum": 0
            },
            "timeout": {
              "default": 3,
              "type": "integer",
              "minimum": 1
            }
          }
        },
        "version": 0.1
      },
      "referer-restriction": {
        "priority": 2990,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "oneOf": [
            {
              "required": [
                "whitelist"
              ]
            },
            {
              "required": [
                "blacklist"
              ]
            }
          ],
          "type": "object",
          "properties": {
            "blacklist": {
              "items": {
                "type": "string",
                "pattern": "^\\*?[0-9a-zA-Z-._]+$"
              },
              "type": "array",
              "minItems": 1
            },
            "bypass_missing": {
              "type": "boolean",
              "default": false
            },
            "disable": {
              "type": "boolean"
            },
            "message": {
              "maxLength": 1024,
              "default": "Your referer host is not allowed",
              "type": "string",
              "minLength": 1
            },
            "whitelist": {
              "items": {
                "type": "string",
                "pattern": "^\\*?[0-9a-zA-Z-._]+$"
              },
              "type": "array",
              "minItems": 1
            }
          }
        },
        "version": 0.1
      }
    },
    "stream_plugins": {
      "ip-restriction": {
        "priority": 3000,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "oneOf": [
            {
              "required": [
                "whitelist"
              ]
            },
            {
              "required": [
                "blacklist"
              ]
            }
          ],
          "type": "object",
          "properties": {
            "blacklist": {
              "items": {
                "anyOf": [
                  {
                    "title": "IPv4",
                    "type": "string",
                    "format": "ipv4"
                  },
                  {
                    "title": "IPv4/CIDR",
                    "type": "string",
                    "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$"
                  },
                  {
                    "title": "IPv6",
                    "type": "string",
                    "format": "ipv6"
                  },
                  {
                    "title": "IPv6/CIDR",
                    "type": "string",
                    "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$"
                  }
                ]
              },
              "type": "array",
              "minItems": 1
            },
            "disable": {
              "type": "boolean"
            },
            "message": {
              "maxLength": 1024,
              "default": "Your IP address is not allowed",
              "type": "string",
              "minLength": 1
            },
            "whitelist": {
              "items": {
                "anyOf": [
                  {
                    "title": "IPv4",
                    "type": "string",
                    "format": "ipv4"
                  },
                  {
                    "title": "IPv4/CIDR",
                    "type": "string",
                    "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$"
                  },
                  {
                    "title": "IPv6",
                    "type": "string",
                    "format": "ipv6"
                  },
                  {
                    "title": "IPv6/CIDR",
                    "type": "string",
                    "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$"
                  }
                ]
              },
              "type": "array",
              "minItems": 1
            }
          }
        },
        "version": 0.1
      },
      "mqtt-proxy": {
        "priority": 1000,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "protocol_name",
            "protocol_level"
          ],
          "type": "object",
          "properties": {
            "protocol_level": {
              "type": "integer"
            },
            "disable": {
              "type": "boolean"
            },
            "upstream": {
              "type": "object",
              "oneOf": [
                {
                  "required": [
                    "host",
                    "port"
                  ]
                },
                {
                  "required": [
                    "ip",
                    "port"
                  ]
                }
              ],
              "description": "Deprecated. We should configure upstream outside of the plugin",
              "properties": {
                "host": {
                  "type": "string"
                },
                "ip": {
                  "type": "string"
                },
                "port": {
                  "type": "number"
                }
              }
            },
            "protocol_name": {
              "type": "string"
            }
          }
        },
        "version": 0.1
      },
      "limit-conn": {
        "priority": 1003,
        "schema": {
          "$comment": "this is a mark for our injected plugin schema",
          "required": [
            "conn",
            "burst",
            "default_conn_delay",
            "key"
          ],
          "type": "object",
          "properties": {
            "key_type": {
              "enum": [
                "var",
                "var_combination"
              ],
              "type": "string",
              "default": "var"
            },
            "conn": {
              "type": "integer",
              "exclusiveMinimum": 0
            },
            "key": {
              "type": "string"
            },
            "disable": {
              "type": "boolean"
            },
            "burst": {
              "type": "integer",
              "minimum": 0
            },
            "default_conn_delay": {
              "type": "number",
              "exclusiveMinimum": 0
            },
            "only_use_default_delay": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "version": 0.1
      }
    }
  }