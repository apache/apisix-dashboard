name: Backend E2E Test

on:
  push:
    branches:
      - master
      - next
    paths:
      - 'api/**'
  pull_request:
    branches:
      - master
      - next
    paths:
      - 'api/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/master' && github.run_number || github.ref }}
  cancel-in-progress: true

jobs:
  backend-e2e-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: setup go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"

      - uses: docker/setup-buildx-action@v2

      - uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-apisixdashboard-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-apisixdashboard-
            ${{ runner.os }}-buildx-

      - name: Modify conf.yaml Configure for use by the manage-api cluster
        working-directory: ./api/config
        run: |
          sed -i 's/127.0.0.1:9180/172.16.238.30:9180/' config.yaml
          cat config.yaml

      - name: build docker images
        working-directory: ./api/test/docker
        continue-on-error: true
        run: |
          docker buildx bake --load \
          -f docker-compose.yaml \
          --set *.cache-from=type=local,src=/tmp/.buildx-cache \
          --set *.cache-to=type=local,dest=/tmp/.buildx-cache

      - name: run docker compose
        working-directory: ./api/test/docker
        run: |
          docker-compose up -d
          sleep 5
          docker logs docker_managerapi_1

      - name: install ginkgo cli
        run: |
          export GOPROXY="https://goproxy.cn" && go get github.com/onsi/ginkgo/ginkgo@v1.16.5

      - name: run test
        working-directory: ./api/test/e2e
        run: ginkgo -r

      - name: stop docker compose
        working-directory: ./api/test/docker
        run: |
          docker-compose down
          sleep 10

      - name: output test coverage
        working-directory: ./api/test/testdata
        run: |
          go tool cover -func=./integrationcover.out

      - name: upload coverage profile
        working-directory: ./api/test/testdata
        run: |
          bash <(curl -s https://codecov.io/bash) -f ./integrationcover.out -F backend-e2e-test-ginkgo
