version: "3"

services:
  apisix:
    image: apache/apisix:dev
    restart: always
    volumes:
      - ./apisix_log:/usr/local/apisix/logs
      - ./apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
    depends_on:
      - etcd
    ##network_mode: host
    ports:
      - "9080:9080/tcp"
      - "9443:9443/tcp"
    networks:
      apisix-dashboard:
        ipv4_address: 192.17.5.11

  etcd:
    image: gcr.io/etcd-development/etcd:v3.3.12
    command: /usr/local/bin/etcd --advertise-client-urls http://0.0.0.0:2379 --listen-client-urls http://0.0.0.0:2379
    restart: always
    volumes:
      - ./etcd_data:/etcd_data
    environment:
      ETCD_DATA_DIR: /etcd_data
    ports:
      - "2379:2379/tcp"
    networks:
      apisix-dashboard:
        ipv4_address: 192.17.5.10

  web1:
    image: ruby:2-alpine
    command: sh -c "mkdir -p /tmp/www && echo 'web1' > /tmp/www/web1.txt && ruby -run -ehttpd /tmp/www -p8000"
    restart: always
    ports:
      - "9081:8000/tcp"
    networks:
      apisix-dashboard:
        ipv4_address: 192.17.5.12

  web2:
    image: ruby:2-alpine
    command: sh -c "mkdir -p /tmp/www && echo 'web2' > /tmp/www/web2.txt && ruby -run -ehttpd /tmp/www -p8000"
    restart: always
    ports:
      - "9082:8000/tcp"
    networks:
      apisix-dashboard:
        ipv4_address: 192.17.5.13

  mysql:
    image: mysql:latest
    restart: always
    ports:
      - "3309:3306/tcp"
    environment:
      - MYSQL_ROOT_PASSWORD=123456
    volumes:
      - /tmp/datadir:/var/lib/mysql
      - /tmp/conf.d:/etc/mysql/conf.d
      - ../api/script/db:/docker-entrypoint-initdb.d
    networks:
      apisix-dashboard:
        ipv4_address: 192.17.5.14

  manager:
    build:
      context: ./../api
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080:8080/tcp"
    environment:
      - ENV=prod
    volumes:
      - ./manager_conf/build.sh:/root/manager-api/build.sh
    networks:
      apisix-dashboard:
        ipv4_address: 192.17.5.15

  prometheus:
    image: prom/prometheus
    hostname: prometheus
    restart: always
    volumes:
      - ./prometheus_conf/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      apisix-dashboard:
        ipv4_address: 192.17.5.16

  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - "./grafana_conf/provisioning:/etc/grafana/provisioning"
      - "./grafana_conf/dashboards:/var/lib/grafana/dashboards"
      - "./grafana_conf/config/grafana.ini:/etc/grafana/grafana.ini"
    networks:
      apisix-dashboard:
        ipv4_address: 192.17.5.17

  dashboard:
    build:
      context: ./..
      dockerfile: Dockerfile
    restart: always
    ports:
      - "80:80/tcp"

networks:
  apisix-dashboard:
    driver: bridge
    ipam:
      config:
      - subnet: 192.17.0.0/16
